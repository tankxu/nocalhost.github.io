{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Nocalhost"},{"location":"deployment/","text":"Before start Prerequisites: A Kubernetes(1.16+) Cluster(prefer to be provided by the Cloud platform or Minikube) Configure kubectl for you to be able to access above cluster as admin RBAC must be enabled in above cluster Install Helm3 Install Git Kubernetes provided This document requires Kubernetes provided by Cloud Platform, such as Tencent TKE. If you ues Minikube, please see here Deploy Nocalhost Server with Helm Use the helm method to deploy Nocalhost, you can make some custom changes to the deployed components. The helm chart content is: # Default values for nocalhost-api. # This is a YAML-formatted file. # Declare variables to be passed into your templates. replicaCount : 1 api : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-api pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest web : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-web pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest imagePullSecrets : [] nameOverride : \"\" fullnameOverride : \"\" podAnnotations : {} podSecurityContext : {} # fsGroup: 2000 securityContext : {} # capabilities: # drop: # - ALL # readOnlyRootFilesystem: true # runAsNonRoot: true # runAsUser: 1000 #Service type, if your Kubernetes cluster does not have a LoadBalancer service, you can change it to a NodePort service service : type : LoadBalancer port : 80 resources : {} # We usually recommend not to specify default resources and to leave this as a conscious # choice for the user. This also increases chances charts run on environments with little # resources, such as Minikube. If you do want to specify resources, uncomment the following # lines, adjust them as necessary, and remove the curly braces after 'resources:'. # limits: # cpu: 100m # memory: 128Mi # requests: # cpu: 100m # memory: 128Mi autoscaling : enabled : false minReplicas : 1 maxReplicas : 100 targetCPUUtilizationPercentage : 80 # targetMemoryUtilizationPercentage: 80 nodeSelector : {} tolerations : [] affinity : {} mariadb : fullnameOverride : nocalhost-mariadb commonAnnotations : { \"helm.sh/hook\" : \"pre-install\" , \"helm.sh/hook-weight\" : \"1\" } image : registry : codingcorp-docker.pkg.coding.net/nocalhost/public repository : mariadb auth : rootPassword : root database : nocalhost primary : persistence : size : \"10Gi\" extraVolumes : - name : nocalhost-api-sql-config-volume configMap : name : nocalhost-api-sql-init-config defaultMode : 0755 extraVolumeMounts : - name : nocalhost-api-sql-config-volume mountPath : /docker-entrypoint-initdb.d/ # initdbScripts: # my_init_script.sh: | # #!/bin/bash # echo \"init database\" # mysql -u root -p root nocalhost < /opt/init-sql/nocalhost.sql Step 1: Clone the nocalhost git repository git clone https://github.com/nocalhost/nocalhost.git Step 2: Install nocalhost server with helm helm install nocalhost-server ./nocalhost/deployments/chart --kubeconfig = ./cls-pc5oy0lu-config Waiting for the initialization process: Get the public network address of nocalhost-web service And then, you can access nocalhost web in your bowser. The default account's Email is: admin@admin.com The default account's password is: 123456 Deploy Nocalhost Server with nhctl init Step 1: Install nocalhost command-line tool(nhctl) See installation to install nhctl. Step 2: Install nocalhost server with nhctl nhctl init -n nocalhost --kubeconfig = ./cls-pc5oy0lu-config Waiting for the initialization process: Get the nocalhost-web service's public network address And then, you can access nocalhost web in your bowser. The default account's Email is: admin@admin.com The default account's password is: 123456","title":"Deploy Nocalhost Server"},{"location":"deployment/#before-start","text":"Prerequisites: A Kubernetes(1.16+) Cluster(prefer to be provided by the Cloud platform or Minikube) Configure kubectl for you to be able to access above cluster as admin RBAC must be enabled in above cluster Install Helm3 Install Git Kubernetes provided This document requires Kubernetes provided by Cloud Platform, such as Tencent TKE. If you ues Minikube, please see here","title":"Before start"},{"location":"deployment/#deploy-nocalhost-server-with-helm","text":"Use the helm method to deploy Nocalhost, you can make some custom changes to the deployed components. The helm chart content is: # Default values for nocalhost-api. # This is a YAML-formatted file. # Declare variables to be passed into your templates. replicaCount : 1 api : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-api pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest web : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-web pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest imagePullSecrets : [] nameOverride : \"\" fullnameOverride : \"\" podAnnotations : {} podSecurityContext : {} # fsGroup: 2000 securityContext : {} # capabilities: # drop: # - ALL # readOnlyRootFilesystem: true # runAsNonRoot: true # runAsUser: 1000 #Service type, if your Kubernetes cluster does not have a LoadBalancer service, you can change it to a NodePort service service : type : LoadBalancer port : 80 resources : {} # We usually recommend not to specify default resources and to leave this as a conscious # choice for the user. This also increases chances charts run on environments with little # resources, such as Minikube. If you do want to specify resources, uncomment the following # lines, adjust them as necessary, and remove the curly braces after 'resources:'. # limits: # cpu: 100m # memory: 128Mi # requests: # cpu: 100m # memory: 128Mi autoscaling : enabled : false minReplicas : 1 maxReplicas : 100 targetCPUUtilizationPercentage : 80 # targetMemoryUtilizationPercentage: 80 nodeSelector : {} tolerations : [] affinity : {} mariadb : fullnameOverride : nocalhost-mariadb commonAnnotations : { \"helm.sh/hook\" : \"pre-install\" , \"helm.sh/hook-weight\" : \"1\" } image : registry : codingcorp-docker.pkg.coding.net/nocalhost/public repository : mariadb auth : rootPassword : root database : nocalhost primary : persistence : size : \"10Gi\" extraVolumes : - name : nocalhost-api-sql-config-volume configMap : name : nocalhost-api-sql-init-config defaultMode : 0755 extraVolumeMounts : - name : nocalhost-api-sql-config-volume mountPath : /docker-entrypoint-initdb.d/ # initdbScripts: # my_init_script.sh: | # #!/bin/bash # echo \"init database\" # mysql -u root -p root nocalhost < /opt/init-sql/nocalhost.sql","title":"Deploy Nocalhost Server with Helm"},{"location":"deployment/#step-1-clone-the-nocalhost-git-repository","text":"git clone https://github.com/nocalhost/nocalhost.git","title":"Step 1: Clone the nocalhost git repository"},{"location":"deployment/#step-2-install-nocalhost-server-with-helm","text":"helm install nocalhost-server ./nocalhost/deployments/chart --kubeconfig = ./cls-pc5oy0lu-config Waiting for the initialization process: Get the public network address of nocalhost-web service And then, you can access nocalhost web in your bowser. The default account's Email is: admin@admin.com The default account's password is: 123456","title":"Step 2: Install nocalhost server with helm"},{"location":"deployment/#deploy-nocalhost-server-with-nhctl-init","text":"","title":"Deploy Nocalhost Server with nhctl init"},{"location":"deployment/#step-1-install-nocalhost-command-line-toolnhctl","text":"See installation to install nhctl.","title":"Step 1: Install nocalhost command-line tool(nhctl)"},{"location":"deployment/#step-2-install-nocalhost-server-with-nhctl","text":"nhctl init -n nocalhost --kubeconfig = ./cls-pc5oy0lu-config Waiting for the initialization process: Get the nocalhost-web service's public network address And then, you can access nocalhost web in your bowser. The default account's Email is: admin@admin.com The default account's password is: 123456","title":"Step 2: Install nocalhost server with nhctl"},{"location":"getting-started/","text":"Before start Prerequisites: A Kubernetes(1.16+) Cluster(prefer to be provided by the Cloud platform or Minikube, 2 Core 4 Gi memory) Configure kubectl for you to be able to access above cluster as admin RBAC must be enabled in above cluster Install Helm3 Install Visual Studio Code(1.52+) Install Git Kubernetes api-server can be accessed internal and external Step 1: Install nhctl and VSCode extension Reference link: https://nocalhost.dev/installation/ Step 2: Initialize the cluster and setup Nocalhost Server Option 1: Kubernetes provided by the Cloud platform, such as Tencent TKE For TKE clusters, configure open external network access: 0.0.0.0/0 or cluster egress IP to achieve access to the Kubernetes api-server internal and external. Initialize at terminal: nhctl init -n nocalhost -p 7000 Option 2: If you use a Kubernetes cluster such as minikube, kind, k3s, microk8s, etc., use the following command to initialize: nhctl init -n nocalhost -t nodeport About Kubernetes without LoadBalancer and PV Use NodePort instead of LoadBalancer, close DB persistence(DO NOT USE FOR PRODUCTION) nhctl init -n nocalhost -t nodeport -p 7000 --force --set mariadb.primary.persistence.enabled=false Waiting for the initialization process: After the initialization: [MINIKUBE WARN]: Please do not close above terminal for the port to be able to keep forwarding nhctl init command flags --namespace: to specify which namespace to install.(create automately) --port: to specify which port Nocalhost Web to listen.(Default 80) --set: to overide values for Nocalhost's Helm Chart --type: to specify service type of Nocalhost Web(nodeport or loadbalaner) --force: to specify if delete old data before initialization Step 3: Configure and login Nocalhost Server in VSCode Open the VSCode extension page, click on the \u201cConfig Server URL\u201d button at left: Input the access address from Step Two, press Enter to save Input the username and password respectively, press Enter to save: Username: foo@nocalhost.dev Password: 123456 After login, you can find: Step 4: Install demo application: bookinfo Click the installation icon at the left to install application bookinfo After it, Nocalhost starts to execute the installation. You can click on the refresh icon to check the status of installation and startup process After all microservices startup, you will find Now, you can visit the appliction website: http://127.0.0.1:39080/productpage Step 5: Start DevMode Switch the service to the DevMode by clicking on the green hammer icon. Select \u201cClone from Git repo\u201d and specify a local address for Nocalhost to clone the source code. After the source code is checked out, Nocalhost will open a new VSCode window, and continue to switch to the DevMode. When it is completed (it will take long time when it is the first time to run it), you will find: Under the DevMode, the main process will not startup by default for the DevContainer, and therefore it will not respond the request from the website. While refresh the webpage, the webpage will be on error and will be recovered, until you start up again. You can execute sh run.sh to start your process. Step 6: Change the code and check the result You can try to change a piece of code, refresh and check the result. For example: add \"Hello Nocalhost!\" at line 355 in the file productpage.py. Do not forget to save the file. \ud83d\ude0e Refresh the webpage, here is the outcome: http://127.0.0.1:39080/productpage \ud83d\ude04 Congratulations! You have had a great experience about the Cloud Native development through above Nocalhost simple tutorial. You can start to try to configure and use the Nocalhost in the real project now. Any feedback is welcomed. Github Issues: https://github.com/nocalhost/nocalhost","title":"Getting started"},{"location":"getting-started/#before-start","text":"Prerequisites: A Kubernetes(1.16+) Cluster(prefer to be provided by the Cloud platform or Minikube, 2 Core 4 Gi memory) Configure kubectl for you to be able to access above cluster as admin RBAC must be enabled in above cluster Install Helm3 Install Visual Studio Code(1.52+) Install Git Kubernetes api-server can be accessed internal and external","title":"Before start"},{"location":"getting-started/#step-1-install-nhctl-and-vscode-extension","text":"Reference link: https://nocalhost.dev/installation/","title":"Step 1: Install nhctl and VSCode extension"},{"location":"getting-started/#step-2-initialize-the-cluster-and-setup-nocalhost-server","text":"Option 1: Kubernetes provided by the Cloud platform, such as Tencent TKE For TKE clusters, configure open external network access: 0.0.0.0/0 or cluster egress IP to achieve access to the Kubernetes api-server internal and external. Initialize at terminal: nhctl init -n nocalhost -p 7000 Option 2: If you use a Kubernetes cluster such as minikube, kind, k3s, microk8s, etc., use the following command to initialize: nhctl init -n nocalhost -t nodeport About Kubernetes without LoadBalancer and PV Use NodePort instead of LoadBalancer, close DB persistence(DO NOT USE FOR PRODUCTION) nhctl init -n nocalhost -t nodeport -p 7000 --force --set mariadb.primary.persistence.enabled=false Waiting for the initialization process: After the initialization: [MINIKUBE WARN]: Please do not close above terminal for the port to be able to keep forwarding nhctl init command flags --namespace: to specify which namespace to install.(create automately) --port: to specify which port Nocalhost Web to listen.(Default 80) --set: to overide values for Nocalhost's Helm Chart --type: to specify service type of Nocalhost Web(nodeport or loadbalaner) --force: to specify if delete old data before initialization","title":"Step 2: Initialize the cluster and setup Nocalhost Server"},{"location":"getting-started/#step-3-configure-and-login-nocalhost-server-in-vscode","text":"Open the VSCode extension page, click on the \u201cConfig Server URL\u201d button at left: Input the access address from Step Two, press Enter to save Input the username and password respectively, press Enter to save: Username: foo@nocalhost.dev Password: 123456 After login, you can find:","title":"Step 3: Configure and login Nocalhost Server in VSCode"},{"location":"getting-started/#step-4-install-demo-application-bookinfo","text":"Click the installation icon at the left to install application bookinfo After it, Nocalhost starts to execute the installation. You can click on the refresh icon to check the status of installation and startup process After all microservices startup, you will find Now, you can visit the appliction website: http://127.0.0.1:39080/productpage","title":"Step 4: Install demo application: bookinfo"},{"location":"getting-started/#step-5-start-devmode","text":"Switch the service to the DevMode by clicking on the green hammer icon. Select \u201cClone from Git repo\u201d and specify a local address for Nocalhost to clone the source code. After the source code is checked out, Nocalhost will open a new VSCode window, and continue to switch to the DevMode. When it is completed (it will take long time when it is the first time to run it), you will find: Under the DevMode, the main process will not startup by default for the DevContainer, and therefore it will not respond the request from the website. While refresh the webpage, the webpage will be on error and will be recovered, until you start up again. You can execute sh run.sh to start your process.","title":"Step 5: Start DevMode"},{"location":"getting-started/#step-6-change-the-code-and-check-the-result","text":"You can try to change a piece of code, refresh and check the result. For example: add \"Hello Nocalhost!\" at line 355 in the file productpage.py. Do not forget to save the file. \ud83d\ude0e Refresh the webpage, here is the outcome: http://127.0.0.1:39080/productpage \ud83d\ude04","title":"Step 6: Change the code and check the result"},{"location":"getting-started/#congratulations","text":"You have had a great experience about the Cloud Native development through above Nocalhost simple tutorial. You can start to try to configure and use the Nocalhost in the real project now. Any feedback is welcomed. Github Issues: https://github.com/nocalhost/nocalhost","title":"Congratulations!"},{"location":"installation/","text":"Prerequisites To use nocalhost, please make sure that git , kubectl and helm are installed. nhctl The Nocalhost command-line tool: nhctl, allows you to run commands against Nocalhost. You can use nhctl to install application, switch services to DevMode, sync codes, forward ports. See nhctl for full list of sub commands. Install nhctl on Linux Install nhctl binary with curl on Linux Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version Install nhctl using package management Homebrew If you are on Linux and using Homebrew package manager, nhctl is available for installation . brew install nocalhost/repo/nocalhost nhctl version Install nhctl on macOS Install nhctl binary with curl on macOS Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version Install nhctl with Homebrew on macOS Run the installation command brew install nocalhost/repo/nocalhost Test you installed nhctl version Install nhctl on Windows Install nhctl with installer Download the installer file from this link . Use the installer to install nhctl, kubectl and helm. It will automatically add the installation directory to your PATH. Open the CMD or PowerShell, test you installed. nhctl version Install nhctl binary on Windows Download the latest release from this link . Or if you have curl installed, use this command: curl -L \"https://github.com/nocalhost/nocalhost/releases/latest/download/nhctl-windows-amd64.exe\" -o nhctl.exe Add nhctl binary in to your PATH. Test you installed. nhctl version You will see: nhctl: Nocalhost CLI Version: v0.0.5 Git commit: 605cbf149a4b4d8983111b8984111365a5f54192 Built: Sat Dec 12 13:29:03 2020 OS/Arch: linux/amd64 Go version: go1.14.4 Install Nocalhost VScode Plugin The Nocalhost VScode Plugin allows you to use Nocalhost on VSCode Editor. You can install application, open DevSpace, start DevMode in VSCode conveniently. Install Nocalhost VScode Plugin on VScode Marketplace Follow this link: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost Or Install Nocalhost VScode Plugin on VScode Editor Open the VScode Editor, and click left bar \"Extensions\" icon. Type \"nocalhost\" in the search input box. Select the \"nocalhost-vscode-plugin\", and the click install button to install.","title":"Installation"},{"location":"installation/#nhctl","text":"The Nocalhost command-line tool: nhctl, allows you to run commands against Nocalhost. You can use nhctl to install application, switch services to DevMode, sync codes, forward ports. See nhctl for full list of sub commands.","title":"nhctl"},{"location":"installation/#install-nhctl-on-linux","text":"","title":"Install nhctl on Linux"},{"location":"installation/#install-nhctl-binary-with-curl-on-linux","text":"Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version","title":"Install nhctl binary with curl on Linux"},{"location":"installation/#install-nhctl-using-package-management","text":"Homebrew If you are on Linux and using Homebrew package manager, nhctl is available for installation . brew install nocalhost/repo/nocalhost nhctl version","title":"Install nhctl using package management"},{"location":"installation/#install-nhctl-on-macos","text":"","title":"Install nhctl on macOS"},{"location":"installation/#install-nhctl-binary-with-curl-on-macos","text":"Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version","title":"Install nhctl binary with curl on macOS"},{"location":"installation/#install-nhctl-with-homebrew-on-macos","text":"Run the installation command brew install nocalhost/repo/nocalhost Test you installed nhctl version","title":"Install nhctl with Homebrew on macOS"},{"location":"installation/#install-nhctl-on-windows","text":"","title":"Install nhctl on Windows"},{"location":"installation/#install-nhctl-with-installer","text":"Download the installer file from this link . Use the installer to install nhctl, kubectl and helm. It will automatically add the installation directory to your PATH. Open the CMD or PowerShell, test you installed. nhctl version","title":"Install nhctl with installer"},{"location":"installation/#install-nhctl-binary-on-windows","text":"Download the latest release from this link . Or if you have curl installed, use this command: curl -L \"https://github.com/nocalhost/nocalhost/releases/latest/download/nhctl-windows-amd64.exe\" -o nhctl.exe Add nhctl binary in to your PATH. Test you installed. nhctl version You will see: nhctl: Nocalhost CLI Version: v0.0.5 Git commit: 605cbf149a4b4d8983111b8984111365a5f54192 Built: Sat Dec 12 13:29:03 2020 OS/Arch: linux/amd64 Go version: go1.14.4","title":"Install nhctl binary on Windows"},{"location":"installation/#install-nocalhost-vscode-plugin","text":"The Nocalhost VScode Plugin allows you to use Nocalhost on VSCode Editor. You can install application, open DevSpace, start DevMode in VSCode conveniently.","title":"Install Nocalhost VScode Plugin"},{"location":"installation/#install-nocalhost-vscode-plugin-on-vscode-marketplace","text":"Follow this link: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost","title":"Install Nocalhost VScode Plugin on VScode Marketplace"},{"location":"installation/#or-install-nocalhost-vscode-plugin-on-vscode-editor","text":"Open the VScode Editor, and click left bar \"Extensions\" icon. Type \"nocalhost\" in the search input box. Select the \"nocalhost-vscode-plugin\", and the click install button to install.","title":"Or Install Nocalhost VScode Plugin on VScode Editor"},{"location":"zh/","text":"","title":"Nocalhost"},{"location":"Blog/redefine-cloud-native-dev-environment/","text":"Nocalhost - Redefine Cloud Native Dev Environment Preface With the rapid development of business, the organizational structure of the technical department has been continuously expanded and adjusted horizontally and vertically. At the same time, the enterprise's production materials: application systems, have also become larger and larger. In order to adapt the application system to the adjustment of the enterprise organizational structure and sort out the boundaries of the organizational structure for application rights and responsibilities, most organizations will choose to use the \"microservice\" architecture to split the application system horizontally, so that the maintenance boundary of the application system is adapted The power and responsibility boundary of the organizational structure. Generally speaking, the larger the organizational structure, the more detailed the application system will be, and the number of \"microservices\" will also increase. In the practice of splitting \"microservices\", it is easy to mark the authority and responsibility boundaries of the organizational structure into the splitting granularity of \"microservices\", which may lead to too fine granularity of \"microservices\". The problem of further sharp increase in number. In the end, the calling relationship between \"microservices\" is like cross-departmental collaboration, and it has become more and more complex. The problem is particularly prominent when you want to add new requirements. While \"microservices\" bring convenience, it also brings additional challenges for developers: how to quickly start a complete development environment? The development requirements depend on how other colleagues can coordinate and debug? How to quickly debug these microservices? For managers, it also brings a series of challenges: how to manage the development environment of developers? How to let new colleagues quickly develop? Imagine what difficulties would you encounter when developing a cloud-native application consisting of 200 \"microservices\"? Localhost era In the era of monolithic applications, it is extremely friendly to developers. Developers use the local machine to run the application, modify the code to take effect in real time, and visit Localhost through a browser to view the code effect in real time. Monolithic applications are different from \"microservices\" applications. Monolithic applications are organized as \"ALL-IN-ONE\". All calling relationships are limited to their own classes and functions, and the hardware requirements of applications are generally not too high. The development of \"microservice\" applications is quite different. Due to the mutual dependence, when a certain function or microservice needs to be developed, all dependent services have to be activated. With the increase in the number of microservices, more and more local resources are needed to develop applications, which ultimately leads to the local inability to meet the configuration requirements of development. Cloud Native liberates deployment and operation, What about development? The popularity of cloud native and Kubernetes further shields the complexity of \"microservice\" applications, which is mainly reflected in the deployment and operation and maintenance stages. In order to solve the problem of environmental consistency in the development, testing, and production stages of microservice applications, modern microservice application development will package each component into a Docker image and deploy it in the form of workload. Using continuous integration and continuous deployment in the DevOps pipeline, combined with Kubernetes probes, HPA, and application self-healing capabilities, completely liberated the deployment and operation and maintenance of microservice applications. But we overlooked a key node: the development phase. After microservice applications are packaged with Kubernetes workloads, the problem of rapid application startup in the development process is solved. Developers only need to install a single-node Kubernetes cluster locally, such as Minikube, Kind, etc., to quickly start microservice applications. But for developers, the original monolithic application development experience no longer exists. Since the application is difficult to run outside of the Docker container, each code modification needs to go through the following steps: Execute docker build to build the image Execute docker tag to tag the image Execute docker push to push the image to the warehouse Modify the image version of the Kubernetes workload Wait for the mirror pull to end Wait for the Pod to rebuild View the modified code effect This directly slows down the cyclic feedback process of development, and each modification requires several minutes or even ten minutes of waiting time. Redefine Cloud Native Dev Environment Nocalhost is a Cloud Native development environment, hoping to make developing cloud-native applications as primitive and simple as developing a single application. Nocalhost reorganized the roles and resources involved in the development process: Team manager Developer Application Cluster Development Space Through the reintegration of these roles and resources, Nocalhost redefines the cloud-native development environment and brings a new cloud-native development experience. In order to quickly understand the cloud-native development environment redefined by Nocalhost, let us first stand in different roles and see what Nocalhost can bring to them. Developer: Get rid of the need to rebuild a new image for each modification and long-term loop feedback, and the modified code will take effect immediately. One-click deployment of the development environment, get rid of the limitations of local environment construction and insufficient resources. Link between local IDE editor and development environment, support remote debugging. Graphical IDE plug-in, no need to be familiar with kubectl commands to complete development in cloud native environment. Manager: Unified management of microservice application packages, reducing application maintenance costs. Unified management of the development environment and cluster, improve the utilization of cluster resources, and have isolation characteristics. Quickly allocate development environment for new employees, and application development can be carried out immediately after the allocation of the environment. Flexible development environment resources can be destroyed when used up, reducing development costs. Taking Nocalhost's built-in Demo: Bookinfo as an example, the development of Productpage microservices has become the following simple steps: One-click deployment development environment: Environment deployment is complete, select the component to be developed, click \"hammer\" to enter the development mode: Clone business code or select local code directory to open: Enter the development mode, modify the code locally and save it, no need to rebuild the mirror image, the remote development environment takes effect in real time, and supports remote debugging: Landing case Currently, Tencent Cloud CODING DevOps (nearly 200 microservices) is using Nocalhost for development. Practice has verified that Nocalhost can greatly improve development efficiency and shorten feedback loops. Open source and community co-construction Nocalhost is currently fully open source and has entered CNCF Landscape: https://landscape.cncf.io/ Github address: https://github.com/nocalhost/nocalhost. Use Apache-2.0 open source agreement, can use unlimited free. For more information about Nocalhost, please visit the official website: https://nocalhost.dev.","title":"Nocalhost - Redefine Cloud Native Dev Environment"},{"location":"Blog/redefine-cloud-native-dev-environment/#nocalhost-redefine-cloud-native-dev-environment","text":"","title":"Nocalhost - Redefine Cloud Native Dev Environment"},{"location":"Blog/redefine-cloud-native-dev-environment/#preface","text":"With the rapid development of business, the organizational structure of the technical department has been continuously expanded and adjusted horizontally and vertically. At the same time, the enterprise's production materials: application systems, have also become larger and larger. In order to adapt the application system to the adjustment of the enterprise organizational structure and sort out the boundaries of the organizational structure for application rights and responsibilities, most organizations will choose to use the \"microservice\" architecture to split the application system horizontally, so that the maintenance boundary of the application system is adapted The power and responsibility boundary of the organizational structure. Generally speaking, the larger the organizational structure, the more detailed the application system will be, and the number of \"microservices\" will also increase. In the practice of splitting \"microservices\", it is easy to mark the authority and responsibility boundaries of the organizational structure into the splitting granularity of \"microservices\", which may lead to too fine granularity of \"microservices\". The problem of further sharp increase in number. In the end, the calling relationship between \"microservices\" is like cross-departmental collaboration, and it has become more and more complex. The problem is particularly prominent when you want to add new requirements. While \"microservices\" bring convenience, it also brings additional challenges for developers: how to quickly start a complete development environment? The development requirements depend on how other colleagues can coordinate and debug? How to quickly debug these microservices? For managers, it also brings a series of challenges: how to manage the development environment of developers? How to let new colleagues quickly develop? Imagine what difficulties would you encounter when developing a cloud-native application consisting of 200 \"microservices\"?","title":"Preface"},{"location":"Blog/redefine-cloud-native-dev-environment/#localhost-era","text":"In the era of monolithic applications, it is extremely friendly to developers. Developers use the local machine to run the application, modify the code to take effect in real time, and visit Localhost through a browser to view the code effect in real time. Monolithic applications are different from \"microservices\" applications. Monolithic applications are organized as \"ALL-IN-ONE\". All calling relationships are limited to their own classes and functions, and the hardware requirements of applications are generally not too high. The development of \"microservice\" applications is quite different. Due to the mutual dependence, when a certain function or microservice needs to be developed, all dependent services have to be activated. With the increase in the number of microservices, more and more local resources are needed to develop applications, which ultimately leads to the local inability to meet the configuration requirements of development.","title":"Localhost era"},{"location":"Blog/redefine-cloud-native-dev-environment/#cloud-native-liberates-deployment-and-operation-what-about-development","text":"The popularity of cloud native and Kubernetes further shields the complexity of \"microservice\" applications, which is mainly reflected in the deployment and operation and maintenance stages. In order to solve the problem of environmental consistency in the development, testing, and production stages of microservice applications, modern microservice application development will package each component into a Docker image and deploy it in the form of workload. Using continuous integration and continuous deployment in the DevOps pipeline, combined with Kubernetes probes, HPA, and application self-healing capabilities, completely liberated the deployment and operation and maintenance of microservice applications. But we overlooked a key node: the development phase. After microservice applications are packaged with Kubernetes workloads, the problem of rapid application startup in the development process is solved. Developers only need to install a single-node Kubernetes cluster locally, such as Minikube, Kind, etc., to quickly start microservice applications. But for developers, the original monolithic application development experience no longer exists. Since the application is difficult to run outside of the Docker container, each code modification needs to go through the following steps: Execute docker build to build the image Execute docker tag to tag the image Execute docker push to push the image to the warehouse Modify the image version of the Kubernetes workload Wait for the mirror pull to end Wait for the Pod to rebuild View the modified code effect This directly slows down the cyclic feedback process of development, and each modification requires several minutes or even ten minutes of waiting time.","title":"Cloud Native liberates deployment and operation, What about development?"},{"location":"Blog/redefine-cloud-native-dev-environment/#redefine-cloud-native-dev-environment","text":"Nocalhost is a Cloud Native development environment, hoping to make developing cloud-native applications as primitive and simple as developing a single application. Nocalhost reorganized the roles and resources involved in the development process: Team manager Developer Application Cluster Development Space Through the reintegration of these roles and resources, Nocalhost redefines the cloud-native development environment and brings a new cloud-native development experience. In order to quickly understand the cloud-native development environment redefined by Nocalhost, let us first stand in different roles and see what Nocalhost can bring to them. Developer: Get rid of the need to rebuild a new image for each modification and long-term loop feedback, and the modified code will take effect immediately. One-click deployment of the development environment, get rid of the limitations of local environment construction and insufficient resources. Link between local IDE editor and development environment, support remote debugging. Graphical IDE plug-in, no need to be familiar with kubectl commands to complete development in cloud native environment. Manager: Unified management of microservice application packages, reducing application maintenance costs. Unified management of the development environment and cluster, improve the utilization of cluster resources, and have isolation characteristics. Quickly allocate development environment for new employees, and application development can be carried out immediately after the allocation of the environment. Flexible development environment resources can be destroyed when used up, reducing development costs. Taking Nocalhost's built-in Demo: Bookinfo as an example, the development of Productpage microservices has become the following simple steps: One-click deployment development environment: Environment deployment is complete, select the component to be developed, click \"hammer\" to enter the development mode: Clone business code or select local code directory to open: Enter the development mode, modify the code locally and save it, no need to rebuild the mirror image, the remote development environment takes effect in real time, and supports remote debugging:","title":"Redefine Cloud Native Dev Environment"},{"location":"Blog/redefine-cloud-native-dev-environment/#landing-case","text":"Currently, Tencent Cloud CODING DevOps (nearly 200 microservices) is using Nocalhost for development. Practice has verified that Nocalhost can greatly improve development efficiency and shorten feedback loops.","title":"Landing case"},{"location":"Blog/redefine-cloud-native-dev-environment/#open-source-and-community-co-construction","text":"Nocalhost is currently fully open source and has entered CNCF Landscape: https://landscape.cncf.io/ Github address: https://github.com/nocalhost/nocalhost. Use Apache-2.0 open source agreement, can use unlimited free. For more information about Nocalhost, please visit the official website: https://nocalhost.dev.","title":"Open source and community co-construction"},{"location":"Concepts/application/","text":"What is Application Application is a concept of Nocalhost , it is mainly used to manage a set of manifest files you want to apply for local development, it supports both k8s manifest and helm chart. In other words, these manifests usually contain all the k8s resources that your own application depends on. If possible, we should try to keep it to a minimum. Application supports the k8s manifest or helm chart stored in git repository, and supports helm chart stored in Helm Repo . Support for kustomize will be added in the future. What does Application do Application can be used to create a DevSpace , we recommend using IDE plug-in directly to deploy your application, IDE plug-in is worked on the DevSpace created by Application . In other words, after being assigned a DevSpace , the developer can easily develop on the IDE. After being assigned a DevSpace , you will get a kubeconfig to access this DevSpace , nhctl or plug-in can deploy the application based on the application's manifest file and kubeconfig . So DevSpace can actually be approximated as Application + kubeconfig : Application and Manifest Support for Helm Manifest nocalhost supports helm and no need to modify the chart . 1. If you already own and using Helm Chart: helm install helloworld /chart/dir/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig It only takes a moment to push your Helm Chart to any git repository that you have permission to access. We will use the git clone command to get the latest Application information, for example: https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/dir/ Chart.yaml values.yaml charts/ templates/ ... For this repo, the Helm chart is under the mychart/dir/ relative to the root directory , then we can use the following command: nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/bookinfo \\ --kubeconfig ~/.kube/barconfig 2. If you have your own Helm Repo: helm install helloworld \\ mychart \\ - repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig You can use the following commands to install by nhctl : nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig Support for Kubernetes Manifest nocalhost can also support Kubernetes Manifest without any modification of your manifest, but you still need to push it to any git repository: Suppose you have such a git repo like this https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git , which contains many Kubernetes Manifest files: README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 If you want to apply the files in the relative root directory what/ever/ and support/all/dir/inside/ , then use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig If you want to apply all files, you can use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path. \\ --kubeconfig ~/.kube/barconfig Nocalhost enhancements Nocalhost is non-invasive to the user's k8s manifest. If you want to use some enhancements, such as Pre-Install , dependency management, etc. Add the .nocalhost/ folder in your git repo, with file config.yaml . Pre-Install We allow users to perform some additional operations before installing applications. Take bookinfo as an example, before installing the application, we will execute several jobs as declared below, and wait for the completion of the job execution before installing the application. onPreInstall: -path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" -path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" Start dependency management Nocalhost can control the startup sequence of services in the application. For example, the following configuration represents the deployment of reviews , and it will be started after the pod of productpage is available. services: -name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: -./ dependPodsLabelSelector: -\"productpage\" You can click Start Dependency Management to see more. Develop mirror configuration In the above configuration, devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest means that when you enter the Dev-Mode , use this image as a container instead of the original image for development. More If you want to know more configuration information of .nocalhost/ , click: config-yaml-spec . Application best practices Generally, we recommend using Nocalhost-Server + IDE plug-in together. Although nhctl can handle everything, the command line operation is cumbersome to use. We do not recommend using nhctl directly for application deployment and development. Although many examples above use nhctl directly. Take the above example as an example, go directly to Nocalhost-Web to create it. After entering the homepage, switch to the tag named Applications and click on the upper right corner to create: The three manifest types mentioned above are supported, here is kubernetes manifest as an example: Advance Here will explain some additional features or designs of Application, which are not necessary, but will help you use Nocalhost better. Application Name Nocalhost uses a unique Application Name to identify different applications. Note that even if different Nocalhost-Servers are used (for example, two or more Nocalhost-Servers are deployed), the same Application Name is not supported on the same development machine. Application under ~/.nh Note that in the ~/.nh/ directory, nhctl and IDE plug-ins will generate some files to save the current application deployment, development, etc.. usually you don't need to know or use them directly.","title":"Application"},{"location":"Concepts/application/#what-is-application","text":"Application is a concept of Nocalhost , it is mainly used to manage a set of manifest files you want to apply for local development, it supports both k8s manifest and helm chart. In other words, these manifests usually contain all the k8s resources that your own application depends on. If possible, we should try to keep it to a minimum. Application supports the k8s manifest or helm chart stored in git repository, and supports helm chart stored in Helm Repo . Support for kustomize will be added in the future.","title":"What is Application"},{"location":"Concepts/application/#what-does-application-do","text":"Application can be used to create a DevSpace , we recommend using IDE plug-in directly to deploy your application, IDE plug-in is worked on the DevSpace created by Application . In other words, after being assigned a DevSpace , the developer can easily develop on the IDE. After being assigned a DevSpace , you will get a kubeconfig to access this DevSpace , nhctl or plug-in can deploy the application based on the application's manifest file and kubeconfig . So DevSpace can actually be approximated as Application + kubeconfig :","title":"What does Application do"},{"location":"Concepts/application/#application-and-manifest","text":"","title":"Application and Manifest"},{"location":"Concepts/application/#support-for-helm-manifest","text":"nocalhost supports helm and no need to modify the chart .","title":"Support for Helm Manifest"},{"location":"Concepts/application/#1-if-you-already-own-and-using-helm-chart","text":"helm install helloworld /chart/dir/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig It only takes a moment to push your Helm Chart to any git repository that you have permission to access. We will use the git clone command to get the latest Application information, for example: https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/dir/ Chart.yaml values.yaml charts/ templates/ ... For this repo, the Helm chart is under the mychart/dir/ relative to the root directory , then we can use the following command: nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/bookinfo \\ --kubeconfig ~/.kube/barconfig","title":"1. If you already own and using Helm Chart:"},{"location":"Concepts/application/#2-if-you-have-your-own-helm-repo","text":"helm install helloworld \\ mychart \\ - repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig You can use the following commands to install by nhctl : nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig","title":"2. If you have your own Helm Repo:"},{"location":"Concepts/application/#support-for-kubernetes-manifest","text":"nocalhost can also support Kubernetes Manifest without any modification of your manifest, but you still need to push it to any git repository: Suppose you have such a git repo like this https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git , which contains many Kubernetes Manifest files: README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 If you want to apply the files in the relative root directory what/ever/ and support/all/dir/inside/ , then use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig If you want to apply all files, you can use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path. \\ --kubeconfig ~/.kube/barconfig","title":"Support for Kubernetes Manifest"},{"location":"Concepts/application/#nocalhost-enhancements","text":"Nocalhost is non-invasive to the user's k8s manifest. If you want to use some enhancements, such as Pre-Install , dependency management, etc. Add the .nocalhost/ folder in your git repo, with file config.yaml .","title":"Nocalhost enhancements"},{"location":"Concepts/application/#pre-install","text":"We allow users to perform some additional operations before installing applications. Take bookinfo as an example, before installing the application, we will execute several jobs as declared below, and wait for the completion of the job execution before installing the application. onPreInstall: -path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" -path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\"","title":"Pre-Install"},{"location":"Concepts/application/#start-dependency-management","text":"Nocalhost can control the startup sequence of services in the application. For example, the following configuration represents the deployment of reviews , and it will be started after the pod of productpage is available. services: -name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: -./ dependPodsLabelSelector: -\"productpage\" You can click Start Dependency Management to see more.","title":"Start dependency management"},{"location":"Concepts/application/#develop-mirror-configuration","text":"In the above configuration, devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest means that when you enter the Dev-Mode , use this image as a container instead of the original image for development.","title":"Develop mirror configuration"},{"location":"Concepts/application/#more","text":"If you want to know more configuration information of .nocalhost/ , click: config-yaml-spec .","title":"More"},{"location":"Concepts/application/#application-best-practices","text":"Generally, we recommend using Nocalhost-Server + IDE plug-in together. Although nhctl can handle everything, the command line operation is cumbersome to use. We do not recommend using nhctl directly for application deployment and development. Although many examples above use nhctl directly. Take the above example as an example, go directly to Nocalhost-Web to create it. After entering the homepage, switch to the tag named Applications and click on the upper right corner to create: The three manifest types mentioned above are supported, here is kubernetes manifest as an example:","title":"Application best practices"},{"location":"Concepts/application/#advance","text":"Here will explain some additional features or designs of Application, which are not necessary, but will help you use Nocalhost better.","title":"Advance"},{"location":"Concepts/application/#application-name","text":"Nocalhost uses a unique Application Name to identify different applications. Note that even if different Nocalhost-Servers are used (for example, two or more Nocalhost-Servers are deployed), the same Application Name is not supported on the same development machine.","title":"Application Name"},{"location":"Concepts/application/#application-under-nh","text":"Note that in the ~/.nh/ directory, nhctl and IDE plug-ins will generate some files to save the current application deployment, development, etc.. usually you don't need to know or use them directly.","title":"Application under ~/.nh"},{"location":"Concepts/cluster/","text":"What is Cluster Cluster is a concept of Nocalhost . It usually corresponds to a k8s cluster. It needs to maintain a kubeConfig with the cluster's Cluster-Admin role. Nocalhost supports managing multiple Clusters . These clusters can be GKE , minikube , microK8s , etc. What does Cluster do Cluster manages the resources of running applications in the development environment. Cluster is generally used in conjunction with DevSpace , we need to configure Cluster in Nocalhost-Web . Users do not need to directly touch the concept of Cluster while developing, and users' operations under DevSpace actually rely on the capabilities of Cluster . How to manage Cluster First enter Nocalhost-Web , switch to the tag named Clusters , here will show all Cluster list. Click CREATE in the upper right corner to create a Cluster . Note that to confirm whether this kubeconfig has the Cluster-Admin role, and you can use the following command to confirm: > kubectl auth can-i'*''*' yes","title":"Cluster"},{"location":"Concepts/cluster/#what-is-cluster","text":"Cluster is a concept of Nocalhost . It usually corresponds to a k8s cluster. It needs to maintain a kubeConfig with the cluster's Cluster-Admin role. Nocalhost supports managing multiple Clusters . These clusters can be GKE , minikube , microK8s , etc.","title":"What is Cluster"},{"location":"Concepts/cluster/#what-does-cluster-do","text":"Cluster manages the resources of running applications in the development environment. Cluster is generally used in conjunction with DevSpace , we need to configure Cluster in Nocalhost-Web . Users do not need to directly touch the concept of Cluster while developing, and users' operations under DevSpace actually rely on the capabilities of Cluster .","title":"What does Cluster do"},{"location":"Concepts/cluster/#how-to-manage-cluster","text":"First enter Nocalhost-Web , switch to the tag named Clusters , here will show all Cluster list. Click CREATE in the upper right corner to create a Cluster . Note that to confirm whether this kubeconfig has the Cluster-Admin role, and you can use the following command to confirm: > kubectl auth can-i'*''*' yes","title":"How to manage Cluster"},{"location":"Concepts/devcontainer/","text":"DevContainer DevContainer is the container carrier for DevMode development and debugging. Its life cycle runs through the entire development and debugging process. It is created when DevMode starts and ends when DeVMode ends. During the life cycle, local source code changes will be automatically synchronized to DevContainer, and can be directly compiled and deployed in the container. Note The docker used by DevContainer is defined in the application directory .nocalhost/config","title":"DevContainer"},{"location":"Concepts/devcontainer/#devcontainer","text":"DevContainer is the container carrier for DevMode development and debugging. Its life cycle runs through the entire development and debugging process. It is created when DevMode starts and ends when DeVMode ends. During the life cycle, local source code changes will be automatically synchronized to DevContainer, and can be directly compiled and deployed in the container. Note The docker used by DevContainer is defined in the application directory .nocalhost/config","title":"DevContainer"},{"location":"Concepts/devmode/","text":"DevMode DevMode describes the entire development process (start development, test verification and final development). When DevMode starts, development begins, and when DevMode ends, development ends. DevMode start When DevMode is started for a microservice in the application, Nocalhost will perform the following operations: Replace the container of the microservice with the DevContainer specified by the configuration. Create a background process to detect changes in the source code and automatically synchronize the source code with DevContainer. Forward the port of DevContainer to the local for subsequent debugging. DevMode end DevSpace resources will be restored to the state when DevMode was turned on, such as: DevContainer will restore to the container that was stopped when DevMode was turned on. Stop the background process of file synchronization. Release the local port forwarded from DevContainer.","title":"DevMode"},{"location":"Concepts/devmode/#devmode","text":"DevMode describes the entire development process (start development, test verification and final development). When DevMode starts, development begins, and when DevMode ends, development ends.","title":"DevMode"},{"location":"Concepts/devmode/#devmode-start","text":"When DevMode is started for a microservice in the application, Nocalhost will perform the following operations: Replace the container of the microservice with the DevContainer specified by the configuration. Create a background process to detect changes in the source code and automatically synchronize the source code with DevContainer. Forward the port of DevContainer to the local for subsequent debugging.","title":"DevMode start"},{"location":"Concepts/devmode/#devmode-end","text":"DevSpace resources will be restored to the state when DevMode was turned on, such as: DevContainer will restore to the container that was stopped when DevMode was turned on. Stop the background process of file synchronization. Release the local port forwarded from DevContainer.","title":"DevMode end"},{"location":"Concepts/devspace/","text":"What is DevSpace DevSpace is a concept of Nocalhost , which represents a pre-allocated cloud development space managed by Nocalhost . Developers can install, uninstall, develop, and debug applications in DevSpace at any time. DevSpaces are isolated. In future, Nocalhost will also allow developers to share their DevSpaces with other developers for development collaboration. Because of the isolation of DevSpace, it can also be used as a test environment. Currently, Nocalhost supports cloud native application development based on Kubernetes. Under the Kubernetes system, DevSpace consists of a Kubernetes Namespace and a ServiceAccount corresponding to the Namespace. In addition, currently DevSpace is only associated with one application and one developer. When creating a DevSpace, you must specify the cluster where the DevSpace is located, the developer to which it belongs, and the associated application. How managers manage DevSpace Nocalhost provides a web console for administrators to create and delete DevSpaces. How developers use DevSpace Developers do not need to log in to the Nocalhost Web . After logging in directly in the IDE plug-in, user can get their DevSpace list, which can be easily deployed, uninstalled, developed, and debugged in the plug-in.","title":"DevSpace"},{"location":"Concepts/devspace/#what-is-devspace","text":"DevSpace is a concept of Nocalhost , which represents a pre-allocated cloud development space managed by Nocalhost . Developers can install, uninstall, develop, and debug applications in DevSpace at any time. DevSpaces are isolated. In future, Nocalhost will also allow developers to share their DevSpaces with other developers for development collaboration. Because of the isolation of DevSpace, it can also be used as a test environment. Currently, Nocalhost supports cloud native application development based on Kubernetes. Under the Kubernetes system, DevSpace consists of a Kubernetes Namespace and a ServiceAccount corresponding to the Namespace. In addition, currently DevSpace is only associated with one application and one developer. When creating a DevSpace, you must specify the cluster where the DevSpace is located, the developer to which it belongs, and the associated application.","title":"What is DevSpace"},{"location":"Concepts/devspace/#how-managers-manage-devspace","text":"Nocalhost provides a web console for administrators to create and delete DevSpaces.","title":"How managers manage DevSpace"},{"location":"Concepts/devspace/#how-developers-use-devspace","text":"Developers do not need to log in to the Nocalhost Web . After logging in directly in the IDE plug-in, user can get their DevSpace list, which can be easily deployed, uninstalled, developed, and debugged in the plug-in.","title":"How developers use DevSpace"},{"location":"Concepts/service/","text":"What is Service Service is completely different from svc of kubernetes . Service can be considered as an enhancement of Deployment , corresponding to a specific service in your application. Service assumes two roles currently: Configure the Nocalhost Dev-Mode , such as which directory after entering the development container, which files are synchronized to the development container, etc. Supports deployment startup sequence control based on dependencies You can create Application , Cluster , deploy your application without any Service configuration at all. Service only to be configured when you need it. Service usually configured in .nocalhost/config.yaml in the git repository specified by Application , such as config.yaml . User can modify in local by using IDE Plugin or nhctl , the changes only take effect locally. See Application-nocalhost-enhancement for more information about config.yaml If there is not any Service configuration specified, click the gear with an exclamation mark in the IDE Plugin , the plugin will generate a template file for you: Features provided by Service 1. Configure the Dev-Mode As mentioned earlier, Service assumes two roles. One is to support the Dev-Mode . Let's take the following configuration as an example to explain one by one: services: -name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: -./ devPorts: -39080:9080 name and serviceType When you want to use service , name and serviceType are required to locate a manifest. Currently, only deployment is supported. For example, there is a Deployment with the name 'details': kind: Deployment metadata: name: details To configure it, you need to configure the following under services : -name: productpage serviceType: deployment devContainerImage When entering the container after start Dev-Mode , the development container will actually be used to replace the target image you specified. We will provide a default development container for most development languages. This container usually contains some commonly used debugging tools and libraries. Of course, you can also use your own mirror, such as: services: -name: productpage serviceType: deployment devContainerImage: foo/bar/python:dev gitUrl It is used to pull your source code corresponding to this Service . When entering Dev-Mode , you can choose a local directory to synchronize into the development container, or you can choose to pull the source code from the git repository. If you have configured gitUrl , we will automatically check out the code from this gitUrl for you. syncDirs (optional) Optional, type array, specify which folders of the source directory to synchronize to the development container, the default is . , means all. services: -name: productpage serviceType: deployment syncDirs: -foo/ -bar/ workDir(optional) This is an option to indicate the working directory after entering the development mode and the directory where the synchronized files are stored. The default value os workDir is /home/nocalhost-dev . devPorts The automatically forwarded port will be automatically forwarded to the local port after entering the development mode. The format is localPort:remotePort , such as: services: -name: productpage serviceType: deployment devPorts: 8080:10000 It can also support configured as :10000 , which will randomly forward to a local port. 2. Specify the startup sequence dependency Service-dependencey is a Service configuration, and it depends on a Nocalhost component called nocalhost-dep . It supports deployment startup sequence control based on dependencies Caution: nocalhost-dep depends on k8s admission webhooks , so please ensure that the Kubernetes cluster is at least as new as v1.16.0 and ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. dependPodsLabelSelector It means to wait for at least one pod with this label to be in the RUNNING state, otherwise the Service will wait under init container state. For example, a service such as a deployment 'productpage' depends on another service 'foo': apiVersion: apps/v1 kind: Deployment metadata: labels: app: foo Then you can configure this service as follows: services: -name: productpage serviceType: deployment dependPodsLabelSelector: -\"app=foo\" dependJobsLabelSelector It means waiting for a job with specified label to have completed and become Succeeded state. Gor example, a deployment 'productpage' depends on a job: apiVersion: batch/v1 kind: Job metadata: labels: foo: bar You can also configure this service as follows: services: -name: productpage serviceType: deployment dependJobsLabelSelector: -\"foo=bar\" Best practices 1. The best practice in without any service configuration in advance As mentioned earlier, you can use Nocalhost with out any Service configuration. When you want to start the Dev-Mode , IDE Plugin will generate a template file for you automatically, you needs to modify that template and save. Click the gear with an exclamation mark, and we will generate a template file for you: Modify the develop container image Manually modify devContainerImage , currently we provide python , golang , ruby , node , perl , rust , php , java these default development images. The image format is as follows: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/LANGUAGE:latest For example, if you want to use the default image of java , you can modify devContainerImage to codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest . Or you can use any other mirror, we will use /bin/bash, /bin/csh or /bin/sh as the default command to enter this image by default. Specify gitUrl (optional) Before you enter the Dev-Mode , IDE plugin will let you choose to specify the source directory from the local or check it out from git . If you already have the source code of this deployment at your disk, you do not need to configure the gitUrl , simply select Open local derectory . Conversely, if you want Nocalhost to check it out for you automatically, modify girUrl to the corresponding value. Modify syncDirs (optional) In the configuration template provided by default, we will automatically synchronize all files in the specified git repo (or the selected directory) : syncDirs: -\".\" If you only want to synchronize specified directories, you can modify them, such as: syncDirs: -\"bar/\" -\"foo/\" Enter Dev-Mode After finishing the above configuration, click the hammer to enter the development mode. We will replace the original image with the image specified in the configuration, and synchronize the corresponding files to this container. 2. Best practice with config the .nocalhost/config.yaml If you want to maintain a default configuration, add a .nocalhost folder in the root directory and add a config.yaml file in the git repository specified by Application . .nocalhost/ config.yaml README.MD kubemanifest/ xxx.yaml ... foo.java ... E.g: services: -name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: -./ devPorts: -39080:9080 dependJobsLabelSelector: -\"dep-job\" -name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: -./ workDir: /home/nocalhost-dev -name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: -./ dependJobsLabelSelector: -\"dep-job\" dependPodsLabelSelector: -\"productpage\" -\"app.kubernetes.io/name=productpage\" When the user Install the Application , nocalhost will get these default configurations, such as the deployment of 'ratings'. Click the gear to view the current configuration: Users can freely make modifications based on these configurations. **And these modifications only take effect locally. **","title":"Service"},{"location":"Concepts/service/#what-is-service","text":"Service is completely different from svc of kubernetes . Service can be considered as an enhancement of Deployment , corresponding to a specific service in your application. Service assumes two roles currently: Configure the Nocalhost Dev-Mode , such as which directory after entering the development container, which files are synchronized to the development container, etc. Supports deployment startup sequence control based on dependencies You can create Application , Cluster , deploy your application without any Service configuration at all. Service only to be configured when you need it. Service usually configured in .nocalhost/config.yaml in the git repository specified by Application , such as config.yaml . User can modify in local by using IDE Plugin or nhctl , the changes only take effect locally. See Application-nocalhost-enhancement for more information about config.yaml If there is not any Service configuration specified, click the gear with an exclamation mark in the IDE Plugin , the plugin will generate a template file for you:","title":"What is Service"},{"location":"Concepts/service/#features-provided-by-service","text":"","title":"Features provided by Service"},{"location":"Concepts/service/#1-configure-the-dev-mode","text":"As mentioned earlier, Service assumes two roles. One is to support the Dev-Mode . Let's take the following configuration as an example to explain one by one: services: -name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: -./ devPorts: -39080:9080","title":"1. Configure the Dev-Mode"},{"location":"Concepts/service/#name-and-servicetype","text":"When you want to use service , name and serviceType are required to locate a manifest. Currently, only deployment is supported. For example, there is a Deployment with the name 'details': kind: Deployment metadata: name: details To configure it, you need to configure the following under services : -name: productpage serviceType: deployment","title":"name and serviceType"},{"location":"Concepts/service/#devcontainerimage","text":"When entering the container after start Dev-Mode , the development container will actually be used to replace the target image you specified. We will provide a default development container for most development languages. This container usually contains some commonly used debugging tools and libraries. Of course, you can also use your own mirror, such as: services: -name: productpage serviceType: deployment devContainerImage: foo/bar/python:dev","title":"devContainerImage"},{"location":"Concepts/service/#giturl","text":"It is used to pull your source code corresponding to this Service . When entering Dev-Mode , you can choose a local directory to synchronize into the development container, or you can choose to pull the source code from the git repository. If you have configured gitUrl , we will automatically check out the code from this gitUrl for you.","title":"gitUrl"},{"location":"Concepts/service/#syncdirs-optional","text":"Optional, type array, specify which folders of the source directory to synchronize to the development container, the default is . , means all. services: -name: productpage serviceType: deployment syncDirs: -foo/ -bar/","title":"syncDirs (optional)"},{"location":"Concepts/service/#workdiroptional","text":"This is an option to indicate the working directory after entering the development mode and the directory where the synchronized files are stored. The default value os workDir is /home/nocalhost-dev .","title":"workDir(optional)"},{"location":"Concepts/service/#devports","text":"The automatically forwarded port will be automatically forwarded to the local port after entering the development mode. The format is localPort:remotePort , such as: services: -name: productpage serviceType: deployment devPorts: 8080:10000 It can also support configured as :10000 , which will randomly forward to a local port.","title":"devPorts"},{"location":"Concepts/service/#2-specify-the-startup-sequence-dependency","text":"Service-dependencey is a Service configuration, and it depends on a Nocalhost component called nocalhost-dep . It supports deployment startup sequence control based on dependencies Caution: nocalhost-dep depends on k8s admission webhooks , so please ensure that the Kubernetes cluster is at least as new as v1.16.0 and ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled.","title":"2. Specify the startup sequence dependency"},{"location":"Concepts/service/#dependpodslabelselector","text":"It means to wait for at least one pod with this label to be in the RUNNING state, otherwise the Service will wait under init container state. For example, a service such as a deployment 'productpage' depends on another service 'foo': apiVersion: apps/v1 kind: Deployment metadata: labels: app: foo Then you can configure this service as follows: services: -name: productpage serviceType: deployment dependPodsLabelSelector: -\"app=foo\"","title":"dependPodsLabelSelector"},{"location":"Concepts/service/#dependjobslabelselector","text":"It means waiting for a job with specified label to have completed and become Succeeded state. Gor example, a deployment 'productpage' depends on a job: apiVersion: batch/v1 kind: Job metadata: labels: foo: bar You can also configure this service as follows: services: -name: productpage serviceType: deployment dependJobsLabelSelector: -\"foo=bar\"","title":"dependJobsLabelSelector"},{"location":"Concepts/service/#best-practices","text":"","title":"Best practices"},{"location":"Concepts/service/#1-the-best-practice-in-without-any-service-configuration-in-advance","text":"As mentioned earlier, you can use Nocalhost with out any Service configuration. When you want to start the Dev-Mode , IDE Plugin will generate a template file for you automatically, you needs to modify that template and save. Click the gear with an exclamation mark, and we will generate a template file for you:","title":"1. The best practice in without any service configuration in advance"},{"location":"Concepts/service/#modify-the-develop-container-image","text":"Manually modify devContainerImage , currently we provide python , golang , ruby , node , perl , rust , php , java these default development images. The image format is as follows: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/LANGUAGE:latest For example, if you want to use the default image of java , you can modify devContainerImage to codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest . Or you can use any other mirror, we will use /bin/bash, /bin/csh or /bin/sh as the default command to enter this image by default.","title":"Modify the develop container image"},{"location":"Concepts/service/#specify-giturl-optional","text":"Before you enter the Dev-Mode , IDE plugin will let you choose to specify the source directory from the local or check it out from git . If you already have the source code of this deployment at your disk, you do not need to configure the gitUrl , simply select Open local derectory . Conversely, if you want Nocalhost to check it out for you automatically, modify girUrl to the corresponding value.","title":"Specify gitUrl (optional)"},{"location":"Concepts/service/#modify-syncdirs-optional","text":"In the configuration template provided by default, we will automatically synchronize all files in the specified git repo (or the selected directory) : syncDirs: -\".\" If you only want to synchronize specified directories, you can modify them, such as: syncDirs: -\"bar/\" -\"foo/\"","title":"Modify syncDirs (optional)"},{"location":"Concepts/service/#enter-dev-mode","text":"After finishing the above configuration, click the hammer to enter the development mode. We will replace the original image with the image specified in the configuration, and synchronize the corresponding files to this container.","title":"Enter Dev-Mode"},{"location":"Concepts/service/#2-best-practice-with-config-the-nocalhostconfigyaml","text":"If you want to maintain a default configuration, add a .nocalhost folder in the root directory and add a config.yaml file in the git repository specified by Application . .nocalhost/ config.yaml README.MD kubemanifest/ xxx.yaml ... foo.java ... E.g: services: -name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: -./ devPorts: -39080:9080 dependJobsLabelSelector: -\"dep-job\" -name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: -./ workDir: /home/nocalhost-dev -name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: -./ dependJobsLabelSelector: -\"dep-job\" dependPodsLabelSelector: -\"productpage\" -\"app.kubernetes.io/name=productpage\" When the user Install the Application , nocalhost will get these default configurations, such as the deployment of 'ratings'. Click the gear to view the current configuration: Users can freely make modifications based on these configurations. **And these modifications only take effect locally. **","title":"2. Best practice with config the .nocalhost/config.yaml"},{"location":"Concepts/user/","text":"What is User When you use Nocalhost-Server and Nocalhost-Plug-In , User is used to identify your identity and access control to resources. This User belongs to the independent concept of Nocalhost , it's different with kubernetes 's user. There are two types of User in Nocalhost : One is User , User can only log in IDE Plugin, users can develop under their own DevSpace . these DevSpace are all created by Administrator . The other is Administrator , such as the initial admin@admin.com , Administrator has the permission to access Nocalhost-Web , and Administrator has all the permissions in Nocalhost-Web , such as create and manage Application , Cluster , User , DevSpace , etc. Similarly, Administrator also have all the permissions of User , such as logging in at IDE Plugin , develop in their own DevSpace list. User's permissions User can only see their own DevSpace , and have all the permissions under these DevSpace , such as install , unInstall deployed, uninstalled, developed, debugged, etc of corresponding Application under DevSpace . In fact, we will also create a kubeconfig of the namespace corresponding to each DevSpace for this User to access all resources under namespace . For example, this User sign in IDE Plugin currently, and he can see two DevSpace created by Administrator in Nocalhost-Web named 'bookinfo' and 'test': However, User cannot enter Nocalhost-Web , nor can they delete the DevSpace itself, or disassociate from his DevSpace , which is very similar to the admin permission under the namespace of k8s.","title":"User"},{"location":"Concepts/user/#what-is-user","text":"When you use Nocalhost-Server and Nocalhost-Plug-In , User is used to identify your identity and access control to resources. This User belongs to the independent concept of Nocalhost , it's different with kubernetes 's user. There are two types of User in Nocalhost : One is User , User can only log in IDE Plugin, users can develop under their own DevSpace . these DevSpace are all created by Administrator . The other is Administrator , such as the initial admin@admin.com , Administrator has the permission to access Nocalhost-Web , and Administrator has all the permissions in Nocalhost-Web , such as create and manage Application , Cluster , User , DevSpace , etc. Similarly, Administrator also have all the permissions of User , such as logging in at IDE Plugin , develop in their own DevSpace list.","title":"What is User"},{"location":"Concepts/user/#users-permissions","text":"User can only see their own DevSpace , and have all the permissions under these DevSpace , such as install , unInstall deployed, uninstalled, developed, debugged, etc of corresponding Application under DevSpace . In fact, we will also create a kubeconfig of the namespace corresponding to each DevSpace for this User to access all resources under namespace . For example, this User sign in IDE Plugin currently, and he can see two DevSpace created by Administrator in Nocalhost-Web named 'bookinfo' and 'test': However, User cannot enter Nocalhost-Web , nor can they delete the DevSpace itself, or disassociate from his DevSpace , which is very similar to the admin permission under the namespace of k8s.","title":"User's permissions"},{"location":"Deployment/deployment-kubernetes/","text":"This tutorial helps you to install Nocalhost and access Nocalhost-Server on Kubernetes using Native Kubernetes Cluster Prerequisites To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. kubernetes cluster 1.16+ (1.12+ is supported but you can't use service-dependency provide by Nocalhost ) helm3 kubectl Nhctl v0.1.0+ Make sure your kubernetes is up and running. kubectl version Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag. Init Nocalhost Specify a namespace to install Nocalhost : nocalhostNs=nocalhost We won\u2018t create a pv for you automatically, before installation, make sure your kubernetes cluster has a suitable pv for pvc binding, here is a solution for this problem . First initial the Nocalhost with following command, There is two selection for you to install Nocalhost use nhctl init -n ${nocalhostNs} -t nodeport -p 8080 to install Nocalhost and expose the Nocalhost service as nodeport. use nhctl init -n ${nocalhostNs} -p 8080 to install Nocalhost if you have an External Load Balancer . Waiting for 5 minutes, the Nocalhost-Server(include nocalhost-api and nocalhost-web) and Nocalhost-Dep will be installed and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n ${nocalhostNs} NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n ${nocalhostNs}-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m Access nocalhost-Server nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n ${nocalhostNs} NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web NodePort 10.101.44.129 <none> 80:8080/TCP 20m We can see the svc nocalhost-web 's port '8080' exposed outside we specify by flag while init Nocalhost , and we can access it directly right now. Then entering Nocalhost homepage with http:// kubenetes ip : nocalhost-web-expose-port . In this tutorials, kubenetes ip is 124.156.139.127 and nocalhost-web 's expose port is 8080. So entering http://124.156.139.127:8080 : If your svc nocalhost-web's TYPE is LoadBalancer, the nocalhost-server-url is http:// nocalhost-web-external-ip : nocalhost-web-expose-port You can login the nocalhost-server with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost init. What next? Next, take an experience with IDE-plug-ins to get best practices for Nocalhost","title":"Deployment kubernetes"},{"location":"Deployment/deployment-kubernetes/#prerequisites","text":"To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. kubernetes cluster 1.16+ (1.12+ is supported but you can't use service-dependency provide by Nocalhost ) helm3 kubectl Nhctl v0.1.0+ Make sure your kubernetes is up and running. kubectl version Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag.","title":"Prerequisites"},{"location":"Deployment/deployment-kubernetes/#init-nocalhost","text":"Specify a namespace to install Nocalhost : nocalhostNs=nocalhost We won\u2018t create a pv for you automatically, before installation, make sure your kubernetes cluster has a suitable pv for pvc binding, here is a solution for this problem . First initial the Nocalhost with following command, There is two selection for you to install Nocalhost use nhctl init -n ${nocalhostNs} -t nodeport -p 8080 to install Nocalhost and expose the Nocalhost service as nodeport. use nhctl init -n ${nocalhostNs} -p 8080 to install Nocalhost if you have an External Load Balancer . Waiting for 5 minutes, the Nocalhost-Server(include nocalhost-api and nocalhost-web) and Nocalhost-Dep will be installed and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n ${nocalhostNs} NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n ${nocalhostNs}-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m","title":"Init Nocalhost"},{"location":"Deployment/deployment-kubernetes/#access-nocalhost-server","text":"nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n ${nocalhostNs} NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web NodePort 10.101.44.129 <none> 80:8080/TCP 20m We can see the svc nocalhost-web 's port '8080' exposed outside we specify by flag while init Nocalhost , and we can access it directly right now. Then entering Nocalhost homepage with http:// kubenetes ip : nocalhost-web-expose-port . In this tutorials, kubenetes ip is 124.156.139.127 and nocalhost-web 's expose port is 8080. So entering http://124.156.139.127:8080 : If your svc nocalhost-web's TYPE is LoadBalancer, the nocalhost-server-url is http:// nocalhost-web-external-ip : nocalhost-web-expose-port You can login the nocalhost-server with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost init.","title":"Access nocalhost-Server"},{"location":"Deployment/deployment-kubernetes/#what-next","text":"Next, take an experience with IDE-plug-ins to get best practices for Nocalhost","title":"What next?"},{"location":"Deployment/deployment-minikube/","text":"This tutorial helps you to install Nocalhost and access Nocalhost-Server on Kubernetes using Minikube . Prerequisites To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. minikube docker (we suggest to use docker as driver though minikube support dirrent type of driver) helm3 kubectl Nhctl v0.1.0+ Make sure your minikube is up and running. minikube kubectl version Or you can start minikube by using: minikube start --driver=docker Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag. Init Nocalhost Specify a namespace to install Nocalhost : nocalhostNs=nocalhost First initial the Nocalhost with following command: nhctl init -n ${nocalhostNs} -t 8080 Waiting for 5 minutes, the Nocalhost-Server(include nocalhost-api and nocalhost-web) and Nocalhost-Dep will be installed and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n ${nocalhostNs} NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n ${nocalhostNs}-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m Access nocalhost-Server nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n ${nocalhostNs} NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 <pending> 80:8080/TCP 20m We can see the svc nocalhost-web 's port '8080' exposed outside we specify by flag while init Nocalhost , but we can\u2018t not access it directly right now because svc 'nocalhost-web' is still pending. Use minikube tunnel minikube tunnel runs as a process, creating a network route on the host to the service CIDR of the cluster using the cluster\u2019s IP address as a gateway. The tunnel command exposes the external IP directly to any program running on the host operating system. Then entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port . In this tutorials, minikube ip is 192.168.49.2 and nocalhost-web 's expose port is 30265. > minikube ip 192.168.49.2 So entering `http://192.168.49.2:8080: You can login the nocalhost-server with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost init. What next? Next, take an experience with IDE-plug-ins to get best practices for Nocalhost","title":"Deployment minikube"},{"location":"Deployment/deployment-minikube/#prerequisites","text":"To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. minikube docker (we suggest to use docker as driver though minikube support dirrent type of driver) helm3 kubectl Nhctl v0.1.0+ Make sure your minikube is up and running. minikube kubectl version Or you can start minikube by using: minikube start --driver=docker Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag.","title":"Prerequisites"},{"location":"Deployment/deployment-minikube/#init-nocalhost","text":"Specify a namespace to install Nocalhost : nocalhostNs=nocalhost First initial the Nocalhost with following command: nhctl init -n ${nocalhostNs} -t 8080 Waiting for 5 minutes, the Nocalhost-Server(include nocalhost-api and nocalhost-web) and Nocalhost-Dep will be installed and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n ${nocalhostNs} NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n ${nocalhostNs}-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m","title":"Init Nocalhost"},{"location":"Deployment/deployment-minikube/#access-nocalhost-server","text":"nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n ${nocalhostNs} NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 <pending> 80:8080/TCP 20m We can see the svc nocalhost-web 's port '8080' exposed outside we specify by flag while init Nocalhost , but we can\u2018t not access it directly right now because svc 'nocalhost-web' is still pending. Use minikube tunnel minikube tunnel runs as a process, creating a network route on the host to the service CIDR of the cluster using the cluster\u2019s IP address as a gateway. The tunnel command exposes the external IP directly to any program running on the host operating system. Then entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port . In this tutorials, minikube ip is 192.168.49.2 and nocalhost-web 's expose port is 30265. > minikube ip 192.168.49.2 So entering `http://192.168.49.2:8080: You can login the nocalhost-server with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost init.","title":"Access nocalhost-Server"},{"location":"Deployment/deployment-minikube/#what-next","text":"Next, take an experience with IDE-plug-ins to get best practices for Nocalhost","title":"What next?"},{"location":"Deployment/deployment-tke/","text":"This tutorial helps you to install Nocalhost and access Nocalhost-Server on Kubernetes using TKE . Prerequisites To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. kubernetes 1.16+ (1.12+ is supported but you can't use service-dependency provide by Nocalhost ) Your TKE should use docker as runtime container configure open external network access: 0.0.0.0/0 helm3 kubectl Nhctl v0.1.0+ Make sure your kubernetes is up and running. Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag. **Open external network access: 0.0.0.0/0 or cluster egress IP to achieve access to the Kubernetes api-server internal and external. ** Init Nocalhost Specify a namespace to install Nocalhost : nocalhostNs=nocalhost First initial the Nocalhost with following command: nhctl init -n ${nocalhostNs} -p 8080 Waiting for 5 minutes, the Nocalhost-Server(include nocalhost-api and nocalhost-web) and Nocalhost-Dep will be installed and create a Quick-Experience Application automatic: \u2713 Nocalhost init completed. Server Url: http://159.75.142.135:8080 Username: foo@nocalhost.dev Password: 123456 please setup VS Code Plugin and login, enjoy! Access nocalhost-Server nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n ${nocalhostNs} NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 159.75.142.135 80:8080/TCP 20m We can see the svc nocalhost-web 's port '8080' exposed outside we specify by flag while init Nocalhost , and we can access it directly right now. So entering http://159.75.142.135:8080 : You can login the nocalhost-server with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost init. What next? Next, take an experience with IDE-plug-ins to get best practices for Nocalhost","title":"Deployment tke"},{"location":"Deployment/deployment-tke/#prerequisites","text":"To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. kubernetes 1.16+ (1.12+ is supported but you can't use service-dependency provide by Nocalhost ) Your TKE should use docker as runtime container configure open external network access: 0.0.0.0/0 helm3 kubectl Nhctl v0.1.0+ Make sure your kubernetes is up and running. Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag. **Open external network access: 0.0.0.0/0 or cluster egress IP to achieve access to the Kubernetes api-server internal and external. **","title":"Prerequisites"},{"location":"Deployment/deployment-tke/#init-nocalhost","text":"Specify a namespace to install Nocalhost : nocalhostNs=nocalhost First initial the Nocalhost with following command: nhctl init -n ${nocalhostNs} -p 8080 Waiting for 5 minutes, the Nocalhost-Server(include nocalhost-api and nocalhost-web) and Nocalhost-Dep will be installed and create a Quick-Experience Application automatic: \u2713 Nocalhost init completed. Server Url: http://159.75.142.135:8080 Username: foo@nocalhost.dev Password: 123456 please setup VS Code Plugin and login, enjoy!","title":"Init Nocalhost"},{"location":"Deployment/deployment-tke/#access-nocalhost-server","text":"nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n ${nocalhostNs} NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 159.75.142.135 80:8080/TCP 20m We can see the svc nocalhost-web 's port '8080' exposed outside we specify by flag while init Nocalhost , and we can access it directly right now. So entering http://159.75.142.135:8080 : You can login the nocalhost-server with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost init.","title":"Access nocalhost-Server"},{"location":"Deployment/deployment-tke/#what-next","text":"Next, take an experience with IDE-plug-ins to get best practices for Nocalhost","title":"What next?"},{"location":"FAQ/default-account/","text":"Why there isn't a register link? How to login Nocalhost Web? Nocalhost does not support self-registration. By now, Nocalhost Server(api and web) is designed using by administrtor. Administrtors can sign in with the default administrator account email and password. The default account's Email is: admin@admin.com The default account's password is: 123456 After signed in, they can change admin user's Email and password. They can also manage users, clusters and applications.","title":"Default admin account"},{"location":"FAQ/default-account/#why-there-isnt-a-register-link-how-to-login-nocalhost-web","text":"Nocalhost does not support self-registration. By now, Nocalhost Server(api and web) is designed using by administrtor. Administrtors can sign in with the default administrator account email and password. The default account's Email is: admin@admin.com The default account's password is: 123456 After signed in, they can change admin user's Email and password. They can also manage users, clusters and applications.","title":"Why there isn't a register link? How to login Nocalhost Web?"},{"location":"FAQ/dep-label-selector/","text":"How does Nocalhost resolve Pods/Jobs starting orders of services in details? Dependencies' declarations in Nocalhost config.yaml decide the startup sequence of services in application. Nocalhost arranges Pods/Jobs containing labels defined in dependPodsLabelSelector and dependJobsLabelSelector options to start ahead of service itself. That means service would not start unitl only all dependent Pods being ready and all dependent Jobs done. For example, we configure service foo as below: ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... While Nocalhost is going to start Pods within service foo , it will select Pods with labels of app=mysql and region=shenzhen or app=redis . Nocalhost starts the selected pods first. Once all selected Pods being ready, Nocalhost starts service foo .","title":"Dependency Label Selector"},{"location":"FAQ/dep-label-selector/#how-does-nocalhost-resolve-podsjobs-starting-orders-of-services-in-details","text":"Dependencies' declarations in Nocalhost config.yaml decide the startup sequence of services in application. Nocalhost arranges Pods/Jobs containing labels defined in dependPodsLabelSelector and dependJobsLabelSelector options to start ahead of service itself. That means service would not start unitl only all dependent Pods being ready and all dependent Jobs done. For example, we configure service foo as below: ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... While Nocalhost is going to start Pods within service foo , it will select Pods with labels of app=mysql and region=shenzhen or app=redis . Nocalhost starts the selected pods first. Once all selected Pods being ready, Nocalhost starts service foo .","title":"How does Nocalhost resolve Pods/Jobs starting orders of services in details?"},{"location":"FAQ/deployment-with-hpa/","text":"Does Nocalhost have support to develop components(services) that controls by Deployments with HPA (Horizontal Pod Autoscaler)? No. It is suggested that remove HPA controller from Deployments before developing components(services) with Nocalhost.","title":"Deployment with HPA"},{"location":"FAQ/deployment-with-hpa/#does-nocalhost-have-support-to-develop-componentsservices-that-controls-by-deployments-with-hpa-horizontal-pod-autoscaler","text":"No. It is suggested that remove HPA controller from Deployments before developing components(services) with Nocalhost.","title":"Does Nocalhost have support to develop components(services) that controls by Deployments with HPA (Horizontal Pod Autoscaler)?"},{"location":"FAQ/line-endings/","text":"Why does my code fail to compile in the DevMode under Windows? The problem may be caused by differences of line endings between different operating systems. For example, the code is compiled for Linux with line endings of \\n , and you checkout, edit or reformat the code under Windows may convert line endings to \\r\\n . The conversion of line endings will lead to failures on some build tools (like Gradle). Therefore, before entering the DevMode, you should configure the local development environment as needed. git: In default, line ending conversions are enabled. It means that git checkout will convert \\n to \\r\\n and git commit will convert \\r\\n to \\n . Please refer to Git Docs if you have to configure it. Visual Studio Code: In default, line ending is \\r\\n under Windows. Configure it globally by entering File -> Preferences -> Settings -> Text Editor -> Files -> Eol, or click the CRLF or LF on the right of the status bar when converting for a single file. IntelliJ IDEA: In default, line ending is \\r\\n under Windows. Configure it by entering File -> Settings -> Editor -> Code Style -> Line seperator.","title":"Line Endings"},{"location":"FAQ/line-endings/#why-does-my-code-fail-to-compile-in-the-devmode-under-windows","text":"The problem may be caused by differences of line endings between different operating systems. For example, the code is compiled for Linux with line endings of \\n , and you checkout, edit or reformat the code under Windows may convert line endings to \\r\\n . The conversion of line endings will lead to failures on some build tools (like Gradle). Therefore, before entering the DevMode, you should configure the local development environment as needed. git: In default, line ending conversions are enabled. It means that git checkout will convert \\n to \\r\\n and git commit will convert \\r\\n to \\n . Please refer to Git Docs if you have to configure it. Visual Studio Code: In default, line ending is \\r\\n under Windows. Configure it globally by entering File -> Preferences -> Settings -> Text Editor -> Files -> Eol, or click the CRLF or LF on the right of the status bar when converting for a single file. IntelliJ IDEA: In default, line ending is \\r\\n under Windows. Configure it by entering File -> Settings -> Editor -> Code Style -> Line seperator.","title":"Why does my code fail to compile in the DevMode under Windows?"},{"location":"FAQ/multi-container-pods/","text":"Does Nocalhost have support to develop components(services) which have Pods running multiple containers? No, it is not currently supported. We will support it later.","title":"Multi-container Pods"},{"location":"FAQ/multi-container-pods/#does-nocalhost-have-support-to-develop-componentsservices-which-have-pods-running-multiple-containers","text":"No, it is not currently supported. We will support it later.","title":"Does Nocalhost have support to develop components(services) which have Pods running multiple containers?"},{"location":"FAQ/pvc-unbound/","text":"We won\u2018t create a pv for you automatically, you should create a pv manually like this if your pvc is pending in unbound state: apiVersion: v1 kind: PersistentVolume metadata: name: nocalhost-mariadb-pv-volume labels: type: local spec: storageClassName: \"\" persistentVolumeReclaimPolicy: Recycle volumeMode: Filesystem capacity: storage: 20Gi accessModes: - ReadWriteOnce hostPath: path: \"/foo/bar\" The storageClassName of pv should be empty and make sure pv has greater capacity than pvc used. nocalhost run the mariadb with user mysql . So you need to adjust the permissions for the data directory mapped: chown -R 1001:1001 /foo/bar","title":"No persistent volumes available"},{"location":"FAQ/ssh-private-keys-passphrase/","text":"Why Nocalhost can not clone codes with SSH key that need passphrase for SSH private keys? Nocalhost does not support currently. We will support it later.","title":"SSH Private Keys Passphrase"},{"location":"FAQ/ssh-private-keys-passphrase/#why-nocalhost-can-not-clone-codes-with-ssh-key-that-need-passphrase-for-ssh-private-keys","text":"Nocalhost does not support currently. We will support it later.","title":"Why Nocalhost can not clone codes with SSH key that need passphrase for SSH private keys?"},{"location":"FAQ/support-version/","text":"Nocalhost supports Major:\"1\", Minor:\"12+\" versions of kubernetes, but we recommend that you to use v1.16+. That's because if your want to use service dependencies control between services: Ensure that the Kubernetes cluster is at least as new as v1.16 (to use admissionregistration.k8s.io/v1 ), or v1.9 (to use admissionregistration.k8s.io/v1beta1 ). Ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. Here is a recommended set of admission controllers to enable in general. Ensure that the admissionregistration.k8s.io/v1 or admissionregistration.k8s.io/v1beta1 API is enabled. see adminssion web hooks .","title":"Version Support"},{"location":"FAQ/work-with-helm/","text":"How does Nocalhost find services when the workloads are installed by Helm? By default, Nocalhost recognizes services by the exact name of workloads in the cluster. But the name of the workloads installed by Helm may be generated according to the Chart templates. For example, if the Chart is created with the template provided by Helm, Nocalhost may find it by looking for workloads with name formed with <release-name>-<service-name> . For example, there is a service defined in config.yaml as following: ... services: - name: productpage serviceType: deployment When we install a application(helm) by nhctl as following: $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s Nocalhost will consider the workload dev-productpage as the service named productpage defined in config.yaml, while no workload named productpage in cluster. In other case, if you create Chart with other templates or install Chart in other ways, Nocalhost cannot find the services in the config.yaml. In this situation, you should configure the exact name of the workloads to Nocalhost's config.yaml. Using static workload names is recommended.","title":"Work with Helm"},{"location":"FAQ/work-with-helm/#how-does-nocalhost-find-services-when-the-workloads-are-installed-by-helm","text":"By default, Nocalhost recognizes services by the exact name of workloads in the cluster. But the name of the workloads installed by Helm may be generated according to the Chart templates. For example, if the Chart is created with the template provided by Helm, Nocalhost may find it by looking for workloads with name formed with <release-name>-<service-name> . For example, there is a service defined in config.yaml as following: ... services: - name: productpage serviceType: deployment When we install a application(helm) by nhctl as following: $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s Nocalhost will consider the workload dev-productpage as the service named productpage defined in config.yaml, while no workload named productpage in cluster. In other case, if you create Chart with other templates or install Chart in other ways, Nocalhost cannot find the services in the config.yaml. In this situation, you should configure the exact name of the workloads to Nocalhost's config.yaml. Using static workload names is recommended.","title":"How does Nocalhost find services when the workloads are installed by Helm?"},{"location":"FAQ/vscode/vscode-plugin-limits/","text":"Does Nocalhost have support to develop components(services) which depend on Kubernetes cluster resources such as Namespaces, ClusterRole? It is not supported by Visual Studio Code plugin and Nocalhost Server, but Nocalhost CLI tool nhctl supports. We will support later. What should I do if I delete the ~/.nh directory by mistake and the plugin cannot be used? Just restart Visual Studio Code. Application uninstallation has been done on the plug-in side, and the kubernetes cluster workload has not been released Because your login account has changed, kubeconfig has also changed. Currently, account switching is not supported. If this happens, you need to manually delete the previously resources.","title":"VSCode Plugin Limits"},{"location":"FAQ/vscode/vscode-plugin-limits/#does-nocalhost-have-support-to-develop-componentsservices-which-depend-on-kubernetes-cluster-resources-such-as-namespaces-clusterrole","text":"It is not supported by Visual Studio Code plugin and Nocalhost Server, but Nocalhost CLI tool nhctl supports. We will support later.","title":"Does Nocalhost have support to develop components(services) which depend on Kubernetes cluster resources such as Namespaces, ClusterRole?"},{"location":"FAQ/vscode/vscode-plugin-limits/#what-should-i-do-if-i-delete-the-nh-directory-by-mistake-and-the-plugin-cannot-be-used","text":"Just restart Visual Studio Code.","title":"What should I do if I delete the ~/.nh directory by mistake and the plugin cannot be used?"},{"location":"FAQ/vscode/vscode-plugin-limits/#application-uninstallation-has-been-done-on-the-plug-in-side-and-the-kubernetes-cluster-workload-has-not-been-released","text":"Because your login account has changed, kubeconfig has also changed. Currently, account switching is not supported. If this happens, you need to manually delete the previously resources.","title":"Application uninstallation has been done on the plug-in side, and the kubernetes cluster workload has not been released"},{"location":"References/architecture/","text":"What is Nocalhost? Nocalhost is Cloud Native Development Environment. Currently, it support developing applications based on Kubernetes: Deploy applications just one click, even with complex service dependencies Build, test and debug applications directly inside Kubernetes Develop with hot reloading : updates your running containers without rebuilding images or restarting containers How does it work? Deploy Nocalhost Server (nocalhost-api, nocalhost-web) to the kubernetes cluster. For Admin Use the management platform provided by Nocalhost Server to create users, configure the application's kubernetes cluster, create applications, and configure the application's DevSpace(Currently, DevSpace = ServiceAccount + Namespace). When kubernetes cluster configured, nocalhost-dep will be automatically deployed in the nocalhost-reservered namespace to control the order of microservices' starting. For Developer Install the nhctl CLI on the client machine and install the Nocalhost plugin in the IDE. Configure the nocalhost-api server url (for example: http://ip:port) in the plugin and sign in server, then deploy application to the kubernetes cluster. For Developer Developers can switch a specified micro service to DevMode. Once DevMode started, Nocalhost will replace the container of that micro service to DevContainer specified by configuration, sync source codes to DevContainer and forward the port of DevContainer to local. Here's the diagram of Nocalhost with all the components tied together. Component IDE plugins * IDE plugin packs the capabilities of nhctl and nocalhost-api development environment management to provide users with a better experience. nhctl nhctl is the core component of nocalhost, here are the core features: Install Application Nocalhost will deploy applications to kubernetes cluster according to the dependencies of the application which is defined in config YAML under the .nocalhost directory. Hot Reloading Via File Sync Any changes made to the local source codes will be synchronized to the remote DevContainer automatically. Developer can recompile and restart their process to verify code changes. In the future, we will support configure hotreload commands instead of restart processes manually. uninstall application Uninstalling application from DevSpace. nocalhost-web * nocalhost-web provides a web dashboard to manage users, development kubernetes clusters, applications and DevSpaces. nocalhost-api * Nocalhost manages serviceAccount, namespace and application in kubernetes cluster through api-server, and persists to database, providing data support for IDE plugin usage. nocalhost-dep * When application microservices are deployed in a Kubernetes cluster, there is no way to controler the startup sequence and dependencies of these microservices. A typical scenario is: Service A and Service B both rely on Mysql, Redis, RabbitMQ. Service A and Service B cannot be started unless these dependent services are available. Usually developers have to wait the Pod's restarting rely on Kubernetes' HealthCheck Probe. After restarting again and again, the time interval will be very long. This is why many large system running in Kubernetes start up extremely slow. By implemented a Kubernetes Admission Webhook like Istio injecting Sidecar, nocalhost-dep can controls the starting order. When applications deployed, nocalhost-dep will inject InitContainers into the workload automatically. According to declared dependencies, nocalhost-dep keeps waiting for the dependent services's availability. Once all dependent service become available, the InitContainer exits, then the containers which container business logics start. There is no restarting, which means minimal time waiting of starting.","title":"Architecture"},{"location":"References/architecture/#what-is-nocalhost","text":"Nocalhost is Cloud Native Development Environment. Currently, it support developing applications based on Kubernetes: Deploy applications just one click, even with complex service dependencies Build, test and debug applications directly inside Kubernetes Develop with hot reloading : updates your running containers without rebuilding images or restarting containers","title":"What is Nocalhost?"},{"location":"References/architecture/#how-does-it-work","text":"Deploy Nocalhost Server (nocalhost-api, nocalhost-web) to the kubernetes cluster. For Admin Use the management platform provided by Nocalhost Server to create users, configure the application's kubernetes cluster, create applications, and configure the application's DevSpace(Currently, DevSpace = ServiceAccount + Namespace). When kubernetes cluster configured, nocalhost-dep will be automatically deployed in the nocalhost-reservered namespace to control the order of microservices' starting. For Developer Install the nhctl CLI on the client machine and install the Nocalhost plugin in the IDE. Configure the nocalhost-api server url (for example: http://ip:port) in the plugin and sign in server, then deploy application to the kubernetes cluster. For Developer Developers can switch a specified micro service to DevMode. Once DevMode started, Nocalhost will replace the container of that micro service to DevContainer specified by configuration, sync source codes to DevContainer and forward the port of DevContainer to local. Here's the diagram of Nocalhost with all the components tied together.","title":"How does it work?"},{"location":"References/architecture/#component","text":"IDE plugins * IDE plugin packs the capabilities of nhctl and nocalhost-api development environment management to provide users with a better experience. nhctl nhctl is the core component of nocalhost, here are the core features: Install Application Nocalhost will deploy applications to kubernetes cluster according to the dependencies of the application which is defined in config YAML under the .nocalhost directory. Hot Reloading Via File Sync Any changes made to the local source codes will be synchronized to the remote DevContainer automatically. Developer can recompile and restart their process to verify code changes. In the future, we will support configure hotreload commands instead of restart processes manually. uninstall application Uninstalling application from DevSpace. nocalhost-web * nocalhost-web provides a web dashboard to manage users, development kubernetes clusters, applications and DevSpaces. nocalhost-api * Nocalhost manages serviceAccount, namespace and application in kubernetes cluster through api-server, and persists to database, providing data support for IDE plugin usage. nocalhost-dep * When application microservices are deployed in a Kubernetes cluster, there is no way to controler the startup sequence and dependencies of these microservices. A typical scenario is: Service A and Service B both rely on Mysql, Redis, RabbitMQ. Service A and Service B cannot be started unless these dependent services are available. Usually developers have to wait the Pod's restarting rely on Kubernetes' HealthCheck Probe. After restarting again and again, the time interval will be very long. This is why many large system running in Kubernetes start up extremely slow. By implemented a Kubernetes Admission Webhook like Istio injecting Sidecar, nocalhost-dep can controls the starting order. When applications deployed, nocalhost-dep will inject InitContainers into the workload automatically. According to declared dependencies, nocalhost-dep keeps waiting for the dependent services's availability. Once all dependent service become available, the InitContainer exits, then the containers which container business logics start. There is no restarting, which means minimal time waiting of starting.","title":"Component"},{"location":"References/cli-commands/","text":"Nhctl CLI nhctl can be used to deploy applications and develop Kubernetes-based applications. The interaction between nhctl and Kubernetes requires kubectl. The kubeconfig file used can be specified by --kubeconfig. Syntax\uff1anhctl [commond] [Name] [flags] commond means operation\uff0ce.g: config, install, dev, exec, port-foward Name means the resource\uff0ce.g: Application Name flags indicate optional parameters\uff0ce.g: --kubeconfig specifies the kubeconfig file nhctl init Description: Nocalhost Server\uff08nocalhost-api, nocalhost-web, nocalhost-dep\uff09initialization synx: nhctl init [flags] [flags] --force force to init, warning: it will remove all nocalhost old data -h, --help help for init --inject-user-amount int inject user amount, example 10, max is 999 --inject-user-offset int inject user id offset, default is 1 (default 1) --inject-user-template string inject users template, example Techo%d, max length is 15 -n, --namespace string set init nocalhost namesapce (default \"nocalhost\") -p, --port int for NodePort usage set ports (default 80) --set strings set values of helm -s, --source string bookinfo source, github or coding, default is github -t, --type string set NodePort or LoadBalancer to expose nocalhost service [usage] nhctl init -n [DevSpace Name] -t nodeport -p [port] nhctl init -n [DevSpace Name] nhctl config Description: View application or service development parameter configuration synx: nhctl config get [Name] [flags] [flags] -d, --deployment string service name [usage] nhctl config get [Application Name] nhctl config get [Application Name] -d [service Name] Description: Edit application or service development parameter configuration synx: nhctl config edit [Name] [flags] [flags] -c, --content string Service development configuration parameter content, the format needs to be base64 -d, --deployment string service name [usage] nhctl config edit [Application Name] -d [service Name] -c [content] nhctl describe Description: View the running status of the application synx: nhctl describe [Name] [usage] nhctl describe [Application Name] nhctl list Description: View the services that the application is under development (development status, synchronization status, synchronized directory, port mapping) synx: nhctl list [Name] [usage] nhctl list [Application Name] E.g: nhctl list bookinfo +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | NAME | DEVELOPING | SYNCING | DEV-PORT-FORWARDED | SYNC-PATH | LOCAL-SYNCTHING-GUI | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | productpage | true | true | [39080:9080] | [d:\\workspace\\go-project\\productpage] | 52031 | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ nhctl dev Description: Toggle On DevMode synx\uff1anhctl dev start [Name][flags] [flags] -d, --deployment string Service name -h, --help help command -i, --image string DevContainer image URL -l, --lang string Service development language, such as\uff1ajava/go/python -s, --local-sync strings All files in the local directory that need to be synchronized to Devcontainer --work-dir string Devcontainer specifies which directory to receive locally synchronized files [usage] nhctl dev start [Applicaton Name] -d [Service Name] -l [java|go|python] -s [local dir] --work-dir [work dir] --kubeconfig [absolute path of kubeconfig] Description: Enter DevContainer container synx\uff1anhctl dev terminal [Name][flags] [Flags] -d, --deployment string service name [usage] nhctl dev terminal [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] Description: Toggle Off DevMode synx\uff1anhctl dev end [Name][flags] [Flags] -d, --deployment string service name [usage] nhctl dev end [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] nhctl sync Description: File synchronization synx\uff1anhctl sync [Name][flags] [Flags] -d, --deployment string service name -m, --daemon Whether run as a daemon, the default is true, Value: [true|false] -b, --double Whether to use two-way synchronization, the default is true, Value: [true|false] [usage] nhctl sync [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] nhctl port-forward Description: Port forward synx\uff1anhctl port-forward [NAME] [flags] [Flags] -d, --deployment string service name -m, --daemon Whether run as a daemon, the default is true, Value: [true|false] -p, --dev-port strings Port specification, format: [local port:remote port], :8080 (random the local port) [usage] nhctl port-forward [Application Name] -d [Service Name] -p [local port : remote port] --kubeconfig [absolute path of kubeconfig] nhctl exec Description: Execute commands in a container synx\uff1anhctl exec [NAME] [flags] [Flags] -d, --deployment string service name -c, --command stringArray the commands [usage] nhctl exec [Application Name] -d [Service Name] -c [command] --kubeconfig [absolute path of kubeconfig] nhctl install Description: Install application synx\uff1anhctl install [NAME] [flags] [Flags] -c, --config string config.yaml path -r, --git-ref string git commitId -u, --git-url string git repository url --helm-chart-name string helm chart name --helm-repo-name string helm chart repository name --helm-repo-url string helm chart repository url --helm-repo-version string heml chart version -f, --helm-values string hlem Value.yaml path --ignore-pre-install Ignore pre-install dependency deployment -n, --namespace string kubernetes namespace --resource-path strings Relative repository path --set strings helm deployment method, specify multiple parameters, the same as using Value.yaml -t, --type string Support types of applications installed: helm or helm-repo or manifest [usage] nhctl install [Application Name] -u [a git repo url which contains helm chart or manifests] --kubeconfig [absolute path of kubeconfig] nhctl uninstall Description: Uninstall applicaiont synx\uff1anhctl uninstall [NAME] [flags] [Flags] --force Force uninstall [usage] nhctl uninstall [Application Name] [--force \u53ef\u9009] --kubeconfig [absolute path of kubeconfig] nhctl version Description: nhctl version info synx: nhctl version [usage] nhctl version","title":"CLI Commands"},{"location":"References/cli-commands/#nhctl-cli","text":"nhctl can be used to deploy applications and develop Kubernetes-based applications. The interaction between nhctl and Kubernetes requires kubectl. The kubeconfig file used can be specified by --kubeconfig. Syntax\uff1anhctl [commond] [Name] [flags] commond means operation\uff0ce.g: config, install, dev, exec, port-foward Name means the resource\uff0ce.g: Application Name flags indicate optional parameters\uff0ce.g: --kubeconfig specifies the kubeconfig file","title":"Nhctl CLI"},{"location":"References/cli-commands/#nhctl-init","text":"Description: Nocalhost Server\uff08nocalhost-api, nocalhost-web, nocalhost-dep\uff09initialization synx: nhctl init [flags] [flags] --force force to init, warning: it will remove all nocalhost old data -h, --help help for init --inject-user-amount int inject user amount, example 10, max is 999 --inject-user-offset int inject user id offset, default is 1 (default 1) --inject-user-template string inject users template, example Techo%d, max length is 15 -n, --namespace string set init nocalhost namesapce (default \"nocalhost\") -p, --port int for NodePort usage set ports (default 80) --set strings set values of helm -s, --source string bookinfo source, github or coding, default is github -t, --type string set NodePort or LoadBalancer to expose nocalhost service [usage] nhctl init -n [DevSpace Name] -t nodeport -p [port] nhctl init -n [DevSpace Name]","title":"nhctl init"},{"location":"References/cli-commands/#nhctl-config","text":"Description: View application or service development parameter configuration synx: nhctl config get [Name] [flags] [flags] -d, --deployment string service name [usage] nhctl config get [Application Name] nhctl config get [Application Name] -d [service Name] Description: Edit application or service development parameter configuration synx: nhctl config edit [Name] [flags] [flags] -c, --content string Service development configuration parameter content, the format needs to be base64 -d, --deployment string service name [usage] nhctl config edit [Application Name] -d [service Name] -c [content]","title":"nhctl config"},{"location":"References/cli-commands/#nhctl-describe","text":"Description: View the running status of the application synx: nhctl describe [Name] [usage] nhctl describe [Application Name]","title":"nhctl describe"},{"location":"References/cli-commands/#nhctl-list","text":"Description: View the services that the application is under development (development status, synchronization status, synchronized directory, port mapping) synx: nhctl list [Name] [usage] nhctl list [Application Name] E.g: nhctl list bookinfo +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | NAME | DEVELOPING | SYNCING | DEV-PORT-FORWARDED | SYNC-PATH | LOCAL-SYNCTHING-GUI | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | productpage | true | true | [39080:9080] | [d:\\workspace\\go-project\\productpage] | 52031 | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+","title":"nhctl list"},{"location":"References/cli-commands/#nhctl-dev","text":"Description: Toggle On DevMode synx\uff1anhctl dev start [Name][flags] [flags] -d, --deployment string Service name -h, --help help command -i, --image string DevContainer image URL -l, --lang string Service development language, such as\uff1ajava/go/python -s, --local-sync strings All files in the local directory that need to be synchronized to Devcontainer --work-dir string Devcontainer specifies which directory to receive locally synchronized files [usage] nhctl dev start [Applicaton Name] -d [Service Name] -l [java|go|python] -s [local dir] --work-dir [work dir] --kubeconfig [absolute path of kubeconfig] Description: Enter DevContainer container synx\uff1anhctl dev terminal [Name][flags] [Flags] -d, --deployment string service name [usage] nhctl dev terminal [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] Description: Toggle Off DevMode synx\uff1anhctl dev end [Name][flags] [Flags] -d, --deployment string service name [usage] nhctl dev end [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig]","title":"nhctl dev"},{"location":"References/cli-commands/#nhctl-sync","text":"Description: File synchronization synx\uff1anhctl sync [Name][flags] [Flags] -d, --deployment string service name -m, --daemon Whether run as a daemon, the default is true, Value: [true|false] -b, --double Whether to use two-way synchronization, the default is true, Value: [true|false] [usage] nhctl sync [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig]","title":"nhctl sync"},{"location":"References/cli-commands/#nhctl-port-forward","text":"Description: Port forward synx\uff1anhctl port-forward [NAME] [flags] [Flags] -d, --deployment string service name -m, --daemon Whether run as a daemon, the default is true, Value: [true|false] -p, --dev-port strings Port specification, format: [local port:remote port], :8080 (random the local port) [usage] nhctl port-forward [Application Name] -d [Service Name] -p [local port : remote port] --kubeconfig [absolute path of kubeconfig]","title":"nhctl port-forward"},{"location":"References/cli-commands/#nhctl-exec","text":"Description: Execute commands in a container synx\uff1anhctl exec [NAME] [flags] [Flags] -d, --deployment string service name -c, --command stringArray the commands [usage] nhctl exec [Application Name] -d [Service Name] -c [command] --kubeconfig [absolute path of kubeconfig]","title":"nhctl exec"},{"location":"References/cli-commands/#nhctl-install","text":"Description: Install application synx\uff1anhctl install [NAME] [flags] [Flags] -c, --config string config.yaml path -r, --git-ref string git commitId -u, --git-url string git repository url --helm-chart-name string helm chart name --helm-repo-name string helm chart repository name --helm-repo-url string helm chart repository url --helm-repo-version string heml chart version -f, --helm-values string hlem Value.yaml path --ignore-pre-install Ignore pre-install dependency deployment -n, --namespace string kubernetes namespace --resource-path strings Relative repository path --set strings helm deployment method, specify multiple parameters, the same as using Value.yaml -t, --type string Support types of applications installed: helm or helm-repo or manifest [usage] nhctl install [Application Name] -u [a git repo url which contains helm chart or manifests] --kubeconfig [absolute path of kubeconfig]","title":"nhctl install"},{"location":"References/cli-commands/#nhctl-uninstall","text":"Description: Uninstall applicaiont synx\uff1anhctl uninstall [NAME] [flags] [Flags] --force Force uninstall [usage] nhctl uninstall [Application Name] [--force \u53ef\u9009] --kubeconfig [absolute path of kubeconfig]","title":"nhctl uninstall"},{"location":"References/cli-commands/#nhctl-version","text":"Description: nhctl version info synx: nhctl version [usage] nhctl version","title":"nhctl version"},{"location":"References/file-sync/","text":"File Sync is an important feature of nocalhost 's Dev-Mode and it\u2018s supported only while enable Dev-Mode . It is the key to realize local development and remote compilation and startup. It will establish a tunnel from the target pod to your localhos taccording to the configuration or command, and transmit the file stream. You can use it by ntctl : Usage: nhctl sync [Application Name] [Flags] and the flags: Flags: -m, --daemon if file sync run as daemon, default true (default true) -d, --deployment string k8s deployment which your developing service exists -b, --double if use double side sync, default false Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file File Sync automatically enabled while using IDE Plugin to start Dev-Mode , and we can specify the directory able to synchronize in IDE Plugin . The default File Sync enabled by IDE Plugin is run as daemon and single side sync. NOTE: Because of platform differences, file sync will lost execution bit when sync from windows to devContainer, such as shell script and other file can't execute in windows. you can run chmod +x filename command manually in devContainer to fix that. File Sync use Syncthing , web interface default username and password is nocalhost , you can get Syncthing web interface URL by using nhctl list command.","title":"File sync"},{"location":"References/nocalhost-config-yaml-spec/","text":"Configuration of Nocalhost 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : nocalhost # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManifest # default value: null # required # nhctl param: --type,-t manifestType : helmGit # helmGit: chart path: relative path of git repo root. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # type: string[] # default value: [\".\"] # required resourcePath : [ \"deployments/chart\" ] # Install application with minimal replica size (Not currently implemented) # type: boolean # default value: false # optional # nhctl param: TODO minimalInstall : false # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's installation. (Not currently implemented) # type: object[] # default value: [] # optional onPostInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed before application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPreUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" priority : 5 # The jobs to be executed after application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPostUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service, the name of workload in cluster # type: string # default value: null # required - name : service1 # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset case insensitive # default value: deployment # required serviceType : deployment # The git repository clone url of the service # type: string # default value: null # required gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # DevContainer Image of the micro service # type: string # default value: null # required devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # The default shell of DevContainer (Not currently implemented) # type: string # default value: \"/bin/sh\" # optional devContainerShell : \"bash\" # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional syncType : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional syncFilePattern : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer # type: string[] # default value: [] # optional ignoreFilePattern : - \".git\" - \"./build\" # Ports to be forwarded to local when enter devMode # localPort:remotePort # type: string[] # default value: [] # optional devPorts : - 8080:8080 - :8000 # random localPort, remotePort 8000 # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # The work directory of DevContainer # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/root/nocalhost-dev\" # Dirs to be persisted in DevContainer # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDirs : # Dir to be persisted in DevContainer # type: string # default value: null # required - path : \"/root\" # Capability of the dir # type: string # default value: 10Gi # optional capacity : 100Gi # Build command of the service # type: string[] # default value: [\"\"] # optional buildCommand : [ \"./gradlew\" , \"package\" ] # Run command of the service # type: string[] # default value: [\"\"] # optional runCommand : [ \"./gradlew\" , \"bootRun\" ] # Debug command of the service # type: string[] # default value: [\"\"] # optional debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # Hot-reload run command of the service # type: string[] # default value: [\"\"] # optional hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # Hot-reload debug command of the service # type: string[] # default value: [\"\"] # optional hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # Ports of remote debugging (Not currently implemented) # type: string # default value: \"\" # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false # Specify reources requests and limits for DevContainer, same format to Kubernetes's resources (Not currently implemented) # type: object # default alue: {} # optional devContainerResources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi - name : service2 ...","title":"Config Specs"},{"location":"References/nocalhost-config-yaml-spec/#configuration-of-nocalhost","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : nocalhost # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManifest # default value: null # required # nhctl param: --type,-t manifestType : helmGit # helmGit: chart path: relative path of git repo root. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # type: string[] # default value: [\".\"] # required resourcePath : [ \"deployments/chart\" ] # Install application with minimal replica size (Not currently implemented) # type: boolean # default value: false # optional # nhctl param: TODO minimalInstall : false # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's installation. (Not currently implemented) # type: object[] # default value: [] # optional onPostInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed before application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPreUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" priority : 5 # The jobs to be executed after application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPostUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service, the name of workload in cluster # type: string # default value: null # required - name : service1 # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset case insensitive # default value: deployment # required serviceType : deployment # The git repository clone url of the service # type: string # default value: null # required gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # DevContainer Image of the micro service # type: string # default value: null # required devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # The default shell of DevContainer (Not currently implemented) # type: string # default value: \"/bin/sh\" # optional devContainerShell : \"bash\" # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional syncType : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional syncFilePattern : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer # type: string[] # default value: [] # optional ignoreFilePattern : - \".git\" - \"./build\" # Ports to be forwarded to local when enter devMode # localPort:remotePort # type: string[] # default value: [] # optional devPorts : - 8080:8080 - :8000 # random localPort, remotePort 8000 # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # The work directory of DevContainer # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/root/nocalhost-dev\" # Dirs to be persisted in DevContainer # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDirs : # Dir to be persisted in DevContainer # type: string # default value: null # required - path : \"/root\" # Capability of the dir # type: string # default value: 10Gi # optional capacity : 100Gi # Build command of the service # type: string[] # default value: [\"\"] # optional buildCommand : [ \"./gradlew\" , \"package\" ] # Run command of the service # type: string[] # default value: [\"\"] # optional runCommand : [ \"./gradlew\" , \"bootRun\" ] # Debug command of the service # type: string[] # default value: [\"\"] # optional debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # Hot-reload run command of the service # type: string[] # default value: [\"\"] # optional hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # Hot-reload debug command of the service # type: string[] # default value: [\"\"] # optional hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # Ports of remote debugging (Not currently implemented) # type: string # default value: \"\" # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false # Specify reources requests and limits for DevContainer, same format to Kubernetes's resources (Not currently implemented) # type: object # default alue: {} # optional devContainerResources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi - name : service2 ...","title":"Configuration of Nocalhost"},{"location":"References/port-forward/","text":"Port Forward is an important feature of nocalhost 's Dev-Mode and it\u2018s supported only while enable Dev-Mode . port-forward allows you to access and interact with internal Kubernetes cluster processes from your localhost. Use nhctl to forward port: Usage: nhctl port-forward [NAME] [flags] Flags: -m, --daemon if port-forward run as daemon (default true) -d, --deployment string k8s deployment which you want to forward to -p, --dev-port strings port-forward between pod and local, such 8080:8080 or :8080(random localPort) To forward application bookinfo's port 8080 to local random port: nhctl port-forward bookinfo :8080 And you can also use Port Forward by using IDE Plugin :","title":"Port Forward"},{"location":"References/service-dependency/","text":"Service-dependencey is a Service configuration, and it depends on a Nocalhost component called nocalhost-dep . Caution: nocalhost-dep depends on k8s admission webhooks , so please ensure that the Kubernetes cluster is at least as new as v1.16.0 and ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. You can click Service to see more about Service and Service 's configuration. dependPodsLabelSelector It means to wait for at least one pod with this label to be in the RUNNING state, otherwise the Service will wait under init container state. For example, a service such as a deployment 'productpage' depends on another service 'foo': apiVersion: apps/v1 kind: Deployment metadata: labels: app: foo Then you can configure this service as follows: services: -name: productpage serviceType: deployment dependPodsLabelSelector: -\"app=foo\" dependJobsLabelSelector It means waiting for a job with specified label to have completed and become Succeeded state. Gor example, a deployment 'productpage' depends on a job: apiVersion: batch/v1 kind: Job metadata: labels: foo: bar You can also configure this service as follows: services: -name: productpage serviceType: deployment dependJobsLabelSelector: -\"foo=bar\"","title":"Service Dependency"},{"location":"References/service-dependency/#dependpodslabelselector","text":"It means to wait for at least one pod with this label to be in the RUNNING state, otherwise the Service will wait under init container state. For example, a service such as a deployment 'productpage' depends on another service 'foo': apiVersion: apps/v1 kind: Deployment metadata: labels: app: foo Then you can configure this service as follows: services: -name: productpage serviceType: deployment dependPodsLabelSelector: -\"app=foo\"","title":"dependPodsLabelSelector"},{"location":"References/service-dependency/#dependjobslabelselector","text":"It means waiting for a job with specified label to have completed and become Succeeded state. Gor example, a deployment 'productpage' depends on a job: apiVersion: batch/v1 kind: Job metadata: labels: foo: bar You can also configure this service as follows: services: -name: productpage serviceType: deployment dependJobsLabelSelector: -\"foo=bar\"","title":"dependJobsLabelSelector"},{"location":"References/syncfilepattern-ignorefilepattern/","text":"SyncFilePattern/IgnoreFilePattern Description If some files should be or not be synchronized to (or from) other devices, configure the corresponding SyncFilePattern / IgnoreFilePattern . All patterns are relative to the folder root (The folder you select while get into DevMode ). Caution: The priority of the IgnoreFilePattern is higher than SyncFilePattern , so if your pattern both covered the same file, the file will be ignored. Patterns syntax Regular file names match themselves, i.e. the pattern foo matches the files foo , subdir/foo as well as any directory named foo . Spaces are treated as regular characters, except for leading and trailing spaces, which are automatically trimmed. Asterisk ( * ) matches zero or more characters in a filename, but does not match the directory separator. te*ne matches telephone , subdir/telephone but not tele/phone . Double asterisk ( ** ) matches as above, but also directory separators. te**ne matches telephone , subdir/telephone and tele/sub/dir/phone . Question mark ( ? ) matches a single character that is not the directory separator. te??st matches tebest but not teb/st or test . Square brackets ( [] ) denote a character range: [a-z] matches any lower case character. Curly brackets ( {} ) denote a set of comma separated alternatives: {banana,pineapple} matches either banana or pineapple . Backslash ( \\ ) \u201cescapes\u201d a special character so that it loses its special meaning. For example, \\{banana\\} matches {banana} exactly and does not denote a set of alternatives as above. Escaped characters are not supported on Windows. A pattern beginning with / or ./ matches in the root of the folder only. /foo or ./foo matches foo but not subdir/foo . A pattern beginning with a (?i) prefix enables case-insensitive pattern matching. (?i)test matches test , TEST and tEsT . The (?i) prefix can be combined with other patterns, for example the pattern (?i)picture*.png indicates that Picture1.PNG should be synchronized. On Mac OS and Windows, patterns are always case-insensitive. Note Prefixes can be specified in any order (e.g. \u201c(?i){foo,bar}/*/bar\u201d), but cannot be in a single pair of parentheses (not \"{foo,(?i),bar}/*/bar\"). Example Given a directory layout: .DS_Store foo foofoo bar/ baz quux quuz bar2/ baz frobble My Pictures/ Img15.PNG nocalhost/ hello test/ team/ and with following config: SyncFilePattern: - frobble - quuz - ./nocalhost IgnoreFilePattern: - foo - *2 - qu* - (?i)my pictures - nocalhost/t** The priority of the IgnoreFilePattern is higher than SyncFilePattern and the end result becomes: foo # ignored, matches IgnoreFilePattern \"foo\" foofoo # synced, does not match IgnoreFilePattern \"foo\", but would match \"foo*\" or \"*foo\" bar/ # synced, no such config, so synced baz # synced, no such config, so synced quux # ignored, matches IgnoreFilePattern \"qu*\" quuz # ignored, though specify the SyncFilePattern \"quuz\",but matches higher level IgnoreFilePattern \"qu*\" bar2/ # ignored, matches IgnoreFilePattern \"*2\" baz # ignored, due to dir parent being ignored frobble # ignored, due to dir parent being ignored My Pictures/ # ignored, matched IgnoreFilePattern case insensitive \"(?i)my pictures\" pattern Img15.PNG # ignored, due to parent being ignored nocalhost/ # synced, no such config, so synced hello # synced, no such config, so synced test/ # ignored, matches IgnoreFilePattern \"nocalhost/t**\" team/ # ignored, matches IgnoreFilePattern \"nocalhost/t**\"","title":"Sync/Ignore File Pattern"},{"location":"References/syncfilepattern-ignorefilepattern/#syncfilepatternignorefilepattern","text":"","title":"SyncFilePattern/IgnoreFilePattern"},{"location":"References/syncfilepattern-ignorefilepattern/#description","text":"If some files should be or not be synchronized to (or from) other devices, configure the corresponding SyncFilePattern / IgnoreFilePattern . All patterns are relative to the folder root (The folder you select while get into DevMode ). Caution: The priority of the IgnoreFilePattern is higher than SyncFilePattern , so if your pattern both covered the same file, the file will be ignored.","title":"Description"},{"location":"References/syncfilepattern-ignorefilepattern/#patterns-syntax","text":"Regular file names match themselves, i.e. the pattern foo matches the files foo , subdir/foo as well as any directory named foo . Spaces are treated as regular characters, except for leading and trailing spaces, which are automatically trimmed. Asterisk ( * ) matches zero or more characters in a filename, but does not match the directory separator. te*ne matches telephone , subdir/telephone but not tele/phone . Double asterisk ( ** ) matches as above, but also directory separators. te**ne matches telephone , subdir/telephone and tele/sub/dir/phone . Question mark ( ? ) matches a single character that is not the directory separator. te??st matches tebest but not teb/st or test . Square brackets ( [] ) denote a character range: [a-z] matches any lower case character. Curly brackets ( {} ) denote a set of comma separated alternatives: {banana,pineapple} matches either banana or pineapple . Backslash ( \\ ) \u201cescapes\u201d a special character so that it loses its special meaning. For example, \\{banana\\} matches {banana} exactly and does not denote a set of alternatives as above. Escaped characters are not supported on Windows. A pattern beginning with / or ./ matches in the root of the folder only. /foo or ./foo matches foo but not subdir/foo . A pattern beginning with a (?i) prefix enables case-insensitive pattern matching. (?i)test matches test , TEST and tEsT . The (?i) prefix can be combined with other patterns, for example the pattern (?i)picture*.png indicates that Picture1.PNG should be synchronized. On Mac OS and Windows, patterns are always case-insensitive. Note Prefixes can be specified in any order (e.g. \u201c(?i){foo,bar}/*/bar\u201d), but cannot be in a single pair of parentheses (not \"{foo,(?i),bar}/*/bar\").","title":"Patterns syntax"},{"location":"References/syncfilepattern-ignorefilepattern/#example","text":"Given a directory layout: .DS_Store foo foofoo bar/ baz quux quuz bar2/ baz frobble My Pictures/ Img15.PNG nocalhost/ hello test/ team/ and with following config: SyncFilePattern: - frobble - quuz - ./nocalhost IgnoreFilePattern: - foo - *2 - qu* - (?i)my pictures - nocalhost/t** The priority of the IgnoreFilePattern is higher than SyncFilePattern and the end result becomes: foo # ignored, matches IgnoreFilePattern \"foo\" foofoo # synced, does not match IgnoreFilePattern \"foo\", but would match \"foo*\" or \"*foo\" bar/ # synced, no such config, so synced baz # synced, no such config, so synced quux # ignored, matches IgnoreFilePattern \"qu*\" quuz # ignored, though specify the SyncFilePattern \"quuz\",but matches higher level IgnoreFilePattern \"qu*\" bar2/ # ignored, matches IgnoreFilePattern \"*2\" baz # ignored, due to dir parent being ignored frobble # ignored, due to dir parent being ignored My Pictures/ # ignored, matched IgnoreFilePattern case insensitive \"(?i)my pictures\" pattern Img15.PNG # ignored, due to parent being ignored nocalhost/ # synced, no such config, so synced hello # synced, no such config, so synced test/ # ignored, matches IgnoreFilePattern \"nocalhost/t**\" team/ # ignored, matches IgnoreFilePattern \"nocalhost/t**\"","title":"Example"},{"location":"References/compare/overview/","text":"Nocalhsot vs. Other Software It is difficult to compare the differences between different software, especially when asked whether it can be replaced by other software? And can different software be related to each other? In this chapter, we compare Nocalhost with other software. It is recommended to read \u201cNocalhost-Redefining the Development Environment\u201d first, which helps to understand the problem that Nocalhost is trying to solve. In summary, there are currently three ideas for accelerating development in the Kubernetes environment: Monitor local code changes, execute the CI/CD pipeline locally immediately after the modification, rebuild the microservice image and automatically deploy it to the Kubernetes cluster. This is the practice of Google Cloud Code , Skaffold , and Tilt : Replace the workload to be developed with the Proxy network proxy container, forwarding the traffic in the cluster to the local, and forwarding the local traffic to the cluster. Use docker run locally to run the microservice container. This is how Telepresence does: Replace the workload to be developed with a development container, map local code to a remote directory, build and run microservices in the remote container. This is how Nocalhost does: In addition, Nocalhost also provides application management, development environment management, VS Code plug-in, IDEA plug-in, etc. which are conducive to standardization and accelerate development. You can click the menu on the left to browse the comparison between Nocalhost and specific software. These comparisons are not to convince you to use Nocalhost, nor are they intended to belittle other software. Our goal is only to better understand the functional differences between Nocalhost and other software. If you think any stated facts are incorrect, please submit a PR for improvement.","title":"Overview"},{"location":"References/compare/overview/#nocalhsot-vs-other-software","text":"It is difficult to compare the differences between different software, especially when asked whether it can be replaced by other software? And can different software be related to each other? In this chapter, we compare Nocalhost with other software. It is recommended to read \u201cNocalhost-Redefining the Development Environment\u201d first, which helps to understand the problem that Nocalhost is trying to solve. In summary, there are currently three ideas for accelerating development in the Kubernetes environment: Monitor local code changes, execute the CI/CD pipeline locally immediately after the modification, rebuild the microservice image and automatically deploy it to the Kubernetes cluster. This is the practice of Google Cloud Code , Skaffold , and Tilt : Replace the workload to be developed with the Proxy network proxy container, forwarding the traffic in the cluster to the local, and forwarding the local traffic to the cluster. Use docker run locally to run the microservice container. This is how Telepresence does: Replace the workload to be developed with a development container, map local code to a remote directory, build and run microservices in the remote container. This is how Nocalhost does: In addition, Nocalhost also provides application management, development environment management, VS Code plug-in, IDEA plug-in, etc. which are conducive to standardization and accelerate development. You can click the menu on the left to browse the comparison between Nocalhost and specific software. These comparisons are not to convince you to use Nocalhost, nor are they intended to belittle other software. Our goal is only to better understand the functional differences between Nocalhost and other software. If you think any stated facts are incorrect, please submit a PR for improvement.","title":"Nocalhsot vs. Other Software"},{"location":"References/compare/telepresence/","text":"Telepresence Telepresence deploys a network proxy Pod in the cluster, which will proxy Kubernetes environment data (for example: TCP connections, environment variables, volumes) to local processes. The local process connects to the remote Kubernetes cluster through a proxy so that it can directly access remote microservices through DNS. Telepresence's concept is very good, but it has the following disadvantages: In some controlled network environments, it may not be possible to establish a VPN connection with a remote cluster. Locally use Docker Run to run the service, which may be different from the Pod's running mode, for example, it cannot simulate InitContainer Use sshfs to mount remote volumes, which cannot support Windows without WSL. The development and debugging process is not continuous, and several commands need to be executed manually at different stages.","title":"Telepresence"},{"location":"References/compare/telepresence/#telepresence","text":"Telepresence deploys a network proxy Pod in the cluster, which will proxy Kubernetes environment data (for example: TCP connections, environment variables, volumes) to local processes. The local process connects to the remote Kubernetes cluster through a proxy so that it can directly access remote microservices through DNS. Telepresence's concept is very good, but it has the following disadvantages: In some controlled network environments, it may not be possible to establish a VPN connection with a remote cluster. Locally use Docker Run to run the service, which may be different from the Pod's running mode, for example, it cannot simulate InitContainer Use sshfs to mount remote volumes, which cannot support Windows without WSL. The development and debugging process is not continuous, and several commands need to be executed manually at different stages.","title":"Telepresence"},{"location":"References/compare/tilt-and-other/","text":"Tilt, Skaffold, Google Cloud Code Tilt, Skaffold, Google Cloud Code can all automate all steps from local code changes to update process: monitor local files, rebuild container images and update the environment, just like automated docker build && docker push && kubectl apply or docker-compose up can be understood as a local CI/CD tool. None of them can avoid the process of rebuilding the image and updating the workload every time the code is updated. Tilt introduced a method \"live_update\" that does not need to rebuild the image every time. The configuration is more complicated, and it only shortens the docker build time. Skaffold has a file synchronization function of the beta version, which can package local changes into tar and synchronize them to the container without rebuilding the image, redeploying and restarting the POD, but there are still some usage restrictions. In addition to being able to automate the CI/CD process, Google Cloud Code also provides VS Code and IDEA plug-ins that are easy to develop, but it is strongly bound to Google's cloud services.","title":"Tilt, Skaffold, Google Cloud Code"},{"location":"References/compare/tilt-and-other/#tilt-skaffold-google-cloud-code","text":"Tilt, Skaffold, Google Cloud Code can all automate all steps from local code changes to update process: monitor local files, rebuild container images and update the environment, just like automated docker build && docker push && kubectl apply or docker-compose up can be understood as a local CI/CD tool. None of them can avoid the process of rebuilding the image and updating the workload every time the code is updated. Tilt introduced a method \"live_update\" that does not need to rebuild the image every time. The configuration is more complicated, and it only shortens the docker build time. Skaffold has a file synchronization function of the beta version, which can package local changes into tar and synchronize them to the container without rebuilding the image, redeploying and restarting the POD, but there are still some usage restrictions. In addition to being able to automate the CI/CD process, Google Cloud Code also provides VS Code and IDEA plug-ins that are easy to develop, but it is strongly bound to Google's cloud services.","title":"Tilt, Skaffold, Google Cloud Code"},{"location":"Tutorials/nocalhost-web-configuration/","text":"Create a Quick-Experience kubernetes application 'bookinfo' . This section will help you to config an application simply. Now get into nocalhost-web . Do not know the site of nocalhost-server url? See 'Deployment' and choose your kubernetes cluster type's deployment tutorial. STEP1. Create User First switch to the tab Users , click CREATE and create a user as follow: Email : foo@nocalhost.dev Name : foo Password : 123456 This user can sign into the Nocalhost-IDE-Plug-in but can not sign into Nocalhost-Server . (default user admin@admin.com can also sign in both.) STEP2. Create Cluster First switch to the tab Clusters , paste kube admin config by using kubectl config view --minify --raw --flatten and click on the Save button to create a Cluster . Then we can see: Name Cluster Version NodesCount Users Count Creator ... whatever v1.20.1 1 0 Admin ... STEP3. Create Application After creating Cluster , switch to another tab named Applications . Create an 'bookinfo' application manually by using following config: Application Name : bookinfo Kubernetes Manifest Source Type : Git Manifest Type : Manifest Git Repo Url : https://github.com/nocalhost/bookinfo.git Resource Dir : manifest/templates bookinfo is a demo project for nocalhost , it contain both manifest type Kubenetes manifests and helm manifests , we use Kubernetes manifests and specify it's manifest resource dir manifest/templates . (or you can use Helm manifests with resource Dir charts/bookinfo ) Application Name Kubernetes Manifest Source Type Creator ... bookinfo Git Admin ... STEP4. Create devSpace for User At last, click the button CREATE SPACE on the far right of the application list. Choose a Cluster created before to create a DevSpace for this Application and specify it's owner foo Status Owner Namespace Created At Cluster ... Foo Nh1hsbq 2020-12-11 00:00:00 Whatever ... Then nocalhost use kubenetes config from Cluster to create a kubernates namespace . This namespace use for installing application when develop on Nocalhost-Plug-In .","title":"Nocalhost web configuration"},{"location":"Tutorials/nocalhost-web-configuration/#create-a-quick-experience-kubernetes-application-bookinfo","text":"This section will help you to config an application simply. Now get into nocalhost-web . Do not know the site of nocalhost-server url? See 'Deployment' and choose your kubernetes cluster type's deployment tutorial.","title":"Create a Quick-Experience kubernetes application 'bookinfo'."},{"location":"Tutorials/nocalhost-web-configuration/#step1-create-user","text":"First switch to the tab Users , click CREATE and create a user as follow: Email : foo@nocalhost.dev Name : foo Password : 123456 This user can sign into the Nocalhost-IDE-Plug-in but can not sign into Nocalhost-Server . (default user admin@admin.com can also sign in both.)","title":"STEP1. Create User"},{"location":"Tutorials/nocalhost-web-configuration/#step2-create-cluster","text":"First switch to the tab Clusters , paste kube admin config by using kubectl config view --minify --raw --flatten and click on the Save button to create a Cluster . Then we can see: Name Cluster Version NodesCount Users Count Creator ... whatever v1.20.1 1 0 Admin ...","title":"STEP2. Create Cluster"},{"location":"Tutorials/nocalhost-web-configuration/#step3-create-application","text":"After creating Cluster , switch to another tab named Applications . Create an 'bookinfo' application manually by using following config: Application Name : bookinfo Kubernetes Manifest Source Type : Git Manifest Type : Manifest Git Repo Url : https://github.com/nocalhost/bookinfo.git Resource Dir : manifest/templates bookinfo is a demo project for nocalhost , it contain both manifest type Kubenetes manifests and helm manifests , we use Kubernetes manifests and specify it's manifest resource dir manifest/templates . (or you can use Helm manifests with resource Dir charts/bookinfo ) Application Name Kubernetes Manifest Source Type Creator ... bookinfo Git Admin ...","title":"STEP3. Create Application"},{"location":"Tutorials/nocalhost-web-configuration/#step4-create-devspace-for-user","text":"At last, click the button CREATE SPACE on the far right of the application list. Choose a Cluster created before to create a DevSpace for this Application and specify it's owner foo Status Owner Namespace Created At Cluster ... Foo Nh1hsbq 2020-12-11 00:00:00 Whatever ... Then nocalhost use kubenetes config from Cluster to create a kubernates namespace . This namespace use for installing application when develop on Nocalhost-Plug-In .","title":"STEP4. Create devSpace for User"},{"location":"Tutorials/nocalhost-with-docker-desktop/","text":"TODO","title":"Nocalhost with docker desktop"},{"location":"Tutorials/nocalhost-with-helm/","text":"TODO","title":"Nocalhost with helm"},{"location":"Tutorials/nocalhost-with-k8s-manifests/","text":"TODO","title":"Nocalhost with k8s manifests"},{"location":"Tutorials/nocalhost-with-minikube/","text":"Prerequisites To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. minikube docker (we suggest to use docker as driver though minikube support dirrent type of driver) helm3 kubectl Nhctl v0.0.6+ VSCode Nocalhost VSCode Plugin v0.0.6+ ( though Nocalhost can work order without the plugin, we still recommend using plugin for best experience) Make sure your minikube is up and running. minikube kubectl version Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag. Getting Started This section will help you to use nocalhost for fast-feedback develop. We prepare a Quick-Experience demo, you don\u2019t have to add any additional configuration. Just init the nocalhost and develop in VSCode only throughout the experience. STEP1. Init Nocalhost First initial the Nocalhost with following command: \u200b -n is the namespace nocalhost used and it will be auto created nhctl init -n nocalhost Waiting for 5 minutes, the Nocalhost-Server and Nocalhost-Dep will start and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n nocalhost NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n nocalhost-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m STEP2. Access nocalhost-web nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n nocalhost NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 <pending> 80:30265/TCP 20m We can see the svc nocalhost-web 's port exposed outside with is 30265, but we can\u2018t not access it directly right now. Use minikube tunnel minikube tunnel runs as a process, creating a network route on the host to the service CIDR of the cluster using the cluster\u2019s IP address as a gateway. The tunnel command exposes the external IP directly to any program running on the host operating system. Then entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port . In this tutorials, minikube ip is 192.168.49.2 and nocalhost-web 's expose port is 30265. > minikube ip 192.168.49.2 So entering http://192.168.49.2:30265 : You can login with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost was inited. STEP3. Use VSCode Nocalhost Plug-in to install application This section show how to install your k8s application by using Quick-Experience application bookinfo. First make sure your plugin has been installed Switch to the Nocalhost tab Specify your nocalhost-web endpoint, and type in the address http:// minikube ip : nocalhost-web-expose-port current used to access Nocalhost homepage. Sign in with email foo@nocalhost.dev and pwd 123456 Why not login with admin@admin.com ? You can enter the website http:// minikube ip : nocalhost-web-expose-port , switch to the tab Application , and there is a Application sample named bookinfo. click SPACE LIST then you can see Nocalhost created a Space for User Nocalhost . That can be simply understood as Space under Application is the workspace user can access in the VSCode Nocalhost Plug-in . Of cause you can create a Space for user admin manually and sign in with it. Here show all the Spaces hold by the user you sign in. Each spaces can be installed according to your configuration in Nocalhost-Web . Now click the rocket to install it: Waiting for Application startup. The cycle icon means the resources is already running. Wait until all pods start up, now forward the port of Deployment 'productpage' by right clicking it and select Port Forward to access this application on site. Type in 9080:9080 and press Enter Then we can access 'bookinfo' on site http://localhost:9080 STEP4. Start develop! Start develop and entering Dev-Mode by clicking one of Deployment 's hammer, 'productpage' for example. You can specify your source code dir both local directory or git repo, here we use git repo, and 'productpage''s source code is on https://github.com/nocalhost/bookinfo-productpage , then choose a local directory to clone source code. Waiting for the dev mode complete startup, Nocalhost-Plug-In will open a new window according to the local directory you specified with cloned source code. If the source code is already on your machine, you can choose Open local directory directly while enter develop by clicking hammer Nocalhost will replace the deployment's container you develop, those files in the directory you specified such as the source code will be synchronized real-time into the container. Let's modify the templates/index.html or something else. Don't forget to saving the change because nocalhost do not synchronize your change in memory! Then run ./run.sh in the terminal, wait for the app up. This step can be any command to start your application, such as: java Main gradle build && java -jar ./foo/bar.jar python helloworld.py Access bookinfo on site http://localhost:9080 again, our changes is take effect: Nocalhost helps to have a coding experience that almost like develop in the container, so you needn't wait for build images, CI/CD, etc... Just modify your code, and run it. STEP5. End develop and uninstall Application Now return to the Nocalhost-Plug-In , click the red hammer to end dev mode (may click the Reresh icon to synchronize the latest status). While dev mode end, current container replaced before will be restored. Let's access 'bookinfo' on site http://localhost:9080: Click the bin to uninstall Application that all k8s resources in this Application will be removed. Configure Application This section will help you to config an application simply. Now return to nocalhost-web , entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port , login to the nocalhost-web using default email admin@admin.com and password 123456. STEP1. Create Cluster First switch to the tab Clusters , paste kube admin config by using kubectl.exe config view --minify --raw --flatten and click on the Save button to create a Cluster . Then we can see: Name Cluster Version NodesCount Users Count Creator ... whatever V1.19.3 1 0 Admin ... STEP2. Create Application After creating Cluster , switch to another tab named Applications . Create an 'bookinfo' application manually by using following config: Application Name : bookinfo Kubernetes Manifest Source Type : Git Manifest Type : Helm Chart Git Repo Url : https://github.com/nocalhost/bookinfo.git Resource Dir : charts/bookinfo bookinfo is a demo project for nocalhost , it contain both manifest type Kubenetes manifests and helm manifests , we use Helm manifests and specify it's manifest resource dir charts/bookinfo . (or you can use Kubenetes manifests with resource Dir manifest/templates ) Application Name Kubernetes Manifest Source Type Creator ... bookinfo Git Admin ... STEP3. Create Space At last, create a Space for this Application , choose a Cluster created before and specify it's owner: Status Owner Namespace Created At Cluster ... Admin Nh1hsbq 2020-12-11 00:00:00 Whatever ... then nocalhost use kubenetes config from Cluster to create a kubernates namespace . This namespace use for installing application when develop on Nocalhost-Plug-In .","title":"Nocalhost with minikube"},{"location":"Tutorials/nocalhost-with-minikube/#prerequisites","text":"To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. minikube docker (we suggest to use docker as driver though minikube support dirrent type of driver) helm3 kubectl Nhctl v0.0.6+ VSCode Nocalhost VSCode Plugin v0.0.6+ ( though Nocalhost can work order without the plugin, we still recommend using plugin for best experience) Make sure your minikube is up and running. minikube kubectl version Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag.","title":"Prerequisites"},{"location":"Tutorials/nocalhost-with-minikube/#getting-started","text":"This section will help you to use nocalhost for fast-feedback develop. We prepare a Quick-Experience demo, you don\u2019t have to add any additional configuration. Just init the nocalhost and develop in VSCode only throughout the experience.","title":"Getting Started"},{"location":"Tutorials/nocalhost-with-minikube/#step1-init-nocalhost","text":"First initial the Nocalhost with following command: \u200b -n is the namespace nocalhost used and it will be auto created nhctl init -n nocalhost Waiting for 5 minutes, the Nocalhost-Server and Nocalhost-Dep will start and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n nocalhost NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n nocalhost-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m","title":"STEP1. Init Nocalhost"},{"location":"Tutorials/nocalhost-with-minikube/#step2-access-nocalhost-web","text":"nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n nocalhost NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 <pending> 80:30265/TCP 20m We can see the svc nocalhost-web 's port exposed outside with is 30265, but we can\u2018t not access it directly right now. Use minikube tunnel minikube tunnel runs as a process, creating a network route on the host to the service CIDR of the cluster using the cluster\u2019s IP address as a gateway. The tunnel command exposes the external IP directly to any program running on the host operating system. Then entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port . In this tutorials, minikube ip is 192.168.49.2 and nocalhost-web 's expose port is 30265. > minikube ip 192.168.49.2 So entering http://192.168.49.2:30265 : You can login with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost was inited.","title":"STEP2. Access nocalhost-web"},{"location":"Tutorials/nocalhost-with-minikube/#step3-use-vscode-nocalhost-plug-in-to-install-application","text":"This section show how to install your k8s application by using Quick-Experience application bookinfo. First make sure your plugin has been installed Switch to the Nocalhost tab Specify your nocalhost-web endpoint, and type in the address http:// minikube ip : nocalhost-web-expose-port current used to access Nocalhost homepage. Sign in with email foo@nocalhost.dev and pwd 123456 Why not login with admin@admin.com ? You can enter the website http:// minikube ip : nocalhost-web-expose-port , switch to the tab Application , and there is a Application sample named bookinfo. click SPACE LIST then you can see Nocalhost created a Space for User Nocalhost . That can be simply understood as Space under Application is the workspace user can access in the VSCode Nocalhost Plug-in . Of cause you can create a Space for user admin manually and sign in with it. Here show all the Spaces hold by the user you sign in. Each spaces can be installed according to your configuration in Nocalhost-Web . Now click the rocket to install it: Waiting for Application startup. The cycle icon means the resources is already running. Wait until all pods start up, now forward the port of Deployment 'productpage' by right clicking it and select Port Forward to access this application on site. Type in 9080:9080 and press Enter Then we can access 'bookinfo' on site http://localhost:9080","title":"STEP3. Use VSCode Nocalhost Plug-in to install application"},{"location":"Tutorials/nocalhost-with-minikube/#step4-start-develop","text":"Start develop and entering Dev-Mode by clicking one of Deployment 's hammer, 'productpage' for example. You can specify your source code dir both local directory or git repo, here we use git repo, and 'productpage''s source code is on https://github.com/nocalhost/bookinfo-productpage , then choose a local directory to clone source code. Waiting for the dev mode complete startup, Nocalhost-Plug-In will open a new window according to the local directory you specified with cloned source code. If the source code is already on your machine, you can choose Open local directory directly while enter develop by clicking hammer Nocalhost will replace the deployment's container you develop, those files in the directory you specified such as the source code will be synchronized real-time into the container. Let's modify the templates/index.html or something else. Don't forget to saving the change because nocalhost do not synchronize your change in memory! Then run ./run.sh in the terminal, wait for the app up. This step can be any command to start your application, such as: java Main gradle build && java -jar ./foo/bar.jar python helloworld.py Access bookinfo on site http://localhost:9080 again, our changes is take effect: Nocalhost helps to have a coding experience that almost like develop in the container, so you needn't wait for build images, CI/CD, etc... Just modify your code, and run it.","title":"STEP4. Start develop!"},{"location":"Tutorials/nocalhost-with-minikube/#step5-end-develop-and-uninstall-application","text":"Now return to the Nocalhost-Plug-In , click the red hammer to end dev mode (may click the Reresh icon to synchronize the latest status). While dev mode end, current container replaced before will be restored. Let's access 'bookinfo' on site http://localhost:9080: Click the bin to uninstall Application that all k8s resources in this Application will be removed.","title":"STEP5. End develop and uninstall Application"},{"location":"Tutorials/nocalhost-with-minikube/#configure-application","text":"This section will help you to config an application simply. Now return to nocalhost-web , entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port , login to the nocalhost-web using default email admin@admin.com and password 123456.","title":"Configure Application"},{"location":"Tutorials/nocalhost-with-minikube/#step1-create-cluster","text":"First switch to the tab Clusters , paste kube admin config by using kubectl.exe config view --minify --raw --flatten and click on the Save button to create a Cluster . Then we can see: Name Cluster Version NodesCount Users Count Creator ... whatever V1.19.3 1 0 Admin ...","title":"STEP1. Create Cluster"},{"location":"Tutorials/nocalhost-with-minikube/#step2-create-application","text":"After creating Cluster , switch to another tab named Applications . Create an 'bookinfo' application manually by using following config: Application Name : bookinfo Kubernetes Manifest Source Type : Git Manifest Type : Helm Chart Git Repo Url : https://github.com/nocalhost/bookinfo.git Resource Dir : charts/bookinfo bookinfo is a demo project for nocalhost , it contain both manifest type Kubenetes manifests and helm manifests , we use Helm manifests and specify it's manifest resource dir charts/bookinfo . (or you can use Kubenetes manifests with resource Dir manifest/templates ) Application Name Kubernetes Manifest Source Type Creator ... bookinfo Git Admin ...","title":"STEP2. Create Application"},{"location":"Tutorials/nocalhost-with-minikube/#step3-create-space","text":"At last, create a Space for this Application , choose a Cluster created before and specify it's owner: Status Owner Namespace Created At Cluster ... Admin Nh1hsbq 2020-12-11 00:00:00 Whatever ... then nocalhost use kubenetes config from Cluster to create a kubernates namespace . This namespace use for installing application when develop on Nocalhost-Plug-In .","title":"STEP3. Create Space"},{"location":"Tutorials/nocalhost-with-serverless-kubernetes/","text":"TODO","title":"Nocalhost with serverless kubernetes"},{"location":"Tutorials/nocalhost-with-tke/","text":"TODO","title":"Nocalhost with tke"},{"location":"Tutorials/nocalhost-without-ide-plugin/","text":"Start coding with nhctl Install nhctl: https://nocalhost.dev/installation Get \"kubeconfig\" file from Kubernetes Administrator or download from Nocalhost Web and save to local machine. Install an application that you want to develop via nhctl: nhctl install <application name> --kubeconfig <kubeconfig> -u <a git repo url which contains helm chart or manifests> After installation,you can enter DevMode by specify a workload that you want to develop: nhctl dev start <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Once DevMode established, codes can be transfered to DevContainer by running nhctl sync command: nhctl sync <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Forwarding ports from DevContainer to local is a optional operation if you want access container locally: nhctl port-forward <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Now, you can make some code changes and start your program process in DevContainer: nhctl dev terminal <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> <your program start command,like: ./gradlew bootRun> Note Click here to get more details about the arguments of nhctl","title":"Start coding with nhctl"},{"location":"Tutorials/nocalhost-without-ide-plugin/#start-coding-with-nhctl","text":"Install nhctl: https://nocalhost.dev/installation Get \"kubeconfig\" file from Kubernetes Administrator or download from Nocalhost Web and save to local machine. Install an application that you want to develop via nhctl: nhctl install <application name> --kubeconfig <kubeconfig> -u <a git repo url which contains helm chart or manifests> After installation,you can enter DevMode by specify a workload that you want to develop: nhctl dev start <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Once DevMode established, codes can be transfered to DevContainer by running nhctl sync command: nhctl sync <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Forwarding ports from DevContainer to local is a optional operation if you want access container locally: nhctl port-forward <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Now, you can make some code changes and start your program process in DevContainer: nhctl dev terminal <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> <your program start command,like: ./gradlew bootRun> Note Click here to get more details about the arguments of nhctl","title":"Start coding with nhctl"},{"location":"Tutorials/plugin-best-practices/","text":"This tutorial shows best practices to use Nocalhost by using Quick-Experience kubernetes application 'bookinfo' . Prerequisites Make sure you have been deploy Nocalhost and can access Nocalhost-server correctly. Here are some tutorials for deploying Nocalhost and getting Nocalhost-server-url by using different technologie: Minikube Kubernetes Cluster TKE STEP 1: Configure and login Nocalhost Server in VSCode First make sure your plugin has been installed Switch to the Nocalhost tab Specify your nocalhost-web endpoint, and type in the address to access Nocalhost-Server current used. Do not know the site of Nocalhost-Server url? Back to the top of this doc and choose your kubernetes cluster type's deployment tutorial. Sign in with email foo@nocalhost.dev and pwd 123456 Why not login with admin@admin.com ? You can enter the Nocalhost-Server homepage, switch to the tab Application , and there is a Application sample named 'bookinfo'. click SPACE LIST , then you can see Nocalhost created a DevSpace for User Nocalhost . That can be simply understood as DevSpace under Application is the workspace user can access in the VSCode Nocalhost Plug-in . Step 2: Install demo application: bookinfo Here show all the DevSpace hold by the user you sign in. Each spaces can be installed according to your configuration in Nocalhost-Web . Don't see any DevSpace after sign in? see how to config nocalhost-web Now click the rocket to install it: Waiting for Application startup. The cycle icon means the resources is already running. Wait until all pods start up, now forward the port of Deployment 'productpage' by right clicking it and select Port Forward to access this application on site. Type in 9080:9080 and press Enter . Then we can access 'bookinfo' on site http://localhost:9080. Step 3: Start dev mode Start develop and entering Dev-Mode by clicking one of Deployment 's hammer, 'productpage' for example. You can specify your source code dir both local directory or git repo, here we use git repo, and 'productpage''s source code is on https://github.com/nocalhost/bookinfo-productpage , then choose a local directory to clone source code. Waiting for the dev mode complete startup, Nocalhost-Plug-In will open a new window according to the local directory you specified with cloned source code. If the source code is already on your machine, you can choose Open local directory directly while enter develop by clicking hammer Nocalhost will replace the deployment's container you develop, those files in the directory you specified such as the source code will be synchronized real-time into the container. Step 4: Change the code and check the result Let's modify the templates/index.html or something else. Don't forget to saving the change because nocalhost do not synchronize your change in memory! Then run ./run.sh in the terminal, wait for the app up. This step can be any command to start your application, such as: java Main gradle build && java -jar ./foo/bar.jar python helloworld.py Access bookinfo on site http://localhost:9080 again, our changes is take effect: Nocalhost helps to have a coding experience that almost like develop in the container, so you needn't wait for build images, CI/CD, etc... Just modify your code, and run it. Step 5: End develop and uninstall Application Now return to the VSCode , click the red hammer to end dev mode (may click the Reresh icon to synchronize the latest status). While dev mode end, current container replaced before will be restored. Let's access 'bookinfo' on site http://localhost:9080: Click the bin to uninstall Application that all k8s resources in this Application will be removed. Congratulations! You have had a great experience about the Cloud Native development through above Nocalhost simple tutorial. You can start to try to configure and use the Nocalhost in the real project now. Any feedback is welcomed. Github Issues: https://github.com/nocalhost/nocalhost","title":"Plugin best practices"},{"location":"Tutorials/plugin-best-practices/#prerequisites","text":"Make sure you have been deploy Nocalhost and can access Nocalhost-server correctly. Here are some tutorials for deploying Nocalhost and getting Nocalhost-server-url by using different technologie: Minikube Kubernetes Cluster TKE","title":"Prerequisites"},{"location":"Tutorials/plugin-best-practices/#step-1-configure-and-login-nocalhost-server-in-vscode","text":"First make sure your plugin has been installed Switch to the Nocalhost tab Specify your nocalhost-web endpoint, and type in the address to access Nocalhost-Server current used. Do not know the site of Nocalhost-Server url? Back to the top of this doc and choose your kubernetes cluster type's deployment tutorial. Sign in with email foo@nocalhost.dev and pwd 123456 Why not login with admin@admin.com ? You can enter the Nocalhost-Server homepage, switch to the tab Application , and there is a Application sample named 'bookinfo'. click SPACE LIST , then you can see Nocalhost created a DevSpace for User Nocalhost . That can be simply understood as DevSpace under Application is the workspace user can access in the VSCode Nocalhost Plug-in .","title":"STEP 1: Configure and login Nocalhost Server in VSCode"},{"location":"Tutorials/plugin-best-practices/#step-2-install-demo-application-bookinfo","text":"Here show all the DevSpace hold by the user you sign in. Each spaces can be installed according to your configuration in Nocalhost-Web . Don't see any DevSpace after sign in? see how to config nocalhost-web Now click the rocket to install it: Waiting for Application startup. The cycle icon means the resources is already running. Wait until all pods start up, now forward the port of Deployment 'productpage' by right clicking it and select Port Forward to access this application on site. Type in 9080:9080 and press Enter . Then we can access 'bookinfo' on site http://localhost:9080.","title":"Step 2: Install demo application: bookinfo"},{"location":"Tutorials/plugin-best-practices/#step-3-start-dev-mode","text":"Start develop and entering Dev-Mode by clicking one of Deployment 's hammer, 'productpage' for example. You can specify your source code dir both local directory or git repo, here we use git repo, and 'productpage''s source code is on https://github.com/nocalhost/bookinfo-productpage , then choose a local directory to clone source code. Waiting for the dev mode complete startup, Nocalhost-Plug-In will open a new window according to the local directory you specified with cloned source code. If the source code is already on your machine, you can choose Open local directory directly while enter develop by clicking hammer Nocalhost will replace the deployment's container you develop, those files in the directory you specified such as the source code will be synchronized real-time into the container.","title":"Step 3: Start dev mode"},{"location":"Tutorials/plugin-best-practices/#step-4-change-the-code-and-check-the-result","text":"Let's modify the templates/index.html or something else. Don't forget to saving the change because nocalhost do not synchronize your change in memory! Then run ./run.sh in the terminal, wait for the app up. This step can be any command to start your application, such as: java Main gradle build && java -jar ./foo/bar.jar python helloworld.py Access bookinfo on site http://localhost:9080 again, our changes is take effect: Nocalhost helps to have a coding experience that almost like develop in the container, so you needn't wait for build images, CI/CD, etc... Just modify your code, and run it.","title":"Step 4: Change the code and check the result"},{"location":"Tutorials/plugin-best-practices/#step-5-end-develop-and-uninstall-application","text":"Now return to the VSCode , click the red hammer to end dev mode (may click the Reresh icon to synchronize the latest status). While dev mode end, current container replaced before will be restored. Let's access 'bookinfo' on site http://localhost:9080: Click the bin to uninstall Application that all k8s resources in this Application will be removed.","title":"Step 5: End develop and uninstall Application"},{"location":"Tutorials/plugin-best-practices/#congratulations","text":"You have had a great experience about the Cloud Native development through above Nocalhost simple tutorial. You can start to try to configure and use the Nocalhost in the real project now. Any feedback is welcomed. Github Issues: https://github.com/nocalhost/nocalhost","title":"Congratulations!"},{"location":"Tutorials/vscode-plugin/","text":"Start coding with Nocalhost VSCode Plugin (Recemmended) Install Nocalhost VSCode Plugin, here . Configure plugin and sigin nocalhost api server. Install application and start development. Click the install icon of the application that you want to develop on the left panel. Click the Workload of this application to watch the deployment progress and wait for the installation. Click the start develop icon to enter DevSpace and enjoy your coding.","title":"Start coding with Nocalhost VSCode Plugin (Recemmended)"},{"location":"Tutorials/vscode-plugin/#start-coding-with-nocalhost-vscode-plugin-recemmended","text":"Install Nocalhost VSCode Plugin, here . Configure plugin and sigin nocalhost api server. Install application and start development. Click the install icon of the application that you want to develop on the left panel. Click the Workload of this application to watch the deployment progress and wait for the installation. Click the start develop icon to enter DevSpace and enjoy your coding.","title":"Start coding with Nocalhost VSCode Plugin (Recemmended)"},{"location":"zh/deployment/","text":"\u5f00\u59cb\u4e4b\u524d \u524d\u7f6e\u6761\u4ef6: Kubernetes 1.16+ \u96c6\u7fa4 \u5efa\u8bae\u4f7f\u7528\u516c\u6709\u4e91\u670d\u52a1 \u652f\u6301 Minikube \u5df2\u542f\u7528 RBAC \u5b89\u88c5 kubectl \u5e76\u5df2\u914d\u7f6e\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u5b89\u88c5 Helm3 \u5b89\u88c5 Visual Studio Code(1.52+) \u5b89\u88c5 Git Kubernetes \u96c6\u7fa4\u8981\u6c42 \u672c\u6587\u6863\u4e3b\u8981\u63cf\u8ff0\u4e0e\u5728\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Minikube, \u53ef\u4ee5\u53c2\u7167 \u8fd9\u91cc \u4f7f\u7528 Helm \u90e8\u7f72 Nocalhost \u670d\u52a1 \u5728\u4f7f\u7528 helm \u65b9\u6cd5\u90e8\u7f72 Nocalhost \u670d\u52a1\u65f6\uff0c\u60a8\u53ef\u4ee5\u5bf9\u90e8\u7f72\u7684\u7ec4\u4ef6\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u66f4\u6539\u3002 helm chart \u5185\u5bb9\u5982\u4e0b: # nocalhost \u670d\u52a1\u7684\u9ed8\u8ba4\u53d8\u91cf\u3002 # \u8fd9\u662fYAML\u683c\u5f0f\u7684\u6587\u4ef6\u3002 replicaCount : 1 api : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-api pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest web : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-web pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest imagePullSecrets : [] nameOverride : \"\" fullnameOverride : \"\" podAnnotations : {} podSecurityContext : {} # fsGroup: 2000 securityContext : {} # capabilities: # drop: # - ALL # readOnlyRootFilesystem: true # runAsNonRoot: true # runAsUser: 1000 #\u670d\u52a1\u7c7b\u578b\uff0c\u5982\u679c\u60a8\u7684 Kubernetes \u96c6\u7fa4\u6ca1\u6709 LoadBalancer \u670d\u52a1\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u66f4\u6539\u4e3a NodePort \u670d\u52a1 service : type : LoadBalancer port : 80 resources : {} # \u8d44\u6e90\u9ed8\u8ba4\u503c\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u7406\u4f1a\uff0c\u5982\u9700\u6307\u5b9a\u6216\u8c03\u6574\uff0c\u53ef\u4ee5\u53d6\u6d88\u6ce8\u91ca\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u4e14\u5220\u9664 \u201cresource:\u201d \u540e\u7684\u82b1\u62ec\u53f7 # limits: # cpu: 100m # memory: 128Mi # requests: # cpu: 100m # memory: 128Mi autoscaling : enabled : false minReplicas : 1 maxReplicas : 100 targetCPUUtilizationPercentage : 80 # targetMemoryUtilizationPercentage: 80 nodeSelector : {} tolerations : [] affinity : {} mariadb : fullnameOverride : nocalhost-mariadb commonAnnotations : { \"helm.sh/hook\" : \"pre-install\" , \"helm.sh/hook-weight\" : \"1\" } image : registry : codingcorp-docker.pkg.coding.net/nocalhost/public repository : mariadb auth : rootPassword : root database : nocalhost primary : persistence : size : \"10Gi\" extraVolumes : - name : nocalhost-api-sql-config-volume configMap : name : nocalhost-api-sql-init-config defaultMode : 0755 extraVolumeMounts : - name : nocalhost-api-sql-config-volume mountPath : /docker-entrypoint-initdb.d/ # initdbScripts: # my_init_script.sh: | # #!/bin/bash # echo \"init database\" # mysql -u root -p root nocalhost < /opt/init-sql/nocalhost.sql \u7b2c\u4e00\u6b65\uff1a\u514b\u9686 nocalhost \u7684\u4ee3\u7801\u4ed3\u5e93\u5230\u672c\u5730 git clone https://github.com/nocalhost/nocalhost.git \u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528 helm \u547d\u4ee4\u8fdb\u884c\u5b89\u88c5 helm install nocalhost-server ./nocalhost/deployments/chart --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u670d\u52a1\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost \u4e86\u3002 \u9ed8\u8ba4\u7684\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456 \u4f7f\u7528 nhctl init \u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1 \u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u67e5\u770b\u5982\u4f55 \u5b89\u88c5 nhctl. \u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528\u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1 nhctl init -n nocalhost --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u670d\u52a1\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost \u4e86\u3002 \u9ed8\u8ba4\u7684\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456","title":"\u90e8\u7f72\u6559\u7a0b"},{"location":"zh/deployment/#_1","text":"\u524d\u7f6e\u6761\u4ef6: Kubernetes 1.16+ \u96c6\u7fa4 \u5efa\u8bae\u4f7f\u7528\u516c\u6709\u4e91\u670d\u52a1 \u652f\u6301 Minikube \u5df2\u542f\u7528 RBAC \u5b89\u88c5 kubectl \u5e76\u5df2\u914d\u7f6e\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u5b89\u88c5 Helm3 \u5b89\u88c5 Visual Studio Code(1.52+) \u5b89\u88c5 Git Kubernetes \u96c6\u7fa4\u8981\u6c42 \u672c\u6587\u6863\u4e3b\u8981\u63cf\u8ff0\u4e0e\u5728\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Minikube, \u53ef\u4ee5\u53c2\u7167 \u8fd9\u91cc","title":"\u5f00\u59cb\u4e4b\u524d"},{"location":"zh/deployment/#helm-nocalhost","text":"\u5728\u4f7f\u7528 helm \u65b9\u6cd5\u90e8\u7f72 Nocalhost \u670d\u52a1\u65f6\uff0c\u60a8\u53ef\u4ee5\u5bf9\u90e8\u7f72\u7684\u7ec4\u4ef6\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u66f4\u6539\u3002 helm chart \u5185\u5bb9\u5982\u4e0b: # nocalhost \u670d\u52a1\u7684\u9ed8\u8ba4\u53d8\u91cf\u3002 # \u8fd9\u662fYAML\u683c\u5f0f\u7684\u6587\u4ef6\u3002 replicaCount : 1 api : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-api pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest web : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-web pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest imagePullSecrets : [] nameOverride : \"\" fullnameOverride : \"\" podAnnotations : {} podSecurityContext : {} # fsGroup: 2000 securityContext : {} # capabilities: # drop: # - ALL # readOnlyRootFilesystem: true # runAsNonRoot: true # runAsUser: 1000 #\u670d\u52a1\u7c7b\u578b\uff0c\u5982\u679c\u60a8\u7684 Kubernetes \u96c6\u7fa4\u6ca1\u6709 LoadBalancer \u670d\u52a1\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u66f4\u6539\u4e3a NodePort \u670d\u52a1 service : type : LoadBalancer port : 80 resources : {} # \u8d44\u6e90\u9ed8\u8ba4\u503c\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u7406\u4f1a\uff0c\u5982\u9700\u6307\u5b9a\u6216\u8c03\u6574\uff0c\u53ef\u4ee5\u53d6\u6d88\u6ce8\u91ca\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u4e14\u5220\u9664 \u201cresource:\u201d \u540e\u7684\u82b1\u62ec\u53f7 # limits: # cpu: 100m # memory: 128Mi # requests: # cpu: 100m # memory: 128Mi autoscaling : enabled : false minReplicas : 1 maxReplicas : 100 targetCPUUtilizationPercentage : 80 # targetMemoryUtilizationPercentage: 80 nodeSelector : {} tolerations : [] affinity : {} mariadb : fullnameOverride : nocalhost-mariadb commonAnnotations : { \"helm.sh/hook\" : \"pre-install\" , \"helm.sh/hook-weight\" : \"1\" } image : registry : codingcorp-docker.pkg.coding.net/nocalhost/public repository : mariadb auth : rootPassword : root database : nocalhost primary : persistence : size : \"10Gi\" extraVolumes : - name : nocalhost-api-sql-config-volume configMap : name : nocalhost-api-sql-init-config defaultMode : 0755 extraVolumeMounts : - name : nocalhost-api-sql-config-volume mountPath : /docker-entrypoint-initdb.d/ # initdbScripts: # my_init_script.sh: | # #!/bin/bash # echo \"init database\" # mysql -u root -p root nocalhost < /opt/init-sql/nocalhost.sql","title":"\u4f7f\u7528 Helm \u90e8\u7f72 Nocalhost \u670d\u52a1"},{"location":"zh/deployment/#nocalhost","text":"git clone https://github.com/nocalhost/nocalhost.git","title":"\u7b2c\u4e00\u6b65\uff1a\u514b\u9686 nocalhost \u7684\u4ee3\u7801\u4ed3\u5e93\u5230\u672c\u5730"},{"location":"zh/deployment/#helm","text":"helm install nocalhost-server ./nocalhost/deployments/chart --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u670d\u52a1\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost \u4e86\u3002 \u9ed8\u8ba4\u7684\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456","title":"\u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528 helm \u547d\u4ee4\u8fdb\u884c\u5b89\u88c5"},{"location":"zh/deployment/#nhctl-init-nocalhost","text":"","title":"\u4f7f\u7528 nhctl init \u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1"},{"location":"zh/deployment/#nocalhost-nhctl","text":"\u67e5\u770b\u5982\u4f55 \u5b89\u88c5 nhctl.","title":"\u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl"},{"location":"zh/deployment/#nocalhost_1","text":"nhctl init -n nocalhost --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u670d\u52a1\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost \u4e86\u3002 \u9ed8\u8ba4\u7684\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456","title":"\u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528\u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1"},{"location":"zh/getting-started/","text":"\u5f00\u59cb\u4e4b\u524d \u524d\u7f6e\u6761\u4ef6: Kubernetes 1.16+ \u96c6\u7fa4 \u5efa\u8bae\u4f7f\u7528\u516c\u6709\u4e91\u670d\u52a1 \u652f\u6301 Minikube \u5df2\u542f\u7528 RBAC Node \u8282\u70b9 2 \u6838 4G \u6216\u4ee5\u4e0a \u5b89\u88c5 kubectl \u5e76\u5df2\u914d\u7f6e\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u5b89\u88c5 Helm3 \u5b89\u88c5 Visual Studio Code(1.52+) \u5b89\u88c5 Git \u96c6\u7fa4\u5185\u548c\u96c6\u7fa4\u5916\u90fd\u80fd\u8bbf\u95ee Kubernetes api-server \u7b2c\u4e00\u6b65: \u5b89\u88c5 nhctl \u548c VSCode extension \u53c2\u8003\u6b64\u94fe\u63a5\u8fdb\u884c\u5b89\u88c5: https://nocalhost.dev/zh/installation/ \u7b2c\u4e8c\u6b65: \u521d\u59cb\u5316\u96c6\u7fa4\u5e76\u4e14\u90e8\u7f72 Nocalhost Server \u53ef\u9009\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\u7684 Kubernetes: \u5982 \u817e\u8baf TKE : \u5bf9\u4e8e TKE \u96c6\u7fa4\uff0c\u914d\u7f6e\u5f00\u653e\u5916\u7f51\u8bbf\u95ee\uff1a0.0.0.0/0 \u6216\u96c6\u7fa4\u51fa\u53e3 IP \u6765\u5b9e\u73b0\u96c6\u7fa4\u5185\u5916\u53ef\u8bbf\u95ee Kubernetes api-server\u3002 \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u6267\u884c\u521d\u59cb\u5316: nhctl init -n nocalhost -p 7000 \u5982\u679c\u4f60\u4f7f\u7528 minikube, kind, k3s, microk8s \u7b49 Kubernetes \u96c6\u7fa4\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u521d\u59cb\u5316: nhctl init -n nocalhost -t nodeport \u5173\u4e8e\u4f7f\u7528\u65e0\u6cd5\u63d0\u4f9b LoadBalancer \u548c PV \u652f\u6301\u7684 Kubernetes \u53d1\u884c\u7248 \u53ef\u4ee5\u4f7f\u7528 NodePort \u66ff\u4ee3 LoadBalancer\uff0c\u5173\u95ed\u6570\u636e\u5e93\u6301\u4e45\u5316\uff08\u4ec5\u7528\u4e8e\u4f53\u9a8c\u73af\u5883\uff09 nhctl init -n nocalhost -t nodeport -p 7000 --force --set mariadb.primary.persistence.enabled=false \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b: \u521d\u59cb\u5316\u5b8c\u6bd5\u540e: [MINIKUBE \u65b9\u6848\u6ce8\u610f]: \u4e3a\u4e86\u4fdd\u6301\u7aef\u53e3\u8f6c\u53d1\uff0c\u8bf7\u4e0d\u8981\u5173\u95ed\u4e0a\u8ff0 Terminal nhctl init \u547d\u4ee4\u884c\u53c2\u6570 --namespace: \u6307\u5b9a\u5b89\u88c5\u5728\u54ea\u4e2a\u96c6\u7fa4.(\u4f1a\u81ea\u52a8\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u96c6\u7fa4) --port: \u6307\u5b9a Nocalhost Web \u76d1\u542c\u7684\u7aef\u53e3.(\u9ed8\u8ba4\u662f 80) --set: \u6307\u5b9a\u8986\u76d6 Nocalhost Helm Chart \u7684 value --type: \u6307\u5b9a Nocalhost Web \u7684 Service Type(nodeport or loadbalaner) --force: \u5f3a\u5236\u521d\u59cb\u5316\uff0c\u8bf7\u6ce8\u610f\u5b83\u5c06\u5220\u9664\u6240\u6709 Nocalhost \u7684\u65e7\u6570\u636e \u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u7684\u96c6\u7fa4\u60c5\u51b5\uff0c\u914d\u7f6e\u4e0a\u8ff0 init \u53c2\u6570\u6765\u6267\u884c\u521d\u59cb\u5316\u8fc7\u7a0b. \u7b2c\u4e09\u6b65: \u914d\u7f6e\u5e76\u767b\u9646 Nocalhost VSCode \u63d2\u4ef6 \u5728 VSCode \u4e2d\u8fdb\u5165\u63d2\u4ef6\u9875\u9762, \u5728\u5de6\u4fa7\u9762\u677f\u4e2d\u70b9\u51fb \"Config Server URL\" \u6309\u94ae: \u8f93\u5165\u4ece \u7b2c\u4e8c\u6b65 \u83b7\u5f97\u7684\u8bbf\u95ee\u5730\u5740, \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Minikube \uff0c\u90a3\u4e48\u53ef\u4ee5\u8f93\u5165\u56fa\u5b9a\u5730\u5740 http://127.0.0.1:31219 \uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58. \u5206\u522b\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58: \u7528\u6237\u540d: foo@nocalhost.dev \u5bc6\u7801: 123456 \u5728\u767b\u5f55\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230: \u7b2c\u56db\u6b65: \u5b89\u88c5\u793a\u4f8b\u5e94\u7528: bookinfo \u70b9\u51fb\u5de6\u4fa7\u9762\u677f\u4e0a\u7684\u5b89\u88c5\u56fe\u6807\uff0c\u5b89\u88c5\u5e94\u7528: bookinfo. \u70b9\u51fb\u4e4b\u540e\uff0cNocalhost \u4f1a\u5f00\u59cb\u6267\u884c\u5b89\u88c5\u8fc7\u7a0b. \u4f60\u53ef\u4ee5\u70b9\u51fb\u5237\u65b0\u56fe\u6807\u6765\u67e5\u770b\u5e94\u7528\u5b89\u88c5\u548c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u53d8\u5316\u3002 \u5728\u6240\u6709\u5fae\u670d\u52a1\u90fd\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff1a \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee\u5b89\u88c5\u7684\u5e94\u7528\u7684 web \u9875\u9762\u4e86\uff1a http://127.0.0.1:39080/productpage \u7b2c\u4e94\u6b65: \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u4f60\u53ef\u4ee5\u70b9\u51fb\u67d0\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u53f3\u4fa7\u7684\u7eff\u8272\u9524\u5b50\u56fe\u6807\u6765\u628a\u5de5\u4f5c\u8d1f\u8f7d\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u9009\u62e9 \"Clone from Git repo\" \u5e76\u6307\u5b9a\u4e00\u4e2a\u672c\u5730\u5b58\u50a8\u76ee\u5f55\u540e\uff0cNocalhost \u4f1a\u628a\u6e90\u7801 clone \u4e0b\u6765. \u6e90\u4ee3\u7801\u68c0\u51fa\u540e, Nocalhost \u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0 VSCode \u7a97\u53e3\uff0c\u5e76\u7ee7\u7eed\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u5728\u5f00\u53d1\u6a21\u5f0f\u5207\u6362\uff08\u521d\u6b21\u4f7f\u7528\uff0c\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff09\u5b8c\u6bd5\u540e\uff0c\u4f60\u4f1a\u770b\u5230: \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u5f00\u53d1\u5bb9\u5668\u9ed8\u8ba4\u6ca1\u6709\u542f\u52a8\u4e3b\u8fdb\u7a0b\uff0c\u6240\u4ee5\u4e0d\u4f1a\u54cd\u5e94\u7f51\u9875\u7aef\u7684\u8bf7\u6c42\uff0c\u6b64\u65f6\u5982\u679c\u5237\u65b0\u9875\u9762\uff0c\u9875\u9762\u5c06\u51fa\u9519\u3002\u76f4\u5230\u4f60\u518d\u6b21\u542f\u52a8\u8fdb\u7a0b\u540e\uff0c\u9875\u9762\u624d\u4f1a\u6062\u590d\u3002 \u5982\u679c\u4f60\u5207\u6362\u5f00\u53d1\u6a21\u5f0f\u7684\u5de5\u4f5c\u8d1f\u8f7d\u662f productpage \u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u6267\u884c sh run.sh \u6765\u542f\u52a8 hot-reload \u6a21\u5f0f\u7684\u8fdb\u7a0b: \u7b2c\u516d\u6b65: \u6539\u52a8\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u67e5\u770b\u8fd0\u884c\u7ed3\u679c \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u5237\u65b0\u9875\u9762\u770b\u6548\u679c\u3002 \u4f8b\u5982, \u5728\u6587\u4ef6 productpage.py \u7684 355 \u884c\u6dfb\u52a0 Hello Nocalhost! . \u522b\u5fd8\u4e86\u4fdd\u5b58\u6587\u4ef6. \u5237\u65b0\u7f51\u9875\uff0c\u5373\u53ef\u7acb\u5373\u770b\u5230\u6548\u679c\u3002 http://127.0.0.1:39080/productpage \ud83d\ude04 \u606d\u559c! \u901a\u8fc7\u8fd9\u4e2a\u7b80\u5355\u7684\u57fa\u4e8e Nocalhost \u7684\u6559\u7a0b\uff0c\u4f60\u5df2\u7ecf\u4f53\u9a8c\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u7684\u4fbf\u6377\u548c\u5f3a\u5927\u3002\u53ef\u4ee5\u5f00\u59cb\u5c1d\u8bd5\u5728\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\u914d\u7f6e\u5e76\u4f7f\u7528 Nocalhost \u4e86\u3002 Nocalhost \u6b22\u8fce\u60a8\u7684\u610f\u89c1\u548c\u5efa\u8bae. GitHub Issues: https://github.com/nocalhost/nocalhost","title":"\u5feb\u901f\u4e0a\u624b"},{"location":"zh/getting-started/#_1","text":"\u524d\u7f6e\u6761\u4ef6: Kubernetes 1.16+ \u96c6\u7fa4 \u5efa\u8bae\u4f7f\u7528\u516c\u6709\u4e91\u670d\u52a1 \u652f\u6301 Minikube \u5df2\u542f\u7528 RBAC Node \u8282\u70b9 2 \u6838 4G \u6216\u4ee5\u4e0a \u5b89\u88c5 kubectl \u5e76\u5df2\u914d\u7f6e\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u5b89\u88c5 Helm3 \u5b89\u88c5 Visual Studio Code(1.52+) \u5b89\u88c5 Git \u96c6\u7fa4\u5185\u548c\u96c6\u7fa4\u5916\u90fd\u80fd\u8bbf\u95ee Kubernetes api-server","title":"\u5f00\u59cb\u4e4b\u524d"},{"location":"zh/getting-started/#nhctl-vscode-extension","text":"\u53c2\u8003\u6b64\u94fe\u63a5\u8fdb\u884c\u5b89\u88c5: https://nocalhost.dev/zh/installation/","title":"\u7b2c\u4e00\u6b65: \u5b89\u88c5 nhctl \u548c VSCode extension"},{"location":"zh/getting-started/#nocalhost-server","text":"\u53ef\u9009\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\u7684 Kubernetes: \u5982 \u817e\u8baf TKE : \u5bf9\u4e8e TKE \u96c6\u7fa4\uff0c\u914d\u7f6e\u5f00\u653e\u5916\u7f51\u8bbf\u95ee\uff1a0.0.0.0/0 \u6216\u96c6\u7fa4\u51fa\u53e3 IP \u6765\u5b9e\u73b0\u96c6\u7fa4\u5185\u5916\u53ef\u8bbf\u95ee Kubernetes api-server\u3002 \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u6267\u884c\u521d\u59cb\u5316: nhctl init -n nocalhost -p 7000 \u5982\u679c\u4f60\u4f7f\u7528 minikube, kind, k3s, microk8s \u7b49 Kubernetes \u96c6\u7fa4\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u521d\u59cb\u5316: nhctl init -n nocalhost -t nodeport \u5173\u4e8e\u4f7f\u7528\u65e0\u6cd5\u63d0\u4f9b LoadBalancer \u548c PV \u652f\u6301\u7684 Kubernetes \u53d1\u884c\u7248 \u53ef\u4ee5\u4f7f\u7528 NodePort \u66ff\u4ee3 LoadBalancer\uff0c\u5173\u95ed\u6570\u636e\u5e93\u6301\u4e45\u5316\uff08\u4ec5\u7528\u4e8e\u4f53\u9a8c\u73af\u5883\uff09 nhctl init -n nocalhost -t nodeport -p 7000 --force --set mariadb.primary.persistence.enabled=false \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b: \u521d\u59cb\u5316\u5b8c\u6bd5\u540e: [MINIKUBE \u65b9\u6848\u6ce8\u610f]: \u4e3a\u4e86\u4fdd\u6301\u7aef\u53e3\u8f6c\u53d1\uff0c\u8bf7\u4e0d\u8981\u5173\u95ed\u4e0a\u8ff0 Terminal nhctl init \u547d\u4ee4\u884c\u53c2\u6570 --namespace: \u6307\u5b9a\u5b89\u88c5\u5728\u54ea\u4e2a\u96c6\u7fa4.(\u4f1a\u81ea\u52a8\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u96c6\u7fa4) --port: \u6307\u5b9a Nocalhost Web \u76d1\u542c\u7684\u7aef\u53e3.(\u9ed8\u8ba4\u662f 80) --set: \u6307\u5b9a\u8986\u76d6 Nocalhost Helm Chart \u7684 value --type: \u6307\u5b9a Nocalhost Web \u7684 Service Type(nodeport or loadbalaner) --force: \u5f3a\u5236\u521d\u59cb\u5316\uff0c\u8bf7\u6ce8\u610f\u5b83\u5c06\u5220\u9664\u6240\u6709 Nocalhost \u7684\u65e7\u6570\u636e \u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u7684\u96c6\u7fa4\u60c5\u51b5\uff0c\u914d\u7f6e\u4e0a\u8ff0 init \u53c2\u6570\u6765\u6267\u884c\u521d\u59cb\u5316\u8fc7\u7a0b.","title":"\u7b2c\u4e8c\u6b65: \u521d\u59cb\u5316\u96c6\u7fa4\u5e76\u4e14\u90e8\u7f72 Nocalhost Server"},{"location":"zh/getting-started/#nocalhost-vscode","text":"\u5728 VSCode \u4e2d\u8fdb\u5165\u63d2\u4ef6\u9875\u9762, \u5728\u5de6\u4fa7\u9762\u677f\u4e2d\u70b9\u51fb \"Config Server URL\" \u6309\u94ae: \u8f93\u5165\u4ece \u7b2c\u4e8c\u6b65 \u83b7\u5f97\u7684\u8bbf\u95ee\u5730\u5740, \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Minikube \uff0c\u90a3\u4e48\u53ef\u4ee5\u8f93\u5165\u56fa\u5b9a\u5730\u5740 http://127.0.0.1:31219 \uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58. \u5206\u522b\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58: \u7528\u6237\u540d: foo@nocalhost.dev \u5bc6\u7801: 123456 \u5728\u767b\u5f55\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230:","title":"\u7b2c\u4e09\u6b65: \u914d\u7f6e\u5e76\u767b\u9646 Nocalhost VSCode \u63d2\u4ef6"},{"location":"zh/getting-started/#bookinfo","text":"\u70b9\u51fb\u5de6\u4fa7\u9762\u677f\u4e0a\u7684\u5b89\u88c5\u56fe\u6807\uff0c\u5b89\u88c5\u5e94\u7528: bookinfo. \u70b9\u51fb\u4e4b\u540e\uff0cNocalhost \u4f1a\u5f00\u59cb\u6267\u884c\u5b89\u88c5\u8fc7\u7a0b. \u4f60\u53ef\u4ee5\u70b9\u51fb\u5237\u65b0\u56fe\u6807\u6765\u67e5\u770b\u5e94\u7528\u5b89\u88c5\u548c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u53d8\u5316\u3002 \u5728\u6240\u6709\u5fae\u670d\u52a1\u90fd\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff1a \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee\u5b89\u88c5\u7684\u5e94\u7528\u7684 web \u9875\u9762\u4e86\uff1a http://127.0.0.1:39080/productpage","title":"\u7b2c\u56db\u6b65: \u5b89\u88c5\u793a\u4f8b\u5e94\u7528: bookinfo"},{"location":"zh/getting-started/#_2","text":"\u4f60\u53ef\u4ee5\u70b9\u51fb\u67d0\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u53f3\u4fa7\u7684\u7eff\u8272\u9524\u5b50\u56fe\u6807\u6765\u628a\u5de5\u4f5c\u8d1f\u8f7d\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u9009\u62e9 \"Clone from Git repo\" \u5e76\u6307\u5b9a\u4e00\u4e2a\u672c\u5730\u5b58\u50a8\u76ee\u5f55\u540e\uff0cNocalhost \u4f1a\u628a\u6e90\u7801 clone \u4e0b\u6765. \u6e90\u4ee3\u7801\u68c0\u51fa\u540e, Nocalhost \u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0 VSCode \u7a97\u53e3\uff0c\u5e76\u7ee7\u7eed\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u5728\u5f00\u53d1\u6a21\u5f0f\u5207\u6362\uff08\u521d\u6b21\u4f7f\u7528\uff0c\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff09\u5b8c\u6bd5\u540e\uff0c\u4f60\u4f1a\u770b\u5230: \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u5f00\u53d1\u5bb9\u5668\u9ed8\u8ba4\u6ca1\u6709\u542f\u52a8\u4e3b\u8fdb\u7a0b\uff0c\u6240\u4ee5\u4e0d\u4f1a\u54cd\u5e94\u7f51\u9875\u7aef\u7684\u8bf7\u6c42\uff0c\u6b64\u65f6\u5982\u679c\u5237\u65b0\u9875\u9762\uff0c\u9875\u9762\u5c06\u51fa\u9519\u3002\u76f4\u5230\u4f60\u518d\u6b21\u542f\u52a8\u8fdb\u7a0b\u540e\uff0c\u9875\u9762\u624d\u4f1a\u6062\u590d\u3002 \u5982\u679c\u4f60\u5207\u6362\u5f00\u53d1\u6a21\u5f0f\u7684\u5de5\u4f5c\u8d1f\u8f7d\u662f productpage \u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u6267\u884c sh run.sh \u6765\u542f\u52a8 hot-reload \u6a21\u5f0f\u7684\u8fdb\u7a0b:","title":"\u7b2c\u4e94\u6b65: \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f"},{"location":"zh/getting-started/#_3","text":"\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u5237\u65b0\u9875\u9762\u770b\u6548\u679c\u3002 \u4f8b\u5982, \u5728\u6587\u4ef6 productpage.py \u7684 355 \u884c\u6dfb\u52a0 Hello Nocalhost! . \u522b\u5fd8\u4e86\u4fdd\u5b58\u6587\u4ef6. \u5237\u65b0\u7f51\u9875\uff0c\u5373\u53ef\u7acb\u5373\u770b\u5230\u6548\u679c\u3002 http://127.0.0.1:39080/productpage \ud83d\ude04","title":"\u7b2c\u516d\u6b65: \u6539\u52a8\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u67e5\u770b\u8fd0\u884c\u7ed3\u679c"},{"location":"zh/getting-started/#_4","text":"\u901a\u8fc7\u8fd9\u4e2a\u7b80\u5355\u7684\u57fa\u4e8e Nocalhost \u7684\u6559\u7a0b\uff0c\u4f60\u5df2\u7ecf\u4f53\u9a8c\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u7684\u4fbf\u6377\u548c\u5f3a\u5927\u3002\u53ef\u4ee5\u5f00\u59cb\u5c1d\u8bd5\u5728\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\u914d\u7f6e\u5e76\u4f7f\u7528 Nocalhost \u4e86\u3002 Nocalhost \u6b22\u8fce\u60a8\u7684\u610f\u89c1\u548c\u5efa\u8bae. GitHub Issues: https://github.com/nocalhost/nocalhost","title":"\u606d\u559c!"},{"location":"zh/installation/","text":"\u524d\u7f6e\u6761\u4ef6 \u4f7f\u7528 nocalhost\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86 git \u3001 kubectl \u4ee5\u53ca helm \u3002 nhctl Nocalhost \u7684\u547d\u4ee4\u884c\u5de5\u5177\uff1anhctl\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528nhctl \u8fdb\u884c\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c06\u670d\u52a1\u5207\u6362\u5230 DevMode\uff0c\u540c\u6b65\u4ee3\u7801\uff0c\u8f6c\u53d1\u7aef\u53e3\u7b49\u64cd\u4f5c\u3002 \u67e5\u770b nhctl \u7684\u6307\u4ee4\u96c6\u3002 \u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b89\u88c5 nhctl \u4f7f\u7528 curl \u5de5\u5177\u5b89\u88c5 nhctl \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d\u6700\u65b0\u7684 nhctl\uff1a curl -sL https://git.io/JLsgQ | sh \u4e3a nhctl \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\u3002 chmod +x ./nhctl \u5c06 nhctl \u79fb\u52a8\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u3002 sudo mv ./nhctl /usr/local/bin/nhctl \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version \u4f7f\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5 nhctl Homebrew \u5982\u679c\u60a8\u5728 Linux \u4e0a\u4f7f\u7528 Homebrew \u5305\u7ba1\u7406\u5668\uff0c\u5219\u53ef\u4ee5\u7528\u5176\u8fdb\u884c \u5b89\u88c5 \u3002 brew install nocalhost/repo/nocalhost nhctl version \u5728 macOS \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b89\u88c5 nhctl Install nhctl binary with curl on macOS \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d\u6700\u65b0\u7684 nhctl\uff1a curl -sL https://git.io/JLsgQ | sh \u4e3a nhctl \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\u3002 chmod +x ./nhctl \u5c06 nhctl \u79fb\u52a8\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u3002 sudo mv ./nhctl /usr/local/bin/nhctl \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version \u5728 macOS \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4f7f\u7528 Homebrew \u5b89\u88c5 nhctl \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a brew install nocalhost/repo/nocalhost \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version \u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b89\u88c5 nhctl \u4f7f\u7528\u5b89\u88c5\u5de5\u5177\u5b89\u88c5 nhctl \u70b9\u51fb \u6b64\u94fe\u63a5 \uff0c\u4e0b\u8f7d\u5b89\u88c5\u5de5\u5177\u3002 \u4f7f\u7528\u5b89\u88c5\u7a0b\u5e8f\u5c06\u4f1a\u5b89\u88c5 nhctl\uff0ckubectl \u548c helm\u3002 \u5e76\u81ea\u52a8\u5c06\u5b89\u88c5\u76ee\u5f55\u6dfb\u52a0\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf PATH \u4e2d\u3002 \u6253\u5f00\u60a8\u7684 CMD \u7a0b\u5e8f\u6216\u8005 PowerShell \u7a0b\u5e8f, \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version \u901a\u8fc7\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b89\u88c5 \u901a\u8fc7 \u6b64\u94fe\u63a5 \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684 nhctl \u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u6216\u8005\uff0c\u5982\u679c\u60a8\u5df2\u5b89\u88c5 curl\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a curl -L \"https://github.com/nocalhost/nocalhost/releases/latest/download/nhctl-windows-amd64.exe\" -o nhctl.exe \u5c06\u6b64\u6587\u4ef6\u6dfb\u52a0\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf PATH. \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version \u60a8\u5c06\u770b\u5230\uff1a nhctl: Nocalhost CLI Version: v0.0.5 Git commit: 605cbf149a4b4d8983111b8984111365a5f54192 Built: Sat Dec 12 13:29:03 2020 OS/Arch: linux/amd64 Go version: go1.14.4 \u5b89\u88c5 Nocalhost VScode \u7f16\u8f91\u5668\u63d2\u4ef6 Nocalhost \u7684 VScode \u7f16\u8f91\u5668\u63d2\u53ef\u4ee5\u8ba9\u60a8\u5728 VScode \u7f16\u8f91\u5668\u4e0a\u8f7b\u677e\u65b9\u4fbf\u7684\u4f7f\u7528 Nocalhost\u3002 \u60a8\u53ef\u4ee5\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff0c\u6253\u5f00 DevSpace\uff0c\u5728 VSCode \u4e2d\u542f\u52a8 DevMode\u3002 \u5728 VScode \u63d2\u4ef6\u5e02\u573a\u4e0a\u5b89\u88c5 Nocalhost VScode \u63d2\u4ef6 \u70b9\u51fb\u6b64\u94fe\u63a5: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost \u76f4\u63a5\u5728 VScode \u7f16\u8f91\u5668\u4e0a\u5b89\u88c5 Nocalhost VScode \u7f16\u8f91\u5668\u63d2\u4ef6 \u6253\u5f00 VScode \u7f16\u8f91\u5668, \u5728\u53f3\u4fa7\u680f\u4e2d\u70b9\u51fb \"Extensions\" \u56fe\u6807\u3002 \u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165 \u201cnocalhost\u201d \u8fdb\u884c\u641c\u7d22\u3002 \u9009\u62e9 \u201cnocalhost-vscode-plugin\u201d, \u70b9\u51fb \u201cinstall\u201d \u6309\u94ae\u8fdb\u884c\u5b89\u88c5\u3002","title":"\u5b89\u88c5\u6559\u7a0b"},{"location":"zh/installation/#nhctl","text":"Nocalhost \u7684\u547d\u4ee4\u884c\u5de5\u5177\uff1anhctl\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528nhctl \u8fdb\u884c\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c06\u670d\u52a1\u5207\u6362\u5230 DevMode\uff0c\u540c\u6b65\u4ee3\u7801\uff0c\u8f6c\u53d1\u7aef\u53e3\u7b49\u64cd\u4f5c\u3002 \u67e5\u770b nhctl \u7684\u6307\u4ee4\u96c6\u3002","title":"nhctl"},{"location":"zh/installation/#linux-nhctl","text":"","title":"\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b89\u88c5 nhctl"},{"location":"zh/installation/#curl-nhctl","text":"\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d\u6700\u65b0\u7684 nhctl\uff1a curl -sL https://git.io/JLsgQ | sh \u4e3a nhctl \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\u3002 chmod +x ./nhctl \u5c06 nhctl \u79fb\u52a8\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u3002 sudo mv ./nhctl /usr/local/bin/nhctl \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version","title":"\u4f7f\u7528 curl \u5de5\u5177\u5b89\u88c5 nhctl"},{"location":"zh/installation/#nhctl_1","text":"Homebrew \u5982\u679c\u60a8\u5728 Linux \u4e0a\u4f7f\u7528 Homebrew \u5305\u7ba1\u7406\u5668\uff0c\u5219\u53ef\u4ee5\u7528\u5176\u8fdb\u884c \u5b89\u88c5 \u3002 brew install nocalhost/repo/nocalhost nhctl version","title":"\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5 nhctl"},{"location":"zh/installation/#macos-nhctl","text":"","title":"\u5728 macOS \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b89\u88c5 nhctl"},{"location":"zh/installation/#install-nhctl-binary-with-curl-on-macos","text":"\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4e0b\u8f7d\u6700\u65b0\u7684 nhctl\uff1a curl -sL https://git.io/JLsgQ | sh \u4e3a nhctl \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\u3002 chmod +x ./nhctl \u5c06 nhctl \u79fb\u52a8\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u3002 sudo mv ./nhctl /usr/local/bin/nhctl \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version","title":"Install nhctl binary with curl on macOS"},{"location":"zh/installation/#macos-homebrew-nhctl","text":"\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a brew install nocalhost/repo/nocalhost \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version","title":"\u5728 macOS \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4f7f\u7528 Homebrew \u5b89\u88c5 nhctl"},{"location":"zh/installation/#windows-nhctl","text":"","title":"\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b89\u88c5 nhctl"},{"location":"zh/installation/#nhctl_2","text":"\u70b9\u51fb \u6b64\u94fe\u63a5 \uff0c\u4e0b\u8f7d\u5b89\u88c5\u5de5\u5177\u3002 \u4f7f\u7528\u5b89\u88c5\u7a0b\u5e8f\u5c06\u4f1a\u5b89\u88c5 nhctl\uff0ckubectl \u548c helm\u3002 \u5e76\u81ea\u52a8\u5c06\u5b89\u88c5\u76ee\u5f55\u6dfb\u52a0\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf PATH \u4e2d\u3002 \u6253\u5f00\u60a8\u7684 CMD \u7a0b\u5e8f\u6216\u8005 PowerShell \u7a0b\u5e8f, \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version","title":"\u4f7f\u7528\u5b89\u88c5\u5de5\u5177\u5b89\u88c5 nhctl"},{"location":"zh/installation/#_1","text":"\u901a\u8fc7 \u6b64\u94fe\u63a5 \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684 nhctl \u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u6216\u8005\uff0c\u5982\u679c\u60a8\u5df2\u5b89\u88c5 curl\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a curl -L \"https://github.com/nocalhost/nocalhost/releases/latest/download/nhctl-windows-amd64.exe\" -o nhctl.exe \u5c06\u6b64\u6587\u4ef6\u6dfb\u52a0\u5230\u60a8\u7684\u73af\u5883\u53d8\u91cf PATH. \u6d4b\u8bd5\u5b89\u88c5\u7684\u7ed3\u679c\u3002 nhctl version \u60a8\u5c06\u770b\u5230\uff1a nhctl: Nocalhost CLI Version: v0.0.5 Git commit: 605cbf149a4b4d8983111b8984111365a5f54192 Built: Sat Dec 12 13:29:03 2020 OS/Arch: linux/amd64 Go version: go1.14.4","title":"\u901a\u8fc7\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b89\u88c5"},{"location":"zh/installation/#nocalhost-vscode","text":"Nocalhost \u7684 VScode \u7f16\u8f91\u5668\u63d2\u53ef\u4ee5\u8ba9\u60a8\u5728 VScode \u7f16\u8f91\u5668\u4e0a\u8f7b\u677e\u65b9\u4fbf\u7684\u4f7f\u7528 Nocalhost\u3002 \u60a8\u53ef\u4ee5\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff0c\u6253\u5f00 DevSpace\uff0c\u5728 VSCode \u4e2d\u542f\u52a8 DevMode\u3002","title":"\u5b89\u88c5 Nocalhost VScode \u7f16\u8f91\u5668\u63d2\u4ef6"},{"location":"zh/installation/#vscode-nocalhost-vscode","text":"\u70b9\u51fb\u6b64\u94fe\u63a5: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost","title":"\u5728 VScode \u63d2\u4ef6\u5e02\u573a\u4e0a\u5b89\u88c5 Nocalhost VScode \u63d2\u4ef6"},{"location":"zh/installation/#vscode-nocalhost-vscode_1","text":"\u6253\u5f00 VScode \u7f16\u8f91\u5668, \u5728\u53f3\u4fa7\u680f\u4e2d\u70b9\u51fb \"Extensions\" \u56fe\u6807\u3002 \u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165 \u201cnocalhost\u201d \u8fdb\u884c\u641c\u7d22\u3002 \u9009\u62e9 \u201cnocalhost-vscode-plugin\u201d, \u70b9\u51fb \u201cinstall\u201d \u6309\u94ae\u8fdb\u884c\u5b89\u88c5\u3002","title":"\u76f4\u63a5\u5728 VScode \u7f16\u8f91\u5668\u4e0a\u5b89\u88c5 Nocalhost VScode \u7f16\u8f91\u5668\u63d2\u4ef6"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/","text":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883 \u524d\u8a00 \u968f\u7740\u4e1a\u52a1\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u6280\u672f\u90e8\u95e8\u7684\u7ec4\u7ec7\u67b6\u6784\u5728\u6a2a\u5411\u53ca\u7eb5\u5411\u4e0d\u65ad\u6269\u5927\u548c\u8c03\u6574\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u4f01\u4e1a\u7684\u751f\u4ea7\u8d44\u6599\uff1a\u5e94\u7528\u7cfb\u7edf\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u5e9e\u5927\u3002\u4e3a\u4e86\u8ba9\u5e94\u7528\u7cfb\u7edf\u9002\u914d\u4f01\u4e1a\u7ec4\u7ec7\u67b6\u6784\u7684\u8c03\u6574\uff0c\u68b3\u7406\u7ec4\u7ec7\u67b6\u6784\u5bf9\u4e8e\u5e94\u7528\u6743\u8d23\u7684\u8fb9\u754c\uff0c\u5927\u90e8\u5206\u7ec4\u7ec7\u4f1a\u9009\u62e9\u4f7f\u7528\u201c\u5fae\u670d\u52a1\u201d\u67b6\u6784\u6765\u5bf9\u5e94\u7528\u7cfb\u7edf\u8fdb\u884c\u6a2a\u5411\u62c6\u5206\uff0c\u4f7f\u5f97\u5e94\u7528\u7cfb\u7edf\u7684\u7ef4\u62a4\u8fb9\u754c\u9002\u914d\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u8d8a\u5e9e\u5927\u7684\u7ec4\u7ec7\u67b6\u6784\uff0c\u5e94\u7528\u7cfb\u7edf\u4f1a\u88ab\u62c6\u5206\u5730\u8d8a\u6765\u8d8a\u7ec6\uff0c\u201c\u5fae\u670d\u52a1\u201d\u7684\u6570\u91cf\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u591a\u3002\u800c\u5728\u201c\u5fae\u670d\u52a1\u201d\u7684\u62c6\u5206\u7684\u5b9e\u8df5\u4e2d\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u5c06\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u4e00\u80a1\u8111\u5730\u5bf9\u6807\u5230\u201c\u5fae\u670d\u52a1\u201d\b\u7684\u62c6\u5206\u7c92\u5ea6\u4e2d\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u201c\u5fae\u670d\u52a1\u201d\u62c6\u5206\u7c92\u5ea6\u8fc7\u7ec6\uff0c\u6570\u91cf\u8fdb\u4e00\u6b65\u5267\u589e\u7684\u95ee\u9898\u3002\u6700\u7ec8\uff0c\u201c\u5fae\u670d\u52a1\u201d\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u5c31\u50cf\u8de8\u90e8\u95e8\u534f\u4f5c\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u95ee\u9898\u5728\u60f3\u8981\u65b0\u589e\u9700\u6c42\u65f6\u5c24\u4e3a\u7a81\u51fa\u3002 \u201c\u5fae\u670d\u52a1\u201d\u5e26\u6765\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u5bf9\u5f00\u53d1\u4eba\u5458\u800c\u8a00\uff0c\u8fd8\u5e26\u6765\u4e86\u989d\u5916\u7684\u6311\u6218\uff1a\u5982\u4f55\u5feb\u901f\u542f\u52a8\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5f00\u53d1\u7684\u9700\u6c42\u4f9d\u8d56\u4e8e\u5176\u4ed6\u540c\u4e8b\u600e\u4e48\u8054\u8c03\uff1f\u5982\u4f55\u5feb\u901f\u8c03\u8bd5\u8fd9\u4e9b\u5fae\u670d\u52a1\uff1f \u800c\u5bf9\u4e8e\u7ba1\u7406\u4eba\u5458\u6765\u8bf4\uff0c\u4e5f\u540c\u6837\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u7684\u6311\u6218\uff1a\u5982\u4f55\u7ba1\u7406\u5f00\u53d1\u4eba\u5458\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5982\u4f55\u8ba9\u65b0\u5165\u804c\u7684\u540c\u4e8b\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\uff1f \u8bd5\u60f3\u4e00\u4e0b\uff0c\u8981\u5f00\u53d1\u7531 200 \u4e2a\u201c\u5fae\u670d\u52a1\u201d\u7ec4\u6210\u7684\u4e91\u539f\u751f\u5e94\u7528\uff0c\u4f1a\u9047\u5230\u54ea\u4e9b\u56f0\u96be\u5462\uff1f Localhost \u65f6\u4ee3 \u5728\u5355\u4f53\u5e94\u7528\u7684\u65f6\u4ee3\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u6781\u4e3a\u53cb\u597d\u7684\uff0c\b\u5f00\u53d1\u8005\u4f7f\u7528\u672c\u673a\u8fd0\u884c\u5e94\u7528\uff0c\u4fee\u6539\u4ee3\u7801\u540e\u5b9e\u65f6\u751f\u6548\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee Localhost \u5b9e\u65f6\u67e5\u770b\u4ee3\u7801\u6548\u679c\u3002 \u5355\u4f53\u5e94\u7528\u548c\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u4e0d\u540c\uff0c\u5355\u4f53\u5e94\u7528\u662f \u201cALL-IN-ONE\u201d \u7ec4\u7ec7\u65b9\u5f0f\uff0c\u6240\u6709\u7684\u8c03\u7528\u5173\u7cfb\u4ec5\u9650\u4e8e\u5728\u81ea\u8eab\u7684\u7c7b\u548c\u51fd\u6570\uff0c\u5e94\u7528\u5bf9\u786c\u4ef6\u7684\u8981\u6c42\u4e00\u822c\u4e5f\u4e0d\u4f1a\u592a\u9ad8\u3002 \u800c\u5f00\u53d1\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u5219\u5927\u4e0d\u76f8\u540c\uff0c\u7531\u4e8e\u76f8\u4e92\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u9700\u8981\u5f00\u53d1\u67d0\u4e00\u4e2a\u529f\u80fd\u6216\u5fae\u670d\u52a1\u65f6\uff0c\u4e0d\u5f97\u4e0d\u5c06\u6240\u6709\u4f9d\u8d56\u7684\u670d\u52a1\u90fd\u542f\u52a8\u8d77\u6765\u3002\u968f\u7740\u5fae\u670d\u52a1\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5f00\u53d1\u5e94\u7528\u6240\u9700\u8981\u7684\u672c\u5730\u8d44\u6e90\u8d8a\u6765\u8d8a\u591a\uff0c\u6700\u7ec8\u5bfc\u81f4\u672c\u5730\u65e0\u6cd5\u6ee1\u8db3\u5f00\u53d1\u7684\u914d\u7f6e\u9700\u6c42\u3002 \u4e91\u539f\u751f\u89e3\u653e\u4e86\u90e8\u7f72\u548c\u8fd0\u7ef4\uff0c\u5f00\u53d1\u5462\uff1f \u4e91\u539f\u751f\u548c Kubernetes \u7684\u666e\u53ca\uff0c\u8fdb\u4e00\u6b65\u5c4f\u853d\u4e86\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u4e3b\u8981\u4f53\u73b0\u5728\u90e8\u7f72\u548c\u8fd0\u7ef4\u9636\u6bb5\u3002 \u4e3a\u4e86\u89e3\u51b3\u5fae\u670d\u52a1\u5e94\u7528\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u9636\u6bb5\u73af\u5883\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff0c\u73b0\u4ee3\u7684\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1\uff0c\u90fd\u4f1a\u5c06\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u6253\u5305\u6210 Docker \u955c\u50cf\uff0c\u5e76\u4ee5\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f62\u5f0f\u5bf9\u5176\u8fdb\u884c\u90e8\u7f72\u3002\u5229\u7528 DevOps \u6d41\u6c34\u7ebf\u4e2d\u7684\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u90e8\u7f72\uff0c\u914d\u5408 Kubernetes \u63a2\u9488\u3001HPA\u3001\u5e94\u7528\u81ea\u6108\u7684\u80fd\u529b\uff0c\u5f7b\u5e95\u89e3\u653e\u4e86\u5fae\u670d\u52a1\u5e94\u7528\u7684\u90e8\u7f72\u548c\u8fd0\u7ef4\u73af\u8282\u3002 \u4f46\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u952e\u8282\u70b9\uff1a\u5f00\u53d1\u9636\u6bb5 \u5fae\u670d\u52a1\u5e94\u7528\u4f7f\u7528 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u5c01\u88c5\u540e\uff0c\u89e3\u51b3\u4e86\u5f00\u53d1\u8fc7\u7a0b\u5e94\u7528\u7684\u5feb\u901f\u542f\u52a8\u95ee\u9898\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u8981\u5728\u672c\u5730\u5b89\u88c5\u5355\u8282\u70b9\u7684 Kubernetes \u96c6\u7fa4\uff0c\u4f8b\u5982 Minikube\u3001Kind \u7b49\u5373\u53ef\u5feb\u901f\u542f\u52a8\u5fae\u670d\u52a1\u5e94\u7528\u3002 \u4f46\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u539f\u6765\u5355\u4f53\u5e94\u7528\u7684\u5f00\u53d1\u4f53\u9a8c\u53d8\u5f97\u4e0d\u590d\u5b58\u5728\uff0c\u7531\u4e8e\u5e94\u7528\u5f88\u96be\u5728 Docker \u5bb9\u5668\u4e4b\u5916\u8fd0\u884c\uff0c\u6240\u4ee5\u6bcf\u6b21\u4ee3\u7801\u4fee\u6539\uff0c\u90fd\u9700\u8981\u7ecf\u5386\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u6267\u884c docker build \u6784\u5efa\u955c\u50cf \u6267\u884c docker tag \u5bf9\u955c\u50cf\u8fdb\u884c\u6807\u8bb0 \u6267\u884c docker push \u63a8\u9001\u955c\u50cf\u5230\u4ed3\u5e93 \u4fee\u6539 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u7684\u955c\u50cf\u7248\u672c \u7b49\u5f85\u955c\u50cf\u62c9\u53d6\u7ed3\u675f \u7b49\u5f85 Pod \u91cd\u5efa \u67e5\u770b\u4fee\u6539\u540e\u7684\u4ee3\u7801\u6548\u679c \u8fd9\u76f4\u63a5\u62d6\u6162\u4e86\u5f00\u53d1\u7684\u5faa\u73af\u53cd\u9988\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4fee\u6539\uff0c\u52a8\u8f84\u9700\u8981\u6570\u5206\u949f\u751a\u81f3\u5341\u5206\u949f\u7684\u7b49\u5f85\u65f6\u95f4\u3002 Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883 Nocalhost \u662f\u4e00\u4e2a\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e0c\u671b\u8ba9\u5f00\u53d1\u4e91\u539f\u751f\u5e94\u7528\u50cf\u5f00\u53d1\u5355\u4f53\u5e94\u7528\u539f\u59cb\u53c8\u7b80\u5355\u3002 Nocalhost \u91cd\u65b0\u68b3\u7406\u4e86\u5f00\u53d1\u8fc7\u7a0b\u6240\u6d89\u53ca\u5230\u7684\u89d2\u8272\u548c\u8d44\u6e90\uff1a \u56e2\u961f\u7ba1\u7406\u4eba\u5458 \u5f00\u53d1\u8005 \u5e94\u7528 \u96c6\u7fa4 \u5f00\u53d1\u7a7a\u95f4 \u901a\u8fc7\u5bf9\u8fd9\u4e9b\u89d2\u8272\u548c\u8d44\u6e90\u7684\u91cd\u65b0\u6574\u5408\uff0cNocalhost \u91cd\u65b0\u5b9a\u4e49\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e76\u5e26\u6765\u4e86\u5168\u65b0\u7684\u4e91\u539f\u751f\u5f00\u53d1\u4f53\u9a8c\u3002 \u4e3a\u4e86\u5feb\u901f\u7406\u89e3 Nocalhost \u91cd\u65b0\u5b9a\u4e49\u7684\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u7ad9\u5728\u4e0d\u540c\u7684\u89d2\u8272\u6765\u770b Nocalhost \u80fd\u7ed9\u4ed6\u4eec\u5e26\u6765\u4ec0\u4e48\u3002 \u5f00\u53d1\u4eba\u5458\uff1a \u6446\u8131\u6bcf\u6b21\u4fee\u6539\u9700\u8981\u91cd\u65b0 build \u65b0\u955c\u50cf\u4ee5\u53ca\u957f\u65f6\u95f4\u7684\u5faa\u73af\u53cd\u9988\uff0c\u4fee\u6539\u4ee3\u7801\u7acb\u5373\u751f\u6548 \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883\uff0c\u6446\u8131\u672c\u5730\u73af\u5883\u642d\u5efa\u548c\u8d44\u6e90\u4e0d\u8db3\u7684\u9650\u5236 \u672c\u5730 IDE \u7f16\u8f91\u5668\u548c\u5f00\u53d1\u73af\u5883\u8054\u52a8\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5 \u56fe\u5f62\u5316\u7684 IDE \u63d2\u4ef6\uff0c\u65e0\u9700\u719f\u6089 kubectl \u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684\u5f00\u53d1 \u7ba1\u7406\u4eba\u5458\uff1a \u7edf\u4e00\u7ba1\u7406\u5fae\u670d\u52a1\u5e94\u7528\u5305\uff0c\u964d\u4f4e\u5e94\u7528\u7684\u7ef4\u62a4\u6210\u672c \u7edf\u4e00\u7ba1\u7406\u5f00\u53d1\u73af\u5883\u548c\u96c6\u7fa4\uff0c\u63d0\u9ad8\u96c6\u7fa4\u8d44\u6e90\u7684\u5229\u7528\u7387\uff0c\u540c\u65f6\u5177\u5907\u9694\u79bb\u7279\u6027 \u4e3a\u65b0\u5458\u5de5\u5feb\u901f\u5206\u914d\u5f00\u53d1\u73af\u5883\uff0c\u5206\u914d\u73af\u5883\u540e\u7acb\u523b\u80fd\u8fdb\u884c\u5e94\u7528\u5f00\u53d1 \u5f39\u6027\u7684\u5f00\u53d1\u73af\u5883\u8d44\u6e90\uff0c\u7528\u5b8c\u9500\u6bc1\uff0c\u964d\u4f4e\u5f00\u53d1\u6210\u672c \u4ee5 Nocalhost \u5185\u7f6e\u7684 Demo \uff1a Bookinfo \u4e3a\u4f8b\uff0c\u5f00\u53d1 Productpage \u5fae\u670d\u52a1\uff0c\u53d8\u6210\u4e86\u4ee5\u4e0b\u7b80\u5355\u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883 \u73af\u5883\u90e8\u7f72\u5b8c\u6210\uff0c\u9009\u62e9\u8981\u5f00\u53d1\u7684\u7ec4\u4ef6\uff0c\u70b9\u51fb\u201c\u9524\u5b50\u201d\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u514b\u9686\u4e1a\u52a1\u4ee3\u7801\u6216\u9009\u62e9\u672c\u5730\u4ee3\u7801\u76ee\u5f55\u6253\u5f00 \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\uff0c\u672c\u5730\u4fee\u6539\u4ee3\u7801\u5e76\u4fdd\u5b58\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\uff0c\u8fdc\u7aef\u5f00\u53d1\u73af\u5883\u5b9e\u65f6\u751f\u6548\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5 \u843d\u5730\u6848\u4f8b \u76ee\u524d\uff0c\u817e\u8baf\u4e91 CODING DevOps\uff08\u8fd1 200 \u5fae\u670d\u52a1\uff09\u6b63\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u8df5\u9a8c\u8bc1 Nocalhost \u80fd\u591f\u5927\u5927\u63d0\u9ad8\u5f00\u53d1\b\u6548\u7387\uff0c\u7f29\u77ed\u5faa\u73af\u53cd\u9988\u3002 \u5f00\u6e90\u4e0e\u793e\u533a\u5171\u5efa Nocalhost \u76ee\u524d\u662f 100% \u5f00\u6e90\u7684\uff0c\u4ee3\u7801\u6258\u7ba1\u5728 Github\uff1ahttps://github.com/nocalhost/nocalhost.git\uff0c\u5e76\u9075\u5faa Apache-2.0 \u5f00\u6e90\u534f\u8bae\uff0c\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002 \u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Nocalhost \u7684\u4fe1\u606f\uff0c\u6b22\u8fce\u8bbf\u95ee\u5b98\u7f51\uff1ahttps://nocalhost.dev \u83b7\u53d6\u3002","title":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#nocalhost-","text":"","title":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_1","text":"\u968f\u7740\u4e1a\u52a1\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u6280\u672f\u90e8\u95e8\u7684\u7ec4\u7ec7\u67b6\u6784\u5728\u6a2a\u5411\u53ca\u7eb5\u5411\u4e0d\u65ad\u6269\u5927\u548c\u8c03\u6574\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u4f01\u4e1a\u7684\u751f\u4ea7\u8d44\u6599\uff1a\u5e94\u7528\u7cfb\u7edf\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u5e9e\u5927\u3002\u4e3a\u4e86\u8ba9\u5e94\u7528\u7cfb\u7edf\u9002\u914d\u4f01\u4e1a\u7ec4\u7ec7\u67b6\u6784\u7684\u8c03\u6574\uff0c\u68b3\u7406\u7ec4\u7ec7\u67b6\u6784\u5bf9\u4e8e\u5e94\u7528\u6743\u8d23\u7684\u8fb9\u754c\uff0c\u5927\u90e8\u5206\u7ec4\u7ec7\u4f1a\u9009\u62e9\u4f7f\u7528\u201c\u5fae\u670d\u52a1\u201d\u67b6\u6784\u6765\u5bf9\u5e94\u7528\u7cfb\u7edf\u8fdb\u884c\u6a2a\u5411\u62c6\u5206\uff0c\u4f7f\u5f97\u5e94\u7528\u7cfb\u7edf\u7684\u7ef4\u62a4\u8fb9\u754c\u9002\u914d\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u8d8a\u5e9e\u5927\u7684\u7ec4\u7ec7\u67b6\u6784\uff0c\u5e94\u7528\u7cfb\u7edf\u4f1a\u88ab\u62c6\u5206\u5730\u8d8a\u6765\u8d8a\u7ec6\uff0c\u201c\u5fae\u670d\u52a1\u201d\u7684\u6570\u91cf\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u591a\u3002\u800c\u5728\u201c\u5fae\u670d\u52a1\u201d\u7684\u62c6\u5206\u7684\u5b9e\u8df5\u4e2d\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u5c06\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u4e00\u80a1\u8111\u5730\u5bf9\u6807\u5230\u201c\u5fae\u670d\u52a1\u201d\b\u7684\u62c6\u5206\u7c92\u5ea6\u4e2d\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u201c\u5fae\u670d\u52a1\u201d\u62c6\u5206\u7c92\u5ea6\u8fc7\u7ec6\uff0c\u6570\u91cf\u8fdb\u4e00\u6b65\u5267\u589e\u7684\u95ee\u9898\u3002\u6700\u7ec8\uff0c\u201c\u5fae\u670d\u52a1\u201d\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u5c31\u50cf\u8de8\u90e8\u95e8\u534f\u4f5c\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u95ee\u9898\u5728\u60f3\u8981\u65b0\u589e\u9700\u6c42\u65f6\u5c24\u4e3a\u7a81\u51fa\u3002 \u201c\u5fae\u670d\u52a1\u201d\u5e26\u6765\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u5bf9\u5f00\u53d1\u4eba\u5458\u800c\u8a00\uff0c\u8fd8\u5e26\u6765\u4e86\u989d\u5916\u7684\u6311\u6218\uff1a\u5982\u4f55\u5feb\u901f\u542f\u52a8\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5f00\u53d1\u7684\u9700\u6c42\u4f9d\u8d56\u4e8e\u5176\u4ed6\u540c\u4e8b\u600e\u4e48\u8054\u8c03\uff1f\u5982\u4f55\u5feb\u901f\u8c03\u8bd5\u8fd9\u4e9b\u5fae\u670d\u52a1\uff1f \u800c\u5bf9\u4e8e\u7ba1\u7406\u4eba\u5458\u6765\u8bf4\uff0c\u4e5f\u540c\u6837\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u7684\u6311\u6218\uff1a\u5982\u4f55\u7ba1\u7406\u5f00\u53d1\u4eba\u5458\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5982\u4f55\u8ba9\u65b0\u5165\u804c\u7684\u540c\u4e8b\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\uff1f \u8bd5\u60f3\u4e00\u4e0b\uff0c\u8981\u5f00\u53d1\u7531 200 \u4e2a\u201c\u5fae\u670d\u52a1\u201d\u7ec4\u6210\u7684\u4e91\u539f\u751f\u5e94\u7528\uff0c\u4f1a\u9047\u5230\u54ea\u4e9b\u56f0\u96be\u5462\uff1f","title":"\u524d\u8a00"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#localhost","text":"\u5728\u5355\u4f53\u5e94\u7528\u7684\u65f6\u4ee3\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u6781\u4e3a\u53cb\u597d\u7684\uff0c\b\u5f00\u53d1\u8005\u4f7f\u7528\u672c\u673a\u8fd0\u884c\u5e94\u7528\uff0c\u4fee\u6539\u4ee3\u7801\u540e\u5b9e\u65f6\u751f\u6548\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee Localhost \u5b9e\u65f6\u67e5\u770b\u4ee3\u7801\u6548\u679c\u3002 \u5355\u4f53\u5e94\u7528\u548c\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u4e0d\u540c\uff0c\u5355\u4f53\u5e94\u7528\u662f \u201cALL-IN-ONE\u201d \u7ec4\u7ec7\u65b9\u5f0f\uff0c\u6240\u6709\u7684\u8c03\u7528\u5173\u7cfb\u4ec5\u9650\u4e8e\u5728\u81ea\u8eab\u7684\u7c7b\u548c\u51fd\u6570\uff0c\u5e94\u7528\u5bf9\u786c\u4ef6\u7684\u8981\u6c42\u4e00\u822c\u4e5f\u4e0d\u4f1a\u592a\u9ad8\u3002 \u800c\u5f00\u53d1\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u5219\u5927\u4e0d\u76f8\u540c\uff0c\u7531\u4e8e\u76f8\u4e92\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u9700\u8981\u5f00\u53d1\u67d0\u4e00\u4e2a\u529f\u80fd\u6216\u5fae\u670d\u52a1\u65f6\uff0c\u4e0d\u5f97\u4e0d\u5c06\u6240\u6709\u4f9d\u8d56\u7684\u670d\u52a1\u90fd\u542f\u52a8\u8d77\u6765\u3002\u968f\u7740\u5fae\u670d\u52a1\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5f00\u53d1\u5e94\u7528\u6240\u9700\u8981\u7684\u672c\u5730\u8d44\u6e90\u8d8a\u6765\u8d8a\u591a\uff0c\u6700\u7ec8\u5bfc\u81f4\u672c\u5730\u65e0\u6cd5\u6ee1\u8db3\u5f00\u53d1\u7684\u914d\u7f6e\u9700\u6c42\u3002","title":"Localhost \u65f6\u4ee3"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_2","text":"\u4e91\u539f\u751f\u548c Kubernetes \u7684\u666e\u53ca\uff0c\u8fdb\u4e00\u6b65\u5c4f\u853d\u4e86\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u4e3b\u8981\u4f53\u73b0\u5728\u90e8\u7f72\u548c\u8fd0\u7ef4\u9636\u6bb5\u3002 \u4e3a\u4e86\u89e3\u51b3\u5fae\u670d\u52a1\u5e94\u7528\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u9636\u6bb5\u73af\u5883\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff0c\u73b0\u4ee3\u7684\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1\uff0c\u90fd\u4f1a\u5c06\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u6253\u5305\u6210 Docker \u955c\u50cf\uff0c\u5e76\u4ee5\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f62\u5f0f\u5bf9\u5176\u8fdb\u884c\u90e8\u7f72\u3002\u5229\u7528 DevOps \u6d41\u6c34\u7ebf\u4e2d\u7684\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u90e8\u7f72\uff0c\u914d\u5408 Kubernetes \u63a2\u9488\u3001HPA\u3001\u5e94\u7528\u81ea\u6108\u7684\u80fd\u529b\uff0c\u5f7b\u5e95\u89e3\u653e\u4e86\u5fae\u670d\u52a1\u5e94\u7528\u7684\u90e8\u7f72\u548c\u8fd0\u7ef4\u73af\u8282\u3002 \u4f46\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u952e\u8282\u70b9\uff1a\u5f00\u53d1\u9636\u6bb5 \u5fae\u670d\u52a1\u5e94\u7528\u4f7f\u7528 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u5c01\u88c5\u540e\uff0c\u89e3\u51b3\u4e86\u5f00\u53d1\u8fc7\u7a0b\u5e94\u7528\u7684\u5feb\u901f\u542f\u52a8\u95ee\u9898\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u8981\u5728\u672c\u5730\u5b89\u88c5\u5355\u8282\u70b9\u7684 Kubernetes \u96c6\u7fa4\uff0c\u4f8b\u5982 Minikube\u3001Kind \u7b49\u5373\u53ef\u5feb\u901f\u542f\u52a8\u5fae\u670d\u52a1\u5e94\u7528\u3002 \u4f46\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u539f\u6765\u5355\u4f53\u5e94\u7528\u7684\u5f00\u53d1\u4f53\u9a8c\u53d8\u5f97\u4e0d\u590d\u5b58\u5728\uff0c\u7531\u4e8e\u5e94\u7528\u5f88\u96be\u5728 Docker \u5bb9\u5668\u4e4b\u5916\u8fd0\u884c\uff0c\u6240\u4ee5\u6bcf\u6b21\u4ee3\u7801\u4fee\u6539\uff0c\u90fd\u9700\u8981\u7ecf\u5386\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u6267\u884c docker build \u6784\u5efa\u955c\u50cf \u6267\u884c docker tag \u5bf9\u955c\u50cf\u8fdb\u884c\u6807\u8bb0 \u6267\u884c docker push \u63a8\u9001\u955c\u50cf\u5230\u4ed3\u5e93 \u4fee\u6539 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u7684\u955c\u50cf\u7248\u672c \u7b49\u5f85\u955c\u50cf\u62c9\u53d6\u7ed3\u675f \u7b49\u5f85 Pod \u91cd\u5efa \u67e5\u770b\u4fee\u6539\u540e\u7684\u4ee3\u7801\u6548\u679c \u8fd9\u76f4\u63a5\u62d6\u6162\u4e86\u5f00\u53d1\u7684\u5faa\u73af\u53cd\u9988\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4fee\u6539\uff0c\u52a8\u8f84\u9700\u8981\u6570\u5206\u949f\u751a\u81f3\u5341\u5206\u949f\u7684\u7b49\u5f85\u65f6\u95f4\u3002","title":"\u4e91\u539f\u751f\u89e3\u653e\u4e86\u90e8\u7f72\u548c\u8fd0\u7ef4\uff0c\u5f00\u53d1\u5462\uff1f"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#nocalhost-_1","text":"Nocalhost \u662f\u4e00\u4e2a\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e0c\u671b\u8ba9\u5f00\u53d1\u4e91\u539f\u751f\u5e94\u7528\u50cf\u5f00\u53d1\u5355\u4f53\u5e94\u7528\u539f\u59cb\u53c8\u7b80\u5355\u3002 Nocalhost \u91cd\u65b0\u68b3\u7406\u4e86\u5f00\u53d1\u8fc7\u7a0b\u6240\u6d89\u53ca\u5230\u7684\u89d2\u8272\u548c\u8d44\u6e90\uff1a \u56e2\u961f\u7ba1\u7406\u4eba\u5458 \u5f00\u53d1\u8005 \u5e94\u7528 \u96c6\u7fa4 \u5f00\u53d1\u7a7a\u95f4 \u901a\u8fc7\u5bf9\u8fd9\u4e9b\u89d2\u8272\u548c\u8d44\u6e90\u7684\u91cd\u65b0\u6574\u5408\uff0cNocalhost \u91cd\u65b0\u5b9a\u4e49\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e76\u5e26\u6765\u4e86\u5168\u65b0\u7684\u4e91\u539f\u751f\u5f00\u53d1\u4f53\u9a8c\u3002 \u4e3a\u4e86\u5feb\u901f\u7406\u89e3 Nocalhost \u91cd\u65b0\u5b9a\u4e49\u7684\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u7ad9\u5728\u4e0d\u540c\u7684\u89d2\u8272\u6765\u770b Nocalhost \u80fd\u7ed9\u4ed6\u4eec\u5e26\u6765\u4ec0\u4e48\u3002 \u5f00\u53d1\u4eba\u5458\uff1a \u6446\u8131\u6bcf\u6b21\u4fee\u6539\u9700\u8981\u91cd\u65b0 build \u65b0\u955c\u50cf\u4ee5\u53ca\u957f\u65f6\u95f4\u7684\u5faa\u73af\u53cd\u9988\uff0c\u4fee\u6539\u4ee3\u7801\u7acb\u5373\u751f\u6548 \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883\uff0c\u6446\u8131\u672c\u5730\u73af\u5883\u642d\u5efa\u548c\u8d44\u6e90\u4e0d\u8db3\u7684\u9650\u5236 \u672c\u5730 IDE \u7f16\u8f91\u5668\u548c\u5f00\u53d1\u73af\u5883\u8054\u52a8\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5 \u56fe\u5f62\u5316\u7684 IDE \u63d2\u4ef6\uff0c\u65e0\u9700\u719f\u6089 kubectl \u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684\u5f00\u53d1 \u7ba1\u7406\u4eba\u5458\uff1a \u7edf\u4e00\u7ba1\u7406\u5fae\u670d\u52a1\u5e94\u7528\u5305\uff0c\u964d\u4f4e\u5e94\u7528\u7684\u7ef4\u62a4\u6210\u672c \u7edf\u4e00\u7ba1\u7406\u5f00\u53d1\u73af\u5883\u548c\u96c6\u7fa4\uff0c\u63d0\u9ad8\u96c6\u7fa4\u8d44\u6e90\u7684\u5229\u7528\u7387\uff0c\u540c\u65f6\u5177\u5907\u9694\u79bb\u7279\u6027 \u4e3a\u65b0\u5458\u5de5\u5feb\u901f\u5206\u914d\u5f00\u53d1\u73af\u5883\uff0c\u5206\u914d\u73af\u5883\u540e\u7acb\u523b\u80fd\u8fdb\u884c\u5e94\u7528\u5f00\u53d1 \u5f39\u6027\u7684\u5f00\u53d1\u73af\u5883\u8d44\u6e90\uff0c\u7528\u5b8c\u9500\u6bc1\uff0c\u964d\u4f4e\u5f00\u53d1\u6210\u672c \u4ee5 Nocalhost \u5185\u7f6e\u7684 Demo \uff1a Bookinfo \u4e3a\u4f8b\uff0c\u5f00\u53d1 Productpage \u5fae\u670d\u52a1\uff0c\u53d8\u6210\u4e86\u4ee5\u4e0b\u7b80\u5355\u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883 \u73af\u5883\u90e8\u7f72\u5b8c\u6210\uff0c\u9009\u62e9\u8981\u5f00\u53d1\u7684\u7ec4\u4ef6\uff0c\u70b9\u51fb\u201c\u9524\u5b50\u201d\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u514b\u9686\u4e1a\u52a1\u4ee3\u7801\u6216\u9009\u62e9\u672c\u5730\u4ee3\u7801\u76ee\u5f55\u6253\u5f00 \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\uff0c\u672c\u5730\u4fee\u6539\u4ee3\u7801\u5e76\u4fdd\u5b58\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\uff0c\u8fdc\u7aef\u5f00\u53d1\u73af\u5883\u5b9e\u65f6\u751f\u6548\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5","title":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_3","text":"\u76ee\u524d\uff0c\u817e\u8baf\u4e91 CODING DevOps\uff08\u8fd1 200 \u5fae\u670d\u52a1\uff09\u6b63\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u8df5\u9a8c\u8bc1 Nocalhost \u80fd\u591f\u5927\u5927\u63d0\u9ad8\u5f00\u53d1\b\u6548\u7387\uff0c\u7f29\u77ed\u5faa\u73af\u53cd\u9988\u3002","title":"\u843d\u5730\u6848\u4f8b"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_4","text":"Nocalhost \u76ee\u524d\u662f 100% \u5f00\u6e90\u7684\uff0c\u4ee3\u7801\u6258\u7ba1\u5728 Github\uff1ahttps://github.com/nocalhost/nocalhost.git\uff0c\u5e76\u9075\u5faa Apache-2.0 \u5f00\u6e90\u534f\u8bae\uff0c\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002 \u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Nocalhost \u7684\u4fe1\u606f\uff0c\u6b22\u8fce\u8bbf\u95ee\u5b98\u7f51\uff1ahttps://nocalhost.dev \u83b7\u53d6\u3002","title":"\u5f00\u6e90\u4e0e\u793e\u533a\u5171\u5efa"},{"location":"zh/Concepts/application/","text":"\u4ec0\u4e48\u662f Application Application \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u4f60\u60f3\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u7684\u4e00\u7ec4 manifest \u6587\u4ef6\uff0c\u540c\u65f6\u652f\u6301 k8s manifest \u548c helm chart\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b manifest \u901a\u5e38\u5305\u542b\u4f60\u7684\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u6240\u6709 k8s \u8d44\u6e90\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u5b83\u7684\u6700\u5c0f\u5316\u3002 Application \u652f\u6301\u653e\u7f6e\u5728 git \u7684 k8s manifest \uff0c\u653e\u7f6e\u5728 git \u7684 helm chart \u548c\u76f4\u63a5\u653e\u7f6e\u5728 Helm Repo \u51e0\u79cd\u65b9\u5f0f\uff0c\u672a\u6765\u4f1a\u6dfb\u52a0\u5bf9 kustomize \u7684\u652f\u6301\u3002 Application \u662f\u505a\u4ec0\u4e48\u7684 Application \u53ef\u4ee5\u7528\u4e8e\u521b\u5efa DevSpace \uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 IDE \u63d2\u4ef6\u6765\u76f4\u63a5\u4f7f\u7528\u5e76\u90e8\u7f72\u4f60\u7684\u5e94\u7528\uff0c \u63d2\u4ef6\u6b63\u662f\u57fa\u4e8e DevSpace \u8fdb\u884c\u5e94\u7528\u90e8\u7f72\u7684 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f00\u53d1\u8005\u5728\u88ab\u5206\u914d\u4e00\u4e2a DevSpace \u540e\uff0c\u5c31\u53ef\u4ee5\u4fbf\u6377\u5730\u5728 IDE \u4e0a\u8fdb\u884c\u5f00\u53d1\u3002 \u5728\u88ab\u5206\u914d DevSpace \u540e\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u7528\u4ee5\u8bbf\u95ee\u8fd9\u4e2a DevSpace \u7684 kubeconfig \uff0c nhctl \u6216\u8005\u63d2\u4ef6\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7684 manifest \u6587\u4ef6\u548c kubeconfig \u6765\u542f\u52a8\u5e94\u7528\u3002 Application \u4e5f\u662f\u8fd9\u6837\u88ab\u4f7f\u7528\u7684\uff0c DevSpace \u5176\u5b9e\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c Application + kubeconfig \uff1a Application \u4e0e Manifest \u5bf9\u4e8e Helm Manifest \u7684\u652f\u6301 nocalhost \u652f\u6301\u4f7f\u7528 helm\uff0c \u65e0\u9700\u5bf9 chart \u505a\u4efb\u4f55\u6539\u9020 . 1. \u5982\u679c\u4f60\u5df2\u7ecf\u62e5\u6709\u5e76\u4e14\u6b63\u5728\u4f7f\u7528 Helm Chart\uff1a helm install helloworld /chart/dir/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u53ea\u9700\u8981\u82b1\u8d39\u4e00\u70b9\u65f6\u95f4\uff0c\u5c06\u4f60\u7684 Helm Chart \u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a\u4f60\u6709\u6743\u9650\u8bbf\u95ee git \u4ed3\u5e93\u5373\u53ef\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 git clone \u547d\u4ee4\u6765\u83b7\u53d6\u6700\u65b0\u7684 Application \u4fe1\u606f\uff0c\u4f8b\u5982\uff1a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/dir/ Chart.yaml values.yaml charts/ templates/ ... \u5bf9\u4e8e\u8fd9\u4e2a\u4ed3\u5e93\u6765\u8bf4\uff0c\u6211\u4eec\u5c06 Helm chart \u653e\u7f6e\u5728\u4e86 \u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55 \u7684 mychart/dir/ \u6587\u4ef6\u4e0b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fdb\u884c\u4f53\u9a8c\uff1a nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/bookinfo \\ --kubeconfig ~/.kube/barconfig 2. \u5982\u679c\u62e5\u6709\u81ea\u5df1\u7684 Helm Repo\uff1a helm install helloworld \\ mychart \\ -- repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\uff1a nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u5bf9\u4e8e Kubernetes Manifest \u7684\u652f\u6301 nocalhost \u4e5f\u53ef\u4ee5\u65e0\u7f1d\u652f\u6301 Kubernetes Manifest \uff0c\u540c\u6837\u65e0\u9700\u4f60\u5bf9\u914d\u7f6e\u505a\u4efb\u4f55\u6539\u9020\uff0c\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u4f60\u5c06\u5176\u4e0a\u4f20\u5230\u4efb\u610f\u4e00\u4e2a git \u4ed3\u5e93\uff1a \u5047\u8bbe\u4f60\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5b83\u7684\u5730\u5740\u4e3a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \uff0c\u91cc\u9762\u5b58\u653e\u7740\u8bb8\u591a Kubernetes Manifest yaml \u6587\u4ef6 \uff1a README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 \u4f60\u53ea\u60f3\u5e94\u7528\u76f8\u5bf9\u6839\u76ee\u5f55 what/ever/ \u4e0e support/all/dir/inside/ \u4e0b\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig \u5982\u679c\u4f60\u60f3\u5e94\u7528\u6240\u6709\u6587\u4ef6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path . \\ --kubeconfig ~/.kube/barconfig Nocalhost \u5bf9\u539f\u751f Application \u7684\u589e\u5f3a Nocalhost \u5bf9\u7528\u6237\u7684 k8s manifest \u914d\u7f6e\u65e0\u4fb5\u5165\uff0c\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u589e\u5f3a\u529f\u80fd\uff0c\u4f8b\u5982 Pre-Install \u3001\u4f8b\u5982\u4f9d\u8d56\u7ba1\u7406\u7b49\u3002\u5728\u4f60\u7684\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u3002 Pre-Install \u6211\u4eec\u5141\u8bb8\u7528\u6237\u5728\u5b89\u88c5\u90e8\u7f72\u5e94\u7528\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002\u4ee5 bookinfo \u4e3a\u4f8b\uff0c\u5728\u5b89\u88c5\u5e94\u7528\u524d\uff0c\u6211\u4eec\u4f1a\u6267\u884c\u5982\u4e0b\u58f0\u660e\u7684\u51e0\u4e2a Job\uff0c\u7b49\u5f85 Job \u6267\u884c\u7ed3\u675f\u624d\u5b89\u88c5\u5e94\u7528\uff0c onPreInstall: - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" \u542f\u52a8\u4f9d\u8d56\u7ba1\u7406 Nocalhost \u53ef\u4ee5\u63a7\u5236\u5e94\u7528\u5185\u7684\u670d\u52a1\u542f\u52a8\u987a\u5e8f\u3002 \u4f8b\u5982\u4ee5\u4e0b\u8fd9\u4e2a\u914d\u7f6e\uff0c\u4ee3\u8868 reviews \u8fd9\u4e2a deployment \uff0c\u9700\u8981\u7b49\u5f85 productpage \u7684 pod \u53ef\u7528\u624d\u4f1a\u542f\u52a8\u3002 services: - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u53ef\u4ee5\u70b9\u51fb \u542f\u52a8\u4f9d\u8d56\u7ba1\u7406 \u6765\u67e5\u770b\u66f4\u591a\u3002 \u5f00\u53d1\u955c\u50cf\u914d\u7f6e \u4e0a\u8ff0\u914d\u7f6e\u4e2d\uff0c devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest \uff0c\u4ee3\u8868\u4f60\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c\u4f7f\u7528\u6b64\u955c\u50cf\u4f5c\u4e3a\u5bb9\u5668\uff0c\u66ff\u4ee3\u539f\u955c\u50cf\u8fdb\u884c\u5f00\u53d1\u3002 \u66f4\u591a \u5982\u679c\u4f60\u60f3\u4e86\u89e3 .nocalhost/ \u7684\u66f4\u591a\u914d\u7f6e\u4fe1\u606f\uff0c\u70b9\u51fb \u6b64\u5904 \u67e5\u770b\u3002 Application \u7684\u6700\u4f73\u5b9e\u8df5 \u901a\u5e38\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 Nocalhost-Server + IDE \u63d2\u4ef6\u914d\u5408\u4f7f\u7528\u3002\u867d\u7136 nhctl \u80fd\u5904\u7406\u6240\u6709\u4e8b\u60c5\uff0c\u4f46\u547d\u4ee4\u884c\u64cd\u4f5c\u4f7f\u7528\u7e41\u7410\uff0c\u6211\u4eec\u5e76\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u76f4\u63a5\u8fdb\u884c\u5e94\u7528\u7684\u90e8\u7f72\u3001\u5f00\u53d1\u7b49\u3002\u867d\u7136\u4e0a\u9762\u7684\u5f88\u591a\u793a\u4f8b\u90fd\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u8bf4\u660e\u3002 \u7528\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e3a\u4f8b\uff0c\u76f4\u63a5\u8fdb\u5165 Nocalhost-Web \u6765\u8fdb\u884c\u521b\u5efa\u3002\u8fdb\u5165\u4e3b\u9875\u540e\uff0c\u5207\u6362\u5230 Applications \u8fd9\u4e00\u680f\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u8fdb\u884c\u521b\u5efa\uff1a \u652f\u6301\u524d\u9762\u5206\u522b\u63d0\u5230\u7684\u4e09\u79cd\u5f62\u5f0f\uff0c\u8fd9\u91cc\u4ee5 kubernetes manifest \u4e3a\u4f8b\uff1a Advance \u8fd9\u91cc\u4f1a\u8bf4\u660e\u4e00\u4e9b Application \u4e00\u4e9b\u989d\u5916\u7684\u7279\u6027\u6216\u8005\u8bbe\u8ba1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u4f1a\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u7684\u4f7f\u7528 Nocalhost\u3002 Application Name nocalhost \u4f7f\u7528\u552f\u4e00\u7684 Application Name \u6765\u533a\u5206\u4e0d\u540c\u7684 Application\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7684 Nocalhost-Server \uff08\u4f8b\u5982\u90e8\u7f72\u4e86\u4e24\u5957\u4ee5\u4e0a\u7684 Nocalhost-Server \uff09\uff0c\u4e0d\u652f\u6301\u76f8\u540c\u7684 Application Name \u5728\u540c\u4e00\u4e2a\u5f00\u53d1\u673a\u5668\u4e0a\u4f7f\u7528\u3002 ~/.nh \u4e0b\u7684 Application \u6ce8\u610f\uff0c ~/.nh/ \u76ee\u5f55\u4e0b\uff0c nhctl \u548c IDE \u63d2\u4ef6\u4f1a\u5b58\u50a8\u4e00\u4e9b\u6587\u4ef6\u7528\u4ee5\u4fdd\u5b58\u5f53\u524d\u5e94\u7528\u90e8\u7f72\uff0c\u5f00\u53d1\u7b49\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u4e86\u89e3\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u4ed6\u4eec\u3002","title":"Application"},{"location":"zh/Concepts/application/#application","text":"Application \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u4f60\u60f3\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u7684\u4e00\u7ec4 manifest \u6587\u4ef6\uff0c\u540c\u65f6\u652f\u6301 k8s manifest \u548c helm chart\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b manifest \u901a\u5e38\u5305\u542b\u4f60\u7684\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u6240\u6709 k8s \u8d44\u6e90\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u5b83\u7684\u6700\u5c0f\u5316\u3002 Application \u652f\u6301\u653e\u7f6e\u5728 git \u7684 k8s manifest \uff0c\u653e\u7f6e\u5728 git \u7684 helm chart \u548c\u76f4\u63a5\u653e\u7f6e\u5728 Helm Repo \u51e0\u79cd\u65b9\u5f0f\uff0c\u672a\u6765\u4f1a\u6dfb\u52a0\u5bf9 kustomize \u7684\u652f\u6301\u3002","title":"\u4ec0\u4e48\u662f Application"},{"location":"zh/Concepts/application/#application_1","text":"Application \u53ef\u4ee5\u7528\u4e8e\u521b\u5efa DevSpace \uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 IDE \u63d2\u4ef6\u6765\u76f4\u63a5\u4f7f\u7528\u5e76\u90e8\u7f72\u4f60\u7684\u5e94\u7528\uff0c \u63d2\u4ef6\u6b63\u662f\u57fa\u4e8e DevSpace \u8fdb\u884c\u5e94\u7528\u90e8\u7f72\u7684 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f00\u53d1\u8005\u5728\u88ab\u5206\u914d\u4e00\u4e2a DevSpace \u540e\uff0c\u5c31\u53ef\u4ee5\u4fbf\u6377\u5730\u5728 IDE \u4e0a\u8fdb\u884c\u5f00\u53d1\u3002 \u5728\u88ab\u5206\u914d DevSpace \u540e\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u7528\u4ee5\u8bbf\u95ee\u8fd9\u4e2a DevSpace \u7684 kubeconfig \uff0c nhctl \u6216\u8005\u63d2\u4ef6\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7684 manifest \u6587\u4ef6\u548c kubeconfig \u6765\u542f\u52a8\u5e94\u7528\u3002 Application \u4e5f\u662f\u8fd9\u6837\u88ab\u4f7f\u7528\u7684\uff0c DevSpace \u5176\u5b9e\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c Application + kubeconfig \uff1a","title":"Application \u662f\u505a\u4ec0\u4e48\u7684"},{"location":"zh/Concepts/application/#application-manifest","text":"","title":"Application \u4e0e Manifest"},{"location":"zh/Concepts/application/#helm-manifest","text":"nocalhost \u652f\u6301\u4f7f\u7528 helm\uff0c \u65e0\u9700\u5bf9 chart \u505a\u4efb\u4f55\u6539\u9020 .","title":"\u5bf9\u4e8e Helm Manifest \u7684\u652f\u6301"},{"location":"zh/Concepts/application/#1-helm-chart","text":"helm install helloworld /chart/dir/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u53ea\u9700\u8981\u82b1\u8d39\u4e00\u70b9\u65f6\u95f4\uff0c\u5c06\u4f60\u7684 Helm Chart \u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a\u4f60\u6709\u6743\u9650\u8bbf\u95ee git \u4ed3\u5e93\u5373\u53ef\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 git clone \u547d\u4ee4\u6765\u83b7\u53d6\u6700\u65b0\u7684 Application \u4fe1\u606f\uff0c\u4f8b\u5982\uff1a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/dir/ Chart.yaml values.yaml charts/ templates/ ... \u5bf9\u4e8e\u8fd9\u4e2a\u4ed3\u5e93\u6765\u8bf4\uff0c\u6211\u4eec\u5c06 Helm chart \u653e\u7f6e\u5728\u4e86 \u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55 \u7684 mychart/dir/ \u6587\u4ef6\u4e0b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fdb\u884c\u4f53\u9a8c\uff1a nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/bookinfo \\ --kubeconfig ~/.kube/barconfig","title":"1. \u5982\u679c\u4f60\u5df2\u7ecf\u62e5\u6709\u5e76\u4e14\u6b63\u5728\u4f7f\u7528 Helm Chart\uff1a"},{"location":"zh/Concepts/application/#2-helm-repo","text":"helm install helloworld \\ mychart \\ -- repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\uff1a nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig","title":"2. \u5982\u679c\u62e5\u6709\u81ea\u5df1\u7684 Helm Repo\uff1a"},{"location":"zh/Concepts/application/#kubernetes-manifest","text":"nocalhost \u4e5f\u53ef\u4ee5\u65e0\u7f1d\u652f\u6301 Kubernetes Manifest \uff0c\u540c\u6837\u65e0\u9700\u4f60\u5bf9\u914d\u7f6e\u505a\u4efb\u4f55\u6539\u9020\uff0c\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u4f60\u5c06\u5176\u4e0a\u4f20\u5230\u4efb\u610f\u4e00\u4e2a git \u4ed3\u5e93\uff1a \u5047\u8bbe\u4f60\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5b83\u7684\u5730\u5740\u4e3a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \uff0c\u91cc\u9762\u5b58\u653e\u7740\u8bb8\u591a Kubernetes Manifest yaml \u6587\u4ef6 \uff1a README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 \u4f60\u53ea\u60f3\u5e94\u7528\u76f8\u5bf9\u6839\u76ee\u5f55 what/ever/ \u4e0e support/all/dir/inside/ \u4e0b\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig \u5982\u679c\u4f60\u60f3\u5e94\u7528\u6240\u6709\u6587\u4ef6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path . \\ --kubeconfig ~/.kube/barconfig","title":"\u5bf9\u4e8e Kubernetes Manifest \u7684\u652f\u6301"},{"location":"zh/Concepts/application/#nocalhost-application","text":"Nocalhost \u5bf9\u7528\u6237\u7684 k8s manifest \u914d\u7f6e\u65e0\u4fb5\u5165\uff0c\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u589e\u5f3a\u529f\u80fd\uff0c\u4f8b\u5982 Pre-Install \u3001\u4f8b\u5982\u4f9d\u8d56\u7ba1\u7406\u7b49\u3002\u5728\u4f60\u7684\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u3002","title":"Nocalhost \u5bf9\u539f\u751f Application \u7684\u589e\u5f3a"},{"location":"zh/Concepts/application/#pre-install","text":"\u6211\u4eec\u5141\u8bb8\u7528\u6237\u5728\u5b89\u88c5\u90e8\u7f72\u5e94\u7528\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002\u4ee5 bookinfo \u4e3a\u4f8b\uff0c\u5728\u5b89\u88c5\u5e94\u7528\u524d\uff0c\u6211\u4eec\u4f1a\u6267\u884c\u5982\u4e0b\u58f0\u660e\u7684\u51e0\u4e2a Job\uff0c\u7b49\u5f85 Job \u6267\u884c\u7ed3\u675f\u624d\u5b89\u88c5\u5e94\u7528\uff0c onPreInstall: - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\"","title":"Pre-Install"},{"location":"zh/Concepts/application/#_1","text":"Nocalhost \u53ef\u4ee5\u63a7\u5236\u5e94\u7528\u5185\u7684\u670d\u52a1\u542f\u52a8\u987a\u5e8f\u3002 \u4f8b\u5982\u4ee5\u4e0b\u8fd9\u4e2a\u914d\u7f6e\uff0c\u4ee3\u8868 reviews \u8fd9\u4e2a deployment \uff0c\u9700\u8981\u7b49\u5f85 productpage \u7684 pod \u53ef\u7528\u624d\u4f1a\u542f\u52a8\u3002 services: - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u53ef\u4ee5\u70b9\u51fb \u542f\u52a8\u4f9d\u8d56\u7ba1\u7406 \u6765\u67e5\u770b\u66f4\u591a\u3002","title":"\u542f\u52a8\u4f9d\u8d56\u7ba1\u7406"},{"location":"zh/Concepts/application/#_2","text":"\u4e0a\u8ff0\u914d\u7f6e\u4e2d\uff0c devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest \uff0c\u4ee3\u8868\u4f60\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c\u4f7f\u7528\u6b64\u955c\u50cf\u4f5c\u4e3a\u5bb9\u5668\uff0c\u66ff\u4ee3\u539f\u955c\u50cf\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u5f00\u53d1\u955c\u50cf\u914d\u7f6e"},{"location":"zh/Concepts/application/#_3","text":"\u5982\u679c\u4f60\u60f3\u4e86\u89e3 .nocalhost/ \u7684\u66f4\u591a\u914d\u7f6e\u4fe1\u606f\uff0c\u70b9\u51fb \u6b64\u5904 \u67e5\u770b\u3002","title":"\u66f4\u591a"},{"location":"zh/Concepts/application/#application_2","text":"\u901a\u5e38\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 Nocalhost-Server + IDE \u63d2\u4ef6\u914d\u5408\u4f7f\u7528\u3002\u867d\u7136 nhctl \u80fd\u5904\u7406\u6240\u6709\u4e8b\u60c5\uff0c\u4f46\u547d\u4ee4\u884c\u64cd\u4f5c\u4f7f\u7528\u7e41\u7410\uff0c\u6211\u4eec\u5e76\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u76f4\u63a5\u8fdb\u884c\u5e94\u7528\u7684\u90e8\u7f72\u3001\u5f00\u53d1\u7b49\u3002\u867d\u7136\u4e0a\u9762\u7684\u5f88\u591a\u793a\u4f8b\u90fd\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u8bf4\u660e\u3002 \u7528\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e3a\u4f8b\uff0c\u76f4\u63a5\u8fdb\u5165 Nocalhost-Web \u6765\u8fdb\u884c\u521b\u5efa\u3002\u8fdb\u5165\u4e3b\u9875\u540e\uff0c\u5207\u6362\u5230 Applications \u8fd9\u4e00\u680f\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u8fdb\u884c\u521b\u5efa\uff1a \u652f\u6301\u524d\u9762\u5206\u522b\u63d0\u5230\u7684\u4e09\u79cd\u5f62\u5f0f\uff0c\u8fd9\u91cc\u4ee5 kubernetes manifest \u4e3a\u4f8b\uff1a","title":"Application \u7684\u6700\u4f73\u5b9e\u8df5"},{"location":"zh/Concepts/application/#advance","text":"\u8fd9\u91cc\u4f1a\u8bf4\u660e\u4e00\u4e9b Application \u4e00\u4e9b\u989d\u5916\u7684\u7279\u6027\u6216\u8005\u8bbe\u8ba1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u4f1a\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u7684\u4f7f\u7528 Nocalhost\u3002","title":"Advance"},{"location":"zh/Concepts/application/#application-name","text":"nocalhost \u4f7f\u7528\u552f\u4e00\u7684 Application Name \u6765\u533a\u5206\u4e0d\u540c\u7684 Application\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7684 Nocalhost-Server \uff08\u4f8b\u5982\u90e8\u7f72\u4e86\u4e24\u5957\u4ee5\u4e0a\u7684 Nocalhost-Server \uff09\uff0c\u4e0d\u652f\u6301\u76f8\u540c\u7684 Application Name \u5728\u540c\u4e00\u4e2a\u5f00\u53d1\u673a\u5668\u4e0a\u4f7f\u7528\u3002","title":"Application Name"},{"location":"zh/Concepts/application/#nh-application","text":"\u6ce8\u610f\uff0c ~/.nh/ \u76ee\u5f55\u4e0b\uff0c nhctl \u548c IDE \u63d2\u4ef6\u4f1a\u5b58\u50a8\u4e00\u4e9b\u6587\u4ef6\u7528\u4ee5\u4fdd\u5b58\u5f53\u524d\u5e94\u7528\u90e8\u7f72\uff0c\u5f00\u53d1\u7b49\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u4e86\u89e3\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u4ed6\u4eec\u3002","title":"~/.nh \u4e0b\u7684 Application"},{"location":"zh/Concepts/cluster/","text":"\u4ec0\u4e48\u662f Cluster Cluster \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u901a\u5e38\u5bf9\u5e94\u7740\u4e00\u4e2a k8s \u96c6\u7fa4\uff0c\u5b83\u9700\u8981\u7ef4\u6301\u4e00\u4efd\u62e5\u6709\u8fd9\u4e2a\u96c6\u7fa4 Cluster-Admin \u6743\u9650\u7684 kubeConfig \u3002 Nocalhost \u652f\u6301\u540c\u65f6\u7ba1\u7406\u591a\u4e2a Cluster \uff0c\u8fd9\u4e9b\u96c6\u7fa4\u53ef\u4ee5\u662f GKE \u3001 minikube \u3001 microK8s \u7b49\u7b49\u3002 Cluster \u662f\u505a\u4ec0\u4e48\u7684 Cluster \u7ba1\u7406\u8fd0\u884c\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\u3002 Cluster \u4e00\u822c\u4e0e DevSpace \u914d\u5408\u4f7f\u7528\uff0c\u6211\u4eec\u9700\u8981\u5728 Nocalhost-Web \u8fdb\u884c Cluster \u7684\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6 Cluster \u8fd9\u4e2a\u6982\u5ff5\uff0c\u800c\u7528\u6237\u5728 DevSpace \u4e0b\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u90fd\u501f\u52a9\u4e86 Cluster \u7684\u80fd\u529b\u3002 \u5982\u4f55\u7ba1\u7406 Cluster \u9996\u5148\u8fdb\u5165 Nocalhost-Web \uff0c\u5207\u6362\u5230 Clusters \u8fd9\u4e00\u680f\uff0c\u8fd9\u91cc\u4f1a\u5c55\u793a\u6240\u6709\u7684 Cluster \u5217\u8868\u3002 \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 CREATE \u8fdb\u884c Cluster \u7684\u521b\u5efa\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u786e\u8ba4\u6b64 kubeconfig \u662f\u5426\u62e5\u6709\u96c6\u7fa4\u7ba1\u7406\u6743\u9650\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u786e\u8ba4\uff1a > kubectl auth can-i '*' '*' yes","title":"Cluster"},{"location":"zh/Concepts/cluster/#cluster","text":"Cluster \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u901a\u5e38\u5bf9\u5e94\u7740\u4e00\u4e2a k8s \u96c6\u7fa4\uff0c\u5b83\u9700\u8981\u7ef4\u6301\u4e00\u4efd\u62e5\u6709\u8fd9\u4e2a\u96c6\u7fa4 Cluster-Admin \u6743\u9650\u7684 kubeConfig \u3002 Nocalhost \u652f\u6301\u540c\u65f6\u7ba1\u7406\u591a\u4e2a Cluster \uff0c\u8fd9\u4e9b\u96c6\u7fa4\u53ef\u4ee5\u662f GKE \u3001 minikube \u3001 microK8s \u7b49\u7b49\u3002","title":"\u4ec0\u4e48\u662f Cluster"},{"location":"zh/Concepts/cluster/#cluster_1","text":"Cluster \u7ba1\u7406\u8fd0\u884c\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\u3002 Cluster \u4e00\u822c\u4e0e DevSpace \u914d\u5408\u4f7f\u7528\uff0c\u6211\u4eec\u9700\u8981\u5728 Nocalhost-Web \u8fdb\u884c Cluster \u7684\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6 Cluster \u8fd9\u4e2a\u6982\u5ff5\uff0c\u800c\u7528\u6237\u5728 DevSpace \u4e0b\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u90fd\u501f\u52a9\u4e86 Cluster \u7684\u80fd\u529b\u3002","title":"Cluster \u662f\u505a\u4ec0\u4e48\u7684"},{"location":"zh/Concepts/cluster/#cluster_2","text":"\u9996\u5148\u8fdb\u5165 Nocalhost-Web \uff0c\u5207\u6362\u5230 Clusters \u8fd9\u4e00\u680f\uff0c\u8fd9\u91cc\u4f1a\u5c55\u793a\u6240\u6709\u7684 Cluster \u5217\u8868\u3002 \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 CREATE \u8fdb\u884c Cluster \u7684\u521b\u5efa\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u786e\u8ba4\u6b64 kubeconfig \u662f\u5426\u62e5\u6709\u96c6\u7fa4\u7ba1\u7406\u6743\u9650\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u786e\u8ba4\uff1a > kubectl auth can-i '*' '*' yes","title":"\u5982\u4f55\u7ba1\u7406 Cluster"},{"location":"zh/Concepts/devcontainer/","text":"\u4ec0\u4e48\u662f DevContainer DevContainer \u662f\u4e00\u4e2a\u7528\u6237\u652f\u6491\u5f00\u53d1\u3001\u8c03\u8bd5\u67d0\u4e2a\u7279\u5b9a\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u57fa\u7840\u73af\u5883\uff0c\u6b64\u73af\u5883\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u5185\u5e38\u542b\u6709\u5f00\u53d1\u8be5\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u5168\u5957 SDK\uff0c\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177\uff0c\u4ee5\u53ca\u5176\u4ed6\u8f85\u52a9\u5de5\u5177\u3002 \u5728\u670d\u52a1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u88ab\u5207\u6362\u5230 DevMode \u7684\u65f6\u5019\uff0cNocalhost \u4f1a\u4f7f\u7528 DevContainer \u66ff\u6362\u539f\u672c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u3002 \u5982\u4f55\u914d\u7f6e DevContainer \u5728 Nocalhost \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7ed9\u5bf9\u5e94\u7684 service \u6dfb\u52a0 devContainerImage \u5b57\u6bb5\u5373\u53ef\u3002 \u5728 Nocalhost \u63a7\u5236 Pod \u8fdb\u5165 DevMode \u7684\u65f6\u5019\uff0c\u8bbe\u7f6e\u7684 devContainerImage \u4f1a\u88ab\u542f\u52a8\u6210\u4e3a DevContainer \u66ff\u4ee3\u539f\u672c\u7684\u5bb9\u5668\u3002\u4e4b\u540e\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevContainer \u4e2d\u6784\u5efa\uff0c\u8fd0\u884c\uff0c\u8c03\u8bd5\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e86\u3002 Nocalhost \u4f1a\u5c06 DevContainer \u7684\u542f\u52a8\u547d\u4ee4\u8986\u76d6\u4e3a /bin/sh -c tail -f /dev/null \u4ee5\u786e\u4fdd DevContainer \u4e0d\u4f1a\u610f\u5916\u9000\u51fa\u3002\u5173\u4e8e DevMode \u4e0b\uff0cNocalhost \u505a\u7684\u5176\u4ed6\u53d8\u52a8\uff0c\u8bf7\u67e5\u770b\uff1a DevMode Nocalhost \u63d0\u4f9b\u7684 DevContainer Image https://github.com/nocalhost/dev-container \u5173\u4e8e DevContainer Image \u5236\u4f5c\u7684\u5efa\u8bae \u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 Docker Image \u6765\u4f5c\u4e3a DevContainer Image\uff0c\u53ea\u8981\u4ed6\u5305\u542b\u57fa\u672c\u7684 shell (/bin/sh) \u5373\u53ef\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4e3a\u7279\u5b9a\u6280\u672f\u6808\u7684\u670d\u52a1\u63d0\u4f9b\u4e13\u5c5e\u7684 DevContainer Image\u3002\u4e00\u4e2a\u597d\u7684 DevContainer Image \u5e94\u8be5\uff1a \u63d0\u4f9b\u6613\u7528\u7684 shell\uff0c\u5982\uff1abash,zsh \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u57fa\u7840 SDK\uff0c\u5982 JDK \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u5de5\u5177\u94fe\uff0c\u5982 git\uff0cmaven\uff0cyarn\uff0cmake \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u6216\u8005\u81ea\u52a8\u4e0b\u8f7d\u914d\u7f6e\uff0c\u5982\u914d\u7f6e Maven \u955c\u50cf\u6e90 \u63d0\u4f9b\u5f00\u53d1\u8fc7\u7a0b\u9700\u8981\u7684\u5176\u4ed6\u8c03\u8bd5\u5de5\u5177\uff0c\u5982 gdb\uff0ccurl\uff0ctcpdump\uff0cmysql-client \u7b49 \u4e0d\u8981\u5305\u542b\u670d\u52a1\u7684\u6e90\u4ee3\u7801\uff08\u6e90\u4ee3\u7801\u5e94\u8be5\u901a\u8fc7\u6e90\u7801\u7ba1\u7406\u7cfb\u7edf\u68c0\u51fa\u5230\u672c\u5730\uff0c\u5e76\u540c\u6b65\u5230 DevContainer \u4e2d\u3002\uff09","title":"DevContainer"},{"location":"zh/Concepts/devcontainer/#devcontainer","text":"DevContainer \u662f\u4e00\u4e2a\u7528\u6237\u652f\u6491\u5f00\u53d1\u3001\u8c03\u8bd5\u67d0\u4e2a\u7279\u5b9a\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u57fa\u7840\u73af\u5883\uff0c\u6b64\u73af\u5883\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u5185\u5e38\u542b\u6709\u5f00\u53d1\u8be5\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u5168\u5957 SDK\uff0c\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177\uff0c\u4ee5\u53ca\u5176\u4ed6\u8f85\u52a9\u5de5\u5177\u3002 \u5728\u670d\u52a1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u88ab\u5207\u6362\u5230 DevMode \u7684\u65f6\u5019\uff0cNocalhost \u4f1a\u4f7f\u7528 DevContainer \u66ff\u6362\u539f\u672c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u3002","title":"\u4ec0\u4e48\u662f DevContainer"},{"location":"zh/Concepts/devcontainer/#devcontainer_1","text":"\u5728 Nocalhost \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7ed9\u5bf9\u5e94\u7684 service \u6dfb\u52a0 devContainerImage \u5b57\u6bb5\u5373\u53ef\u3002 \u5728 Nocalhost \u63a7\u5236 Pod \u8fdb\u5165 DevMode \u7684\u65f6\u5019\uff0c\u8bbe\u7f6e\u7684 devContainerImage \u4f1a\u88ab\u542f\u52a8\u6210\u4e3a DevContainer \u66ff\u4ee3\u539f\u672c\u7684\u5bb9\u5668\u3002\u4e4b\u540e\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevContainer \u4e2d\u6784\u5efa\uff0c\u8fd0\u884c\uff0c\u8c03\u8bd5\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e86\u3002 Nocalhost \u4f1a\u5c06 DevContainer \u7684\u542f\u52a8\u547d\u4ee4\u8986\u76d6\u4e3a /bin/sh -c tail -f /dev/null \u4ee5\u786e\u4fdd DevContainer \u4e0d\u4f1a\u610f\u5916\u9000\u51fa\u3002\u5173\u4e8e DevMode \u4e0b\uff0cNocalhost \u505a\u7684\u5176\u4ed6\u53d8\u52a8\uff0c\u8bf7\u67e5\u770b\uff1a DevMode","title":"\u5982\u4f55\u914d\u7f6e DevContainer"},{"location":"zh/Concepts/devcontainer/#nocalhost-devcontainer-image","text":"https://github.com/nocalhost/dev-container","title":"Nocalhost \u63d0\u4f9b\u7684 DevContainer Image"},{"location":"zh/Concepts/devcontainer/#devcontainer-image","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 Docker Image \u6765\u4f5c\u4e3a DevContainer Image\uff0c\u53ea\u8981\u4ed6\u5305\u542b\u57fa\u672c\u7684 shell (/bin/sh) \u5373\u53ef\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4e3a\u7279\u5b9a\u6280\u672f\u6808\u7684\u670d\u52a1\u63d0\u4f9b\u4e13\u5c5e\u7684 DevContainer Image\u3002\u4e00\u4e2a\u597d\u7684 DevContainer Image \u5e94\u8be5\uff1a \u63d0\u4f9b\u6613\u7528\u7684 shell\uff0c\u5982\uff1abash,zsh \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u57fa\u7840 SDK\uff0c\u5982 JDK \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u5de5\u5177\u94fe\uff0c\u5982 git\uff0cmaven\uff0cyarn\uff0cmake \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u6216\u8005\u81ea\u52a8\u4e0b\u8f7d\u914d\u7f6e\uff0c\u5982\u914d\u7f6e Maven \u955c\u50cf\u6e90 \u63d0\u4f9b\u5f00\u53d1\u8fc7\u7a0b\u9700\u8981\u7684\u5176\u4ed6\u8c03\u8bd5\u5de5\u5177\uff0c\u5982 gdb\uff0ccurl\uff0ctcpdump\uff0cmysql-client \u7b49 \u4e0d\u8981\u5305\u542b\u670d\u52a1\u7684\u6e90\u4ee3\u7801\uff08\u6e90\u4ee3\u7801\u5e94\u8be5\u901a\u8fc7\u6e90\u7801\u7ba1\u7406\u7cfb\u7edf\u68c0\u51fa\u5230\u672c\u5730\uff0c\u5e76\u540c\u6b65\u5230 DevContainer \u4e2d\u3002\uff09","title":"\u5173\u4e8e DevContainer Image \u5236\u4f5c\u7684\u5efa\u8bae"},{"location":"zh/Concepts/devmode/","text":"\u4ec0\u4e48\u662f DevMode DevMode \u662f\u6307\u5f00\u53d1\u8005\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5fae\u670d\u52a1\u5f00\u53d1\u65f6\uff0c\u5bf9\u5e94\u5fae\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u4f1a\u88ab\u8f6c\u6210\u6210\u4e00\u79cd\u53ef\u65b9\u4fbf\u652f\u6301\u5f00\u53d1\u8005\u5f00\u53d1\u8c03\u8bd5\u7a0b\u5e8f\u7684\u6a21\u5f0f\u3002 TODO \u8865\u4e00\u4e2a\u914d\u56fe DevMode \u76f8\u6bd4\u4e8e\u975e DevMode \u6709\u4ec0\u4e48\u53d8\u5316\uff1f \u5f53\u524d Nocalhost \u57fa\u4e8e Kubernetes \u7684\u5f00\u53d1\u652f\u6301\u4e2d\uff0cDevMode \u7684\u4e3b\u8981\u53d8\u5316\u4e3a\u5982\u4e0b\uff1a \u5de5\u4f5c\u8d1f\u8f7d\u7684\u526f\u672c\u6570\u91cf\u4f1a\u88ab\u8c03\u6574\u4e3a 1\uff0c\u65b9\u4fbf\u5f00\u53d1 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u63a2\u9488\u4f1a\u88ab\u7981\u7528\uff08\u65b9\u4fbf\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u91cd\u542f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5\uff09 Pod \u7684\u5bb9\u5668\u4f1a\u88ab\u66ff\u6362\u6210 DevContainer SecurityContext \u4f1a\u88ab\u7981\u7528\u4ee5\u65b9\u4fbf\u5f00\u53d1 Pod \u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a Nocalhost-Sidecar \u5bb9\u5668\u4ee5\u652f\u6301\u8fdc\u7a0b\u6587\u4ef6\u540c\u6b65\u7b49 Pod \u4f1a\u88ab\u589e\u52a0\u4e00\u4e2a Volume \u4ee5\u652f\u6301 DevContainer \u548c Nocalhost-Sidecar \u95f4\u5171\u4eab\u6587\u4ef6 \u5982\u4f55\u8f6c\u6362\u4e3a DevMode\uff1f\u5982\u4f55\u9000\u51fa DevMode \u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002 \u5982\u4f55\u67e5\u770b\u5f53\u524d\u670d\u52a1\u662f\u5426\u4e3a DevMode \u4f7f\u7528 nhctl \u67e5\u770b DevMode \u7684\u72b6\u6001 nhctl list <application_name> \u5728\u63d2\u4ef6\u7aef\u67e5\u770b DevMode \u7684\u72b6\u6001","title":"DevMode"},{"location":"zh/Concepts/devmode/#devmode","text":"DevMode \u662f\u6307\u5f00\u53d1\u8005\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5fae\u670d\u52a1\u5f00\u53d1\u65f6\uff0c\u5bf9\u5e94\u5fae\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u4f1a\u88ab\u8f6c\u6210\u6210\u4e00\u79cd\u53ef\u65b9\u4fbf\u652f\u6301\u5f00\u53d1\u8005\u5f00\u53d1\u8c03\u8bd5\u7a0b\u5e8f\u7684\u6a21\u5f0f\u3002 TODO \u8865\u4e00\u4e2a\u914d\u56fe","title":"\u4ec0\u4e48\u662f DevMode"},{"location":"zh/Concepts/devmode/#devmode-devmode","text":"\u5f53\u524d Nocalhost \u57fa\u4e8e Kubernetes \u7684\u5f00\u53d1\u652f\u6301\u4e2d\uff0cDevMode \u7684\u4e3b\u8981\u53d8\u5316\u4e3a\u5982\u4e0b\uff1a \u5de5\u4f5c\u8d1f\u8f7d\u7684\u526f\u672c\u6570\u91cf\u4f1a\u88ab\u8c03\u6574\u4e3a 1\uff0c\u65b9\u4fbf\u5f00\u53d1 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u63a2\u9488\u4f1a\u88ab\u7981\u7528\uff08\u65b9\u4fbf\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u91cd\u542f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5\uff09 Pod \u7684\u5bb9\u5668\u4f1a\u88ab\u66ff\u6362\u6210 DevContainer SecurityContext \u4f1a\u88ab\u7981\u7528\u4ee5\u65b9\u4fbf\u5f00\u53d1 Pod \u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a Nocalhost-Sidecar \u5bb9\u5668\u4ee5\u652f\u6301\u8fdc\u7a0b\u6587\u4ef6\u540c\u6b65\u7b49 Pod \u4f1a\u88ab\u589e\u52a0\u4e00\u4e2a Volume \u4ee5\u652f\u6301 DevContainer \u548c Nocalhost-Sidecar \u95f4\u5171\u4eab\u6587\u4ef6","title":"DevMode \u76f8\u6bd4\u4e8e\u975e DevMode \u6709\u4ec0\u4e48\u53d8\u5316\uff1f"},{"location":"zh/Concepts/devmode/#devmode-devmode_1","text":"\u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002","title":"\u5982\u4f55\u8f6c\u6362\u4e3a DevMode\uff1f\u5982\u4f55\u9000\u51fa DevMode"},{"location":"zh/Concepts/devmode/#devmode_1","text":"\u4f7f\u7528 nhctl \u67e5\u770b DevMode \u7684\u72b6\u6001 nhctl list <application_name> \u5728\u63d2\u4ef6\u7aef\u67e5\u770b DevMode \u7684\u72b6\u6001","title":"\u5982\u4f55\u67e5\u770b\u5f53\u524d\u670d\u52a1\u662f\u5426\u4e3a DevMode"},{"location":"zh/Concepts/devspace/","text":"\u4ec0\u4e48\u662f DevSpace DevSpace \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5176\u4ee3\u8868\u7531 Nocalhost \u7ba1\u7406\u7684\u4e00\u4e2a\u9884\u5206\u914d\u7684\u4e91\u7aef\u5f00\u53d1\u7684\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevSpace \u4e2d\u968f\u65f6\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002DevSpace \u4e4b\u95f4\u662f\u9694\u79bb\u7684\uff0c\u672a\u6765 Nocalhost \u4e5f\u652f\u6301\u8ba9\u5f00\u53d1\u8005\u628a\u81ea\u5df1\u7684 DevSpace \u5171\u4eab\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u5b9e\u73b0\u5f00\u53d1\u534f\u4f5c\u3002\u56e0\u4e3a DevSpace \u7684\u9694\u79bb\u6027\uff0c\u4e5f\u53ef\u4ee5\u88ab\u7528\u4f5c\u6d4b\u8bd5\u73af\u5883\u3002 \u5f53\u524d\uff0cNocalhost \u652f\u6301\u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\uff0c\u5728 Kubernetes \u4f53\u7cfb\u4e0b\uff0c DevSpace \u7531\u4e00\u4e2a Kubernetes Namespace \u548c \u5bf9\u5e94 Namespace \u7684 ServiceAccount \u7ec4\u6210\u3002\u6b64\u5916\uff0c\u76ee\u524d DevSpace \u4ec5\u5173\u8054\u4e00\u4e2a\u5e94\u7528\u548c\u4e00\u4e2a\u5f00\u53d1\u8005\uff0c\u5728\u521b\u5efa DevSpace \u7684\u65f6\u5019\uff0c\u5fc5\u987b\u6307\u5b9a DevSpace \u6240\u5728\u7684\u96c6\u7fa4\u3001\u6240\u5c5e\u7684\u5f00\u53d1\u8005\u548c\u5173\u8054\u7684\u5e94\u7528\u3002 \u7ba1\u7406\u8005\u5982\u4f55\u7ba1\u7406 DevSpace Nocalhost \u63d0\u4f9b\u4e86 web \u63a7\u5236\u53f0\uff0c\u7528\u4e8e\u7ed9\u7ba1\u7406\u5458\u521b\u5efa\u3001\u5220\u9664 DevSpace\u3002 \u5f00\u53d1\u8005\u5982\u4f55\u4f7f\u7528 DevSpace \u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002","title":"DevSpace"},{"location":"zh/Concepts/devspace/#devspace","text":"DevSpace \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5176\u4ee3\u8868\u7531 Nocalhost \u7ba1\u7406\u7684\u4e00\u4e2a\u9884\u5206\u914d\u7684\u4e91\u7aef\u5f00\u53d1\u7684\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevSpace \u4e2d\u968f\u65f6\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002DevSpace \u4e4b\u95f4\u662f\u9694\u79bb\u7684\uff0c\u672a\u6765 Nocalhost \u4e5f\u652f\u6301\u8ba9\u5f00\u53d1\u8005\u628a\u81ea\u5df1\u7684 DevSpace \u5171\u4eab\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u5b9e\u73b0\u5f00\u53d1\u534f\u4f5c\u3002\u56e0\u4e3a DevSpace \u7684\u9694\u79bb\u6027\uff0c\u4e5f\u53ef\u4ee5\u88ab\u7528\u4f5c\u6d4b\u8bd5\u73af\u5883\u3002 \u5f53\u524d\uff0cNocalhost \u652f\u6301\u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\uff0c\u5728 Kubernetes \u4f53\u7cfb\u4e0b\uff0c DevSpace \u7531\u4e00\u4e2a Kubernetes Namespace \u548c \u5bf9\u5e94 Namespace \u7684 ServiceAccount \u7ec4\u6210\u3002\u6b64\u5916\uff0c\u76ee\u524d DevSpace \u4ec5\u5173\u8054\u4e00\u4e2a\u5e94\u7528\u548c\u4e00\u4e2a\u5f00\u53d1\u8005\uff0c\u5728\u521b\u5efa DevSpace \u7684\u65f6\u5019\uff0c\u5fc5\u987b\u6307\u5b9a DevSpace \u6240\u5728\u7684\u96c6\u7fa4\u3001\u6240\u5c5e\u7684\u5f00\u53d1\u8005\u548c\u5173\u8054\u7684\u5e94\u7528\u3002","title":"\u4ec0\u4e48\u662f DevSpace"},{"location":"zh/Concepts/devspace/#devspace_1","text":"Nocalhost \u63d0\u4f9b\u4e86 web \u63a7\u5236\u53f0\uff0c\u7528\u4e8e\u7ed9\u7ba1\u7406\u5458\u521b\u5efa\u3001\u5220\u9664 DevSpace\u3002","title":"\u7ba1\u7406\u8005\u5982\u4f55\u7ba1\u7406 DevSpace"},{"location":"zh/Concepts/devspace/#devspace_2","text":"\u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002","title":"\u5f00\u53d1\u8005\u5982\u4f55\u4f7f\u7528 DevSpace"},{"location":"zh/Concepts/service/","text":"\u4ec0\u4e48\u662f Service Service \u4e0e kubernetes \u7684 svc \u5b8c\u5168\u4e0d\u540c\uff0c Service \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5bf9 Deployment \u7684\u589e\u5f3a\uff0c\u5bf9\u5e94\u6211\u4eec\u5e94\u7528\u4e2d\u7684\u4e00\u4e2a\u5177\u4f53\u670d\u52a1\uff0c Service \u76ee\u524d\u652f\u6301\u4e24\u79cd\u529f\u80fd\uff1a \u5bf9 Nocalhost Dev-Mode \u7684\u914d\u7f6e\uff0c\u4f8b\u5982\u8fdb\u5165\u5f00\u53d1\u5bb9\u5668\u540e\u7684\u5de5\u4f5c\u7a7a\u95f4\u662f\u54ea\u4e2a\uff0c\u5c06\u54ea\u4e9b\u6587\u4ef6\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u7b49\u3002 \u652f\u6301\u57fa\u4e8e\u4f9d\u8d56\u5173\u7cfb\u7684 deployment \u542f\u52a8\u987a\u5e8f\u63a7\u5236 \u8fd9\u4e9b\u914d\u7f6e\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff01\u5b8c\u5168\u4e0d\u8fdb\u884c\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u7167\u5e38\u521b\u5efa Application \u3001 Cluster \u7b49\u7b49\uff0c\u4e5f\u53ef\u4ee5\u7167\u5e38\u90e8\u7f72\u4f60\u7684\u5e94\u7528\uff0c Service \u53ea\u5728\u4f60\u6709\u9700\u8981\u65f6\u624d\u9700\u8981\u914d\u7f6e\u3002 \u4f8b\u5982\uff0c Nocalhost \u652f\u6301\u63a7\u5236\u4e00\u4e2a\u8d44\u6e90\u7684\u542f\u52a8\u987a\u5e8f\uff0c\u4f8b\u5982\u67d0\u4e2a deployment \u5fc5\u987b\u4f9d\u8d56\u4e8e\u67d0\u4e2a k8s job \u6267\u884c\u5b8c\u6bd5\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728 config.yaml \u505a\u5982\u4e0b\u914d\u7f6e\uff1a services: - name: details type: deployment dependJobsLabelSelector: - \"dep-job\" \u8fd9\u8868\u793a\u4f60 kind: Deployment name: Deployment \u7684\u8fd9\u4e2a\u8d44\u6e90 detail.yaml \uff0c\u5c06\u4f9d\u8d56\u4e8e\u4e00\u4e2a name: dep-job \u7684\u4efb\u52a1 dep-job.yaml \u6267\u884c\u5b8c\u6bd5\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: details Service \u63d0\u4f9b\u7684\u529f\u80fd 1. \u5bf9\u5f00\u53d1\u6a21\u5f0f\u7684\u652f\u6301 \u524d\u9762\u8bf4\u5230 Service \u627f\u62c5\u4e24\u79cd\u89d2\u8272\uff0c\u5176\u4e00\u662f\u5bf9\u5f00\u53d1\u6a21\u5f0f\u7684\u652f\u6301\uff0c\u6211\u4eec\u4ee5\u5982\u4e0b\u8fd9\u4e2a\u914d\u7f6e\u4e3a\u4f8b\uff0c\u9010\u4e2a\u8bf4\u660e\uff1a services: - name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: - ./ devPorts: - 39080:9080 name \u4e0e serviceType \u5f53\u4f60\u60f3\u4f7f\u7528 service \u65f6\uff0c name \u4e0e serviceType \u662f\u5fc5\u586b\u9879\uff0c\u7528\u4e8e\u5b9a\u4f4d\u5230\u67d0\u4e2a manifest\uff0c\u76ee\u524d\u53ea\u652f\u6301 deployment \u8fd9\u79cd serviceType \u4f8b\u5982\u5f53\u524d\u6709\u4e00\u4e2a Deployment \uff0c\u540d\u5b57\u4e3a details\uff1a kind: Deployment metadata: name: details \u60f3\u8981\u5bf9\u5b83\u8fdb\u884c\u914d\u7f6e\uff0c\u5219\u9700\u8981\u5728 config.yaml \u5185\u7684 services \u4e0b\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a - name: productpage serviceType: deployment devContainerImage \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u6240\u4f7f\u7528\u7684\u5bb9\u5668\uff0c\u542f\u52a8 DevMode \u65f6\uff0c\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u7528\u5f00\u53d1\u5bb9\u5668\u6765\u66ff\u6362\u6389\u76ee\u6807\u955c\u50cf\u3002\u6211\u4eec\u4f1a\u4e3a\u5927\u591a\u6570\u5f00\u53d1\u8bed\u8a00\u63d0\u4f9b\u9ed8\u8ba4\u7684\u5f00\u53d1\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u91cc\u9762\u901a\u5e38\u5305\u542b\u4e00\u4e9b\u5e38\u7528\u7684\u8c03\u8bd5\u5de5\u5177\u548c\u5e38\u7528\u5e93\u3002 \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u955c\u50cf\uff0c\u5982\uff1a services: - name: productpage serviceType: deployment devContainerImage: foo/bar/python:dev gitUrl \u7528\u4e8e\u6807\u660e\u4e0e\u6b64 Service \u5bf9\u5e94\u7684\u6e90\u7801\u5730\u5740\uff0c\u5728\u8fdb\u5165 Dev-Mode \u65f6\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u5c06\u672c\u5730\u67d0\u4e2a\u76ee\u5f55\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4ece git \u4ed3\u5e93\u62c9\u53d6\uff0c\u6b64\u65f6\u5982\u679c\u4f60\u5df2\u7ecf\u914d\u7f6e\u4e86 gitUrl \uff0c \u6211\u4eec\u4f1a\u81ea\u52a8\u5e2e\u4f60\u4ece\u8fd9\u4e2a gitUrl \u68c0\u51fa\u4ee3\u7801\u3002 syncDirs \u53ef\u9009\u9879\uff0c\u6570\u7ec4\u7c7b\u578b\uff0c\u9009\u62e9\u5c06\u6e90\u7801\u76ee\u5f55\u7684\u54ea\u4e9b\u6587\u4ef6\u5939\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u9ed8\u8ba4\u4e3a . \uff0c\u65e2\u6240\u6709\u3002 services: - name: productpage serviceType: deployment syncDirs: - foo/ - bar/ workDir \u8fd9\u662f\u4e00\u4e2a\u53ef\u9009\u9879\uff0c\u7528\u4e8e\u6807\u660e\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4ee5\u53ca\u540c\u6b65\u6587\u4ef6\u6240\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5c06\u4f7f\u7528 /home/nocalhost-dev devPorts \u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\uff0c\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u5176\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7aef\u53e3\u4e0a\uff0c\u683c\u5f0f\u4e3a localPort:remotePort \uff0c\u5982\uff1a services: - name: productpage serviceType: deployment devPorts: 8080:10000 \u4e5f\u53ef\u4ee5\u652f\u6301 :10000 \u8fd9\u79cd\u5199\u6cd5\uff0c\u5c06\u968f\u673a\u8f6c\u53d1\u5230\u672c\u5730\u7684\u67d0\u4e2a\u7aef\u53e3\u3002 2. \u542f\u52a8\u987a\u5e8f\u4f9d\u8d56\u5173\u7cfb\u7684\u6307\u5b9a dependPodsLabelSelector \u8868\u793a\u7b49\u5f85\u81f3\u5c11\u4e00\u4e2a\u62e5\u6709\u6b64 label \u7684 pod \u5904\u4e8e RUNNING \u72b6\u6001\uff0c\u5426\u5219\u6b64 Service \u5c06\u5904\u4e8e init Container \u72b6\u6001\u3002\u4f8b\u5982\u4e00\u4e2a\u670d\u52a1\uff0c\u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u670d\u52a1 foo\uff1a apiVersion: apps/v1 kind: Deployment metadata: labels: app: foo \u90a3\u4e48\u53ef\u4ee5\u5bf9\u8fd9\u4e2a service \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a services: - name: productpage serviceType: deployment dependPodsLabelSelector: - \"app=foo\" dependJobsLabelSelector \u8868\u793a\u7b49\u5f85\u81f3\u5c11\u62e5\u6709\u6b64 label \u7684 job \u5df2\u7ecf\u5b8c\u6210\u5e76\u5904\u4e8e Succeeded \u72b6\u6001\uff0c\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u4f9d\u8d56\uff0c\u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u4e00\u4e2a job\uff1a apiVersion: batch/v1 kind: Job metadata: labels: foo: bar \u540c\u6837\u53ef\u4ee5\u5bf9\u8fd9\u4e2a service \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a services: - name: productpage serviceType: deployment dependJobsLabelSelector: - \"foo=bar\" Service\u7684\u6700\u4f73\u5b9e\u8df5 1.\u5f00\u53d1\u6a21\u5f0f\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5 \u2014\u2014 \u4e0d\u9884\u5148\u8fdb\u884c\u4efb\u4f55 service \u914d\u7f6e \u524d\u9762\u8bf4\u5230 service \u5e76\u4e0d\u662f\u5fc5\u987b\u914d\u7f6e\u7684\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55 service \u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5f53\u4f60\u60f3\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c Nocalhost-Plug-In \u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff0c\u4f60\u53ea\u9700\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u5e76\u4fdd\u5b58\u5373\u53ef\u3002 \u70b9\u51fb\u5e26\u6709\u611f\u53f9\u53f7\u7684\u9f7f\u8f6e\uff0c\u6211\u4eec\u4f1a\u4e3a\u4f60\u751f\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff1a \u4fee\u6539\u5f00\u53d1\u955c\u50cf \u624b\u52a8\u4fee\u6539 devContainerImage \uff0c\u76ee\u524d\u6211\u4eec\u63d0\u4f9b python \u3001 golang \u3001 ruby \u3001 node \u3001 perl \u3001 rust \u3001 php \u3001 java \u8fd9\u51e0\u79cd\u9ed8\u8ba4\u7684\u5f00\u53d1\u955c\u50cf\u3002 \u955c\u50cf\u683c\u5f0f\u5982\u4e0b\uff1a codingcorp-docker.pkg.coding.net/nocalhost/dev-images/LANGUAGE:latest \u4f8b\u5982\u60f3\u8981\u4f7f\u7528 java \u7684\u9ed8\u8ba4\u955c\u50cf\uff0c\u5219\u4fee\u6539 devContainerImage \u4e3a codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest \u5373\u53ef\u3002\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4efb\u610f\u955c\u50cf\uff0c\u6211\u4eec\u4f1a\u9ed8\u8ba4\u4f7f\u7528 /bin/bash \u3001/bin/csh \u6216 /bin/sh \u4f5c\u4e3a\u9ed8\u8ba4\u547d\u4ee4\u6765\u8fdb\u5165\u6b64\u955c\u50cf\u3002 \u6307\u5b9a gitUrl \uff08\u53ef\u9009\uff09 \u5f53\u4f60\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u4e4b\u524d\uff0c Nocalhost-Plug-In \u4f1a\u8ba9\u4f60\u9009\u62e9\u4ece\u672c\u5730\u6307\u5b9a\u6e90\u7801\u76ee\u5f55\u6216\u8005\u4ece git \u68c0\u51fa\uff0c\u5982\u679c\u4f60\u672c\u5730\u5df2\u6709\u6b64 deployment \u7684\u6e90\u7801\uff0c\u5219\u4e0d\u9700\u8981\u8fdb\u884c gitUrl \u914d\u7f6e\uff0c\u76f4\u63a5\u9009\u62e9 Open local derectory \u5373\u53ef\u3002 \u53cd\u4e4b\uff0c\u5982\u679c\u4f60\u5e0c\u671b Nocalhost \u5e2e\u4f60\u8fdb\u884c\u68c0\u51fa\uff0c\u5219\u4fee\u6539 girUrl \u5230\u5bf9\u5e94\u503c\u3002 \u4fee\u6539 syncDirs \uff08\u53ef\u9009\uff09 \u5728\u9ed8\u8ba4\u63d0\u4f9b\u7684\u914d\u7f6e\u6a21\u677f\u4e2d\uff0c\u6211\u4eec\u4f1a\u81ea\u52a8\u586b\u5199\u540c\u6b65 git \u76ee\u5f55\uff08\u6216\u8005\u6240\u9009\u76ee\u5f55\uff09\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u5373 . \uff1a # dirs to sync, relative to the root dir of source code # type: string[] # default value: [\".\"] # optional syncDirs: - \".\" \u5982\u679c\u4f60\u53ea\u60f3\u540c\u6b65\u6307\u5b9a\u7684\u51e0\u4e2a\u76ee\u5f55\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff0c\u5982\uff1a syncDirs: - \"bar/\" - \"foo/\" \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u505a\u5b8c\u4e0a\u8ff0\u914d\u7f6e\u540e\uff0c\u70b9\u51fb\u9524\u5b50\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u914d\u7f6e\u4e2d\u6307\u5b9a\u7684\u955c\u50cf\u6765\u66ff\u6362\u6389\u539f\u6709\u7684\u955c\u50cf\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684\u6587\u4ef6\u540c\u6b65\u5230\u8fd9\u4e2a\u5bb9\u5668\u4e2d\u3002 2.\u5f00\u53d1\u6a21\u5f0f\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5 \u2014\u2014 \u5728 .nocalhost \u76ee\u5f55\u4e0b\u8fdb\u884c\u9ed8\u8ba4\u7684 service \u914d\u7f6e \u5982\u679c\u4f60\u5e0c\u671b\u7ef4\u62a4\u4e00\u4efd\u9ed8\u8ba4\u7684\u914d\u7f6e\uff0c\u5219\u5728 Application \u6240\u6307\u5b9a\u7684 git \u4ed3\u5e93\u4e2d\uff0c\u5728\u6839\u76ee\u5f55\u65b0\u589e .nocalhost \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6587\u4ef6\u3002 .nocalhost/ config.yaml README.MD kubemanifest/ xxx.yaml ... foo.java ... \u4f8b\u5982\uff1a services: - name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: - ./ devPorts: - 39080:9080 dependJobsLabelSelector: - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" Deployment \u8fdb\u884c\u4e86 service \u7684\u914d\u7f6e\uff0c\u5f53\u7528\u6237 Install \u6b64 Application \u65f6\uff0c\u4f1a\u62ff\u5230\u8fd9\u4e9b\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5982 'ratings' \u8fd9\u4e2a deployment \uff0c\u70b9\u51fb\u9f7f\u8f6e\u67e5\u770b\u5f53\u524d\u7684\u914d\u7f6e\uff1a \u7528\u6237\u53ef\u4ee5\u81ea\u7531\u7684\u57fa\u4e8e\u8fd9\u4e9b\u914d\u7f6e\u505a\u4fee\u6539\uff0c \u8fd9\u4e9b\u4fee\u6539\u4ec5\u5728\u672c\u5730\u751f\u6548\u3002","title":"Service"},{"location":"zh/Concepts/service/#service","text":"Service \u4e0e kubernetes \u7684 svc \u5b8c\u5168\u4e0d\u540c\uff0c Service \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5bf9 Deployment \u7684\u589e\u5f3a\uff0c\u5bf9\u5e94\u6211\u4eec\u5e94\u7528\u4e2d\u7684\u4e00\u4e2a\u5177\u4f53\u670d\u52a1\uff0c Service \u76ee\u524d\u652f\u6301\u4e24\u79cd\u529f\u80fd\uff1a \u5bf9 Nocalhost Dev-Mode \u7684\u914d\u7f6e\uff0c\u4f8b\u5982\u8fdb\u5165\u5f00\u53d1\u5bb9\u5668\u540e\u7684\u5de5\u4f5c\u7a7a\u95f4\u662f\u54ea\u4e2a\uff0c\u5c06\u54ea\u4e9b\u6587\u4ef6\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u7b49\u3002 \u652f\u6301\u57fa\u4e8e\u4f9d\u8d56\u5173\u7cfb\u7684 deployment \u542f\u52a8\u987a\u5e8f\u63a7\u5236 \u8fd9\u4e9b\u914d\u7f6e\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff01\u5b8c\u5168\u4e0d\u8fdb\u884c\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u7167\u5e38\u521b\u5efa Application \u3001 Cluster \u7b49\u7b49\uff0c\u4e5f\u53ef\u4ee5\u7167\u5e38\u90e8\u7f72\u4f60\u7684\u5e94\u7528\uff0c Service \u53ea\u5728\u4f60\u6709\u9700\u8981\u65f6\u624d\u9700\u8981\u914d\u7f6e\u3002 \u4f8b\u5982\uff0c Nocalhost \u652f\u6301\u63a7\u5236\u4e00\u4e2a\u8d44\u6e90\u7684\u542f\u52a8\u987a\u5e8f\uff0c\u4f8b\u5982\u67d0\u4e2a deployment \u5fc5\u987b\u4f9d\u8d56\u4e8e\u67d0\u4e2a k8s job \u6267\u884c\u5b8c\u6bd5\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728 config.yaml \u505a\u5982\u4e0b\u914d\u7f6e\uff1a services: - name: details type: deployment dependJobsLabelSelector: - \"dep-job\" \u8fd9\u8868\u793a\u4f60 kind: Deployment name: Deployment \u7684\u8fd9\u4e2a\u8d44\u6e90 detail.yaml \uff0c\u5c06\u4f9d\u8d56\u4e8e\u4e00\u4e2a name: dep-job \u7684\u4efb\u52a1 dep-job.yaml \u6267\u884c\u5b8c\u6bd5\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: details","title":"\u4ec0\u4e48\u662f Service"},{"location":"zh/Concepts/service/#service_1","text":"","title":"Service \u63d0\u4f9b\u7684\u529f\u80fd"},{"location":"zh/Concepts/service/#1","text":"\u524d\u9762\u8bf4\u5230 Service \u627f\u62c5\u4e24\u79cd\u89d2\u8272\uff0c\u5176\u4e00\u662f\u5bf9\u5f00\u53d1\u6a21\u5f0f\u7684\u652f\u6301\uff0c\u6211\u4eec\u4ee5\u5982\u4e0b\u8fd9\u4e2a\u914d\u7f6e\u4e3a\u4f8b\uff0c\u9010\u4e2a\u8bf4\u660e\uff1a services: - name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: - ./ devPorts: - 39080:9080","title":"1. \u5bf9\u5f00\u53d1\u6a21\u5f0f\u7684\u652f\u6301"},{"location":"zh/Concepts/service/#name-servicetype","text":"\u5f53\u4f60\u60f3\u4f7f\u7528 service \u65f6\uff0c name \u4e0e serviceType \u662f\u5fc5\u586b\u9879\uff0c\u7528\u4e8e\u5b9a\u4f4d\u5230\u67d0\u4e2a manifest\uff0c\u76ee\u524d\u53ea\u652f\u6301 deployment \u8fd9\u79cd serviceType \u4f8b\u5982\u5f53\u524d\u6709\u4e00\u4e2a Deployment \uff0c\u540d\u5b57\u4e3a details\uff1a kind: Deployment metadata: name: details \u60f3\u8981\u5bf9\u5b83\u8fdb\u884c\u914d\u7f6e\uff0c\u5219\u9700\u8981\u5728 config.yaml \u5185\u7684 services \u4e0b\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a - name: productpage serviceType: deployment","title":"name \u4e0e serviceType"},{"location":"zh/Concepts/service/#devcontainerimage","text":"\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u6240\u4f7f\u7528\u7684\u5bb9\u5668\uff0c\u542f\u52a8 DevMode \u65f6\uff0c\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u7528\u5f00\u53d1\u5bb9\u5668\u6765\u66ff\u6362\u6389\u76ee\u6807\u955c\u50cf\u3002\u6211\u4eec\u4f1a\u4e3a\u5927\u591a\u6570\u5f00\u53d1\u8bed\u8a00\u63d0\u4f9b\u9ed8\u8ba4\u7684\u5f00\u53d1\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u91cc\u9762\u901a\u5e38\u5305\u542b\u4e00\u4e9b\u5e38\u7528\u7684\u8c03\u8bd5\u5de5\u5177\u548c\u5e38\u7528\u5e93\u3002 \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u955c\u50cf\uff0c\u5982\uff1a services: - name: productpage serviceType: deployment devContainerImage: foo/bar/python:dev","title":"devContainerImage"},{"location":"zh/Concepts/service/#giturl","text":"\u7528\u4e8e\u6807\u660e\u4e0e\u6b64 Service \u5bf9\u5e94\u7684\u6e90\u7801\u5730\u5740\uff0c\u5728\u8fdb\u5165 Dev-Mode \u65f6\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u5c06\u672c\u5730\u67d0\u4e2a\u76ee\u5f55\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4ece git \u4ed3\u5e93\u62c9\u53d6\uff0c\u6b64\u65f6\u5982\u679c\u4f60\u5df2\u7ecf\u914d\u7f6e\u4e86 gitUrl \uff0c \u6211\u4eec\u4f1a\u81ea\u52a8\u5e2e\u4f60\u4ece\u8fd9\u4e2a gitUrl \u68c0\u51fa\u4ee3\u7801\u3002","title":"gitUrl"},{"location":"zh/Concepts/service/#syncdirs","text":"\u53ef\u9009\u9879\uff0c\u6570\u7ec4\u7c7b\u578b\uff0c\u9009\u62e9\u5c06\u6e90\u7801\u76ee\u5f55\u7684\u54ea\u4e9b\u6587\u4ef6\u5939\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u9ed8\u8ba4\u4e3a . \uff0c\u65e2\u6240\u6709\u3002 services: - name: productpage serviceType: deployment syncDirs: - foo/ - bar/","title":"syncDirs"},{"location":"zh/Concepts/service/#workdir","text":"\u8fd9\u662f\u4e00\u4e2a\u53ef\u9009\u9879\uff0c\u7528\u4e8e\u6807\u660e\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4ee5\u53ca\u540c\u6b65\u6587\u4ef6\u6240\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5c06\u4f7f\u7528 /home/nocalhost-dev","title":"workDir"},{"location":"zh/Concepts/service/#devports","text":"\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\uff0c\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u5176\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7aef\u53e3\u4e0a\uff0c\u683c\u5f0f\u4e3a localPort:remotePort \uff0c\u5982\uff1a services: - name: productpage serviceType: deployment devPorts: 8080:10000 \u4e5f\u53ef\u4ee5\u652f\u6301 :10000 \u8fd9\u79cd\u5199\u6cd5\uff0c\u5c06\u968f\u673a\u8f6c\u53d1\u5230\u672c\u5730\u7684\u67d0\u4e2a\u7aef\u53e3\u3002","title":"devPorts"},{"location":"zh/Concepts/service/#2","text":"","title":"2. \u542f\u52a8\u987a\u5e8f\u4f9d\u8d56\u5173\u7cfb\u7684\u6307\u5b9a"},{"location":"zh/Concepts/service/#dependpodslabelselector","text":"\u8868\u793a\u7b49\u5f85\u81f3\u5c11\u4e00\u4e2a\u62e5\u6709\u6b64 label \u7684 pod \u5904\u4e8e RUNNING \u72b6\u6001\uff0c\u5426\u5219\u6b64 Service \u5c06\u5904\u4e8e init Container \u72b6\u6001\u3002\u4f8b\u5982\u4e00\u4e2a\u670d\u52a1\uff0c\u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u670d\u52a1 foo\uff1a apiVersion: apps/v1 kind: Deployment metadata: labels: app: foo \u90a3\u4e48\u53ef\u4ee5\u5bf9\u8fd9\u4e2a service \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a services: - name: productpage serviceType: deployment dependPodsLabelSelector: - \"app=foo\"","title":"dependPodsLabelSelector"},{"location":"zh/Concepts/service/#dependjobslabelselector","text":"\u8868\u793a\u7b49\u5f85\u81f3\u5c11\u62e5\u6709\u6b64 label \u7684 job \u5df2\u7ecf\u5b8c\u6210\u5e76\u5904\u4e8e Succeeded \u72b6\u6001\uff0c\u540c\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u4f9d\u8d56\uff0c\u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u4e00\u4e2a job\uff1a apiVersion: batch/v1 kind: Job metadata: labels: foo: bar \u540c\u6837\u53ef\u4ee5\u5bf9\u8fd9\u4e2a service \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a services: - name: productpage serviceType: deployment dependJobsLabelSelector: - \"foo=bar\"","title":"dependJobsLabelSelector"},{"location":"zh/Concepts/service/#service_2","text":"","title":"Service\u7684\u6700\u4f73\u5b9e\u8df5"},{"location":"zh/Concepts/service/#1-service","text":"\u524d\u9762\u8bf4\u5230 service \u5e76\u4e0d\u662f\u5fc5\u987b\u914d\u7f6e\u7684\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55 service \u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5f53\u4f60\u60f3\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c Nocalhost-Plug-In \u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff0c\u4f60\u53ea\u9700\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u5e76\u4fdd\u5b58\u5373\u53ef\u3002 \u70b9\u51fb\u5e26\u6709\u611f\u53f9\u53f7\u7684\u9f7f\u8f6e\uff0c\u6211\u4eec\u4f1a\u4e3a\u4f60\u751f\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff1a","title":"1.\u5f00\u53d1\u6a21\u5f0f\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5 \u2014\u2014 \u4e0d\u9884\u5148\u8fdb\u884c\u4efb\u4f55 service \u914d\u7f6e"},{"location":"zh/Concepts/service/#_1","text":"\u624b\u52a8\u4fee\u6539 devContainerImage \uff0c\u76ee\u524d\u6211\u4eec\u63d0\u4f9b python \u3001 golang \u3001 ruby \u3001 node \u3001 perl \u3001 rust \u3001 php \u3001 java \u8fd9\u51e0\u79cd\u9ed8\u8ba4\u7684\u5f00\u53d1\u955c\u50cf\u3002 \u955c\u50cf\u683c\u5f0f\u5982\u4e0b\uff1a codingcorp-docker.pkg.coding.net/nocalhost/dev-images/LANGUAGE:latest \u4f8b\u5982\u60f3\u8981\u4f7f\u7528 java \u7684\u9ed8\u8ba4\u955c\u50cf\uff0c\u5219\u4fee\u6539 devContainerImage \u4e3a codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest \u5373\u53ef\u3002\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4efb\u610f\u955c\u50cf\uff0c\u6211\u4eec\u4f1a\u9ed8\u8ba4\u4f7f\u7528 /bin/bash \u3001/bin/csh \u6216 /bin/sh \u4f5c\u4e3a\u9ed8\u8ba4\u547d\u4ee4\u6765\u8fdb\u5165\u6b64\u955c\u50cf\u3002","title":"\u4fee\u6539\u5f00\u53d1\u955c\u50cf"},{"location":"zh/Concepts/service/#giturl_1","text":"\u5f53\u4f60\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u4e4b\u524d\uff0c Nocalhost-Plug-In \u4f1a\u8ba9\u4f60\u9009\u62e9\u4ece\u672c\u5730\u6307\u5b9a\u6e90\u7801\u76ee\u5f55\u6216\u8005\u4ece git \u68c0\u51fa\uff0c\u5982\u679c\u4f60\u672c\u5730\u5df2\u6709\u6b64 deployment \u7684\u6e90\u7801\uff0c\u5219\u4e0d\u9700\u8981\u8fdb\u884c gitUrl \u914d\u7f6e\uff0c\u76f4\u63a5\u9009\u62e9 Open local derectory \u5373\u53ef\u3002 \u53cd\u4e4b\uff0c\u5982\u679c\u4f60\u5e0c\u671b Nocalhost \u5e2e\u4f60\u8fdb\u884c\u68c0\u51fa\uff0c\u5219\u4fee\u6539 girUrl \u5230\u5bf9\u5e94\u503c\u3002","title":"\u6307\u5b9a gitUrl \uff08\u53ef\u9009\uff09"},{"location":"zh/Concepts/service/#syncdirs_1","text":"\u5728\u9ed8\u8ba4\u63d0\u4f9b\u7684\u914d\u7f6e\u6a21\u677f\u4e2d\uff0c\u6211\u4eec\u4f1a\u81ea\u52a8\u586b\u5199\u540c\u6b65 git \u76ee\u5f55\uff08\u6216\u8005\u6240\u9009\u76ee\u5f55\uff09\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u5373 . \uff1a # dirs to sync, relative to the root dir of source code # type: string[] # default value: [\".\"] # optional syncDirs: - \".\" \u5982\u679c\u4f60\u53ea\u60f3\u540c\u6b65\u6307\u5b9a\u7684\u51e0\u4e2a\u76ee\u5f55\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff0c\u5982\uff1a syncDirs: - \"bar/\" - \"foo/\"","title":"\u4fee\u6539 syncDirs \uff08\u53ef\u9009\uff09"},{"location":"zh/Concepts/service/#_2","text":"\u505a\u5b8c\u4e0a\u8ff0\u914d\u7f6e\u540e\uff0c\u70b9\u51fb\u9524\u5b50\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u914d\u7f6e\u4e2d\u6307\u5b9a\u7684\u955c\u50cf\u6765\u66ff\u6362\u6389\u539f\u6709\u7684\u955c\u50cf\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684\u6587\u4ef6\u540c\u6b65\u5230\u8fd9\u4e2a\u5bb9\u5668\u4e2d\u3002","title":"\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f"},{"location":"zh/Concepts/service/#2-nocalhost-service","text":"\u5982\u679c\u4f60\u5e0c\u671b\u7ef4\u62a4\u4e00\u4efd\u9ed8\u8ba4\u7684\u914d\u7f6e\uff0c\u5219\u5728 Application \u6240\u6307\u5b9a\u7684 git \u4ed3\u5e93\u4e2d\uff0c\u5728\u6839\u76ee\u5f55\u65b0\u589e .nocalhost \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6587\u4ef6\u3002 .nocalhost/ config.yaml README.MD kubemanifest/ xxx.yaml ... foo.java ... \u4f8b\u5982\uff1a services: - name: productpage serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage workDir: /home/nocalhost-dev syncDirs: - ./ devPorts: - 39080:9080 dependJobsLabelSelector: - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" Deployment \u8fdb\u884c\u4e86 service \u7684\u914d\u7f6e\uff0c\u5f53\u7528\u6237 Install \u6b64 Application \u65f6\uff0c\u4f1a\u62ff\u5230\u8fd9\u4e9b\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5982 'ratings' \u8fd9\u4e2a deployment \uff0c\u70b9\u51fb\u9f7f\u8f6e\u67e5\u770b\u5f53\u524d\u7684\u914d\u7f6e\uff1a \u7528\u6237\u53ef\u4ee5\u81ea\u7531\u7684\u57fa\u4e8e\u8fd9\u4e9b\u914d\u7f6e\u505a\u4fee\u6539\uff0c \u8fd9\u4e9b\u4fee\u6539\u4ec5\u5728\u672c\u5730\u751f\u6548\u3002","title":"2.\u5f00\u53d1\u6a21\u5f0f\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5 \u2014\u2014 \u5728 .nocalhost \u76ee\u5f55\u4e0b\u8fdb\u884c\u9ed8\u8ba4\u7684 service \u914d\u7f6e"},{"location":"zh/Concepts/user/","text":"\u4ec0\u4e48\u662f User \u5f53\u4f60\u4f7f\u7528 Nocalhost-Server \uff0c\u4ee5\u53ca Nocalhost-Plug-In \u65f6\uff0c User \u7528\u4e8e\u6807\u660e\u4f60\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u5bf9\u8d44\u6e90\u8bbf\u95ee\u7684\u63a7\u5236\u3002\u8fd9\u4e2a User \u5c5e\u4e8e Nocalhost \u7684\u72ec\u7acb\u6982\u5ff5\uff0c\u4e0e kubernetes \u672c\u8eab\u5e76\u65e0\u5173\u8054\u3002 User \u662f\u505a\u4ec0\u4e48\u7684 Nocalhost \u4e2d\u5b58\u5728\u4e24\u79cd User \u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u666e\u901a\u7528\u6237\uff0c\u666e\u901a\u7528\u6237\u53ea\u80fd\u5728 IDE Plugin \u8fdb\u884c\u767b\u5f55\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u7684 DevSpace \u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e9b DevSpace \u90fd\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u8fdb\u884c\u521b\u5efa\u3002 \u53e6\u4e00\u79cd\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u4f8b\u5982\u521d\u59cb\u7684 admin@admin.com \uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u8bbf\u95ee Nocalhost-Web \u7684\u6743\u9650\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u5728 Nocalhost-Web \u4e2d\u7684\u6240\u6709\u6743\u9650\uff0c\u5982\u521b\u5efa Application \u3001\u521b\u5efa Cluster \u3001\u521b\u5efa User \u548c\u521b\u5efa Space \u7b49\u3002\u540c\u6837\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u4e5f\u62e5\u6709\u666e\u901a\u7528\u6237\u6240\u6709\u7684\u6743\u9650\uff0c\u5982\u53ef\u4ee5\u5728 Nocalhost-Plug-In \u8fdb\u884c\u767b\u5f55\uff0c\u83b7\u53d6\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u8fdb\u884c\u5f00\u53d1\u3002 User \u7684\u6743\u9650 \u666e\u901a\u7684 User \u53ea\u80fd\u770b\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684 DevSpace \uff0c\u5e76\u4e14\u62e5\u6709\u8fd9\u4e9b DevSpace \u4e0b\u7684\u6240\u6709\u6743\u9650\uff0c\u4f8b\u5982\u5bf9 DevSpace \u4e0b\u76f8\u5e94 Application \u7684 install \u3001 unInstall \uff08\u90e8\u7f72\u4e0e\u9500\u6bc1\uff09\u3001\u53ef\u4ee5\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u3001\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1\u7b49\u3002 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4e5f\u4f1a\u4e3a\u8fd9\u4e2a User \u521b\u5efa\u6bcf\u4e2a DevSpace \u5bf9\u5e94\u7684 namespace \u7684 kubeconfig \uff0c\u7528\u4e8e\u8bbf\u95ee\u6b64 namespace \u4e0b\u7684\u6240\u6709\u8d44\u6e90\u3002 \u4f8b\u5982\u5f53\u524d\u5728 VSCode Plugin \u767b\u5f55\u7684\u8fd9\u4e2a\u7528\u6237\u62e5\u6709 \"bookinfo\" \u548c \"test\" \u8fd9\u4e24\u4e2a DevSpace \u7684\u6743\u9650\u3002 \u4e0d\u8fc7\u666e\u901a\u7528\u6237\u65e0\u6cd5\u8fdb\u5165 Nocalhost-Web \uff0c\u4e5f\u65e0\u6cd5\u5220\u9664\u8fd9\u4e2a DevSpace \u672c\u8eab\uff0c\u6216\u8005\u4e0e\u8fd9\u4e2a DevSpace \u89e3\u9664\u5173\u7cfb\uff0c\u8fd9\u5f88\u50cf k8s \u67d0\u4e2a namespace \u4e0b\u7684 admin \u6743\u9650\u3002","title":"User"},{"location":"zh/Concepts/user/#user","text":"\u5f53\u4f60\u4f7f\u7528 Nocalhost-Server \uff0c\u4ee5\u53ca Nocalhost-Plug-In \u65f6\uff0c User \u7528\u4e8e\u6807\u660e\u4f60\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u5bf9\u8d44\u6e90\u8bbf\u95ee\u7684\u63a7\u5236\u3002\u8fd9\u4e2a User \u5c5e\u4e8e Nocalhost \u7684\u72ec\u7acb\u6982\u5ff5\uff0c\u4e0e kubernetes \u672c\u8eab\u5e76\u65e0\u5173\u8054\u3002","title":"\u4ec0\u4e48\u662f User"},{"location":"zh/Concepts/user/#user_1","text":"Nocalhost \u4e2d\u5b58\u5728\u4e24\u79cd User \u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u666e\u901a\u7528\u6237\uff0c\u666e\u901a\u7528\u6237\u53ea\u80fd\u5728 IDE Plugin \u8fdb\u884c\u767b\u5f55\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u7684 DevSpace \u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e9b DevSpace \u90fd\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u8fdb\u884c\u521b\u5efa\u3002 \u53e6\u4e00\u79cd\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u4f8b\u5982\u521d\u59cb\u7684 admin@admin.com \uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u8bbf\u95ee Nocalhost-Web \u7684\u6743\u9650\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u5728 Nocalhost-Web \u4e2d\u7684\u6240\u6709\u6743\u9650\uff0c\u5982\u521b\u5efa Application \u3001\u521b\u5efa Cluster \u3001\u521b\u5efa User \u548c\u521b\u5efa Space \u7b49\u3002\u540c\u6837\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u4e5f\u62e5\u6709\u666e\u901a\u7528\u6237\u6240\u6709\u7684\u6743\u9650\uff0c\u5982\u53ef\u4ee5\u5728 Nocalhost-Plug-In \u8fdb\u884c\u767b\u5f55\uff0c\u83b7\u53d6\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u8fdb\u884c\u5f00\u53d1\u3002","title":"User \u662f\u505a\u4ec0\u4e48\u7684"},{"location":"zh/Concepts/user/#user_2","text":"\u666e\u901a\u7684 User \u53ea\u80fd\u770b\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684 DevSpace \uff0c\u5e76\u4e14\u62e5\u6709\u8fd9\u4e9b DevSpace \u4e0b\u7684\u6240\u6709\u6743\u9650\uff0c\u4f8b\u5982\u5bf9 DevSpace \u4e0b\u76f8\u5e94 Application \u7684 install \u3001 unInstall \uff08\u90e8\u7f72\u4e0e\u9500\u6bc1\uff09\u3001\u53ef\u4ee5\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u3001\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1\u7b49\u3002 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4e5f\u4f1a\u4e3a\u8fd9\u4e2a User \u521b\u5efa\u6bcf\u4e2a DevSpace \u5bf9\u5e94\u7684 namespace \u7684 kubeconfig \uff0c\u7528\u4e8e\u8bbf\u95ee\u6b64 namespace \u4e0b\u7684\u6240\u6709\u8d44\u6e90\u3002 \u4f8b\u5982\u5f53\u524d\u5728 VSCode Plugin \u767b\u5f55\u7684\u8fd9\u4e2a\u7528\u6237\u62e5\u6709 \"bookinfo\" \u548c \"test\" \u8fd9\u4e24\u4e2a DevSpace \u7684\u6743\u9650\u3002 \u4e0d\u8fc7\u666e\u901a\u7528\u6237\u65e0\u6cd5\u8fdb\u5165 Nocalhost-Web \uff0c\u4e5f\u65e0\u6cd5\u5220\u9664\u8fd9\u4e2a DevSpace \u672c\u8eab\uff0c\u6216\u8005\u4e0e\u8fd9\u4e2a DevSpace \u89e3\u9664\u5173\u7cfb\uff0c\u8fd9\u5f88\u50cf k8s \u67d0\u4e2a namespace \u4e0b\u7684 admin \u6743\u9650\u3002","title":"User \u7684\u6743\u9650"},{"location":"zh/FAQ/default-account/","text":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6ce8\u518c\u94fe\u63a5\uff1f\u600e\u4e48\u767b\u5f55 Nocalhost Web\uff1f Nocalhost \u4e0d\u652f\u6301\u7528\u6237\u6ce8\u518c\u3002Nocalhost \u670d\u52a1\u5668\u76ee\u524d\u662f\u8bbe\u8ba1\u7ed9\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u8d26\u6237\u90ae\u7bb1\u5bc6\u7801\u767b\u5f55\u3002 \u9ed8\u8ba4\u90ae\u7bb1\uff1a admin@admin.com \u9ed8\u8ba4\u5bc6\u7801\uff1a 123456 \u767b\u5f55\u540e\uff0c\u7ba1\u7406\u5458\u53ef\u4fee\u6539\u8d26\u6237\u90ae\u7bb1\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u7528\u6237\u3001\u96c6\u7fa4\u548c\u5e94\u7528\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u9ed8\u8ba4\u7ba1\u7406\u8d26\u6237"},{"location":"zh/FAQ/default-account/#nocalhost-web","text":"Nocalhost \u4e0d\u652f\u6301\u7528\u6237\u6ce8\u518c\u3002Nocalhost \u670d\u52a1\u5668\u76ee\u524d\u662f\u8bbe\u8ba1\u7ed9\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u8d26\u6237\u90ae\u7bb1\u5bc6\u7801\u767b\u5f55\u3002 \u9ed8\u8ba4\u90ae\u7bb1\uff1a admin@admin.com \u9ed8\u8ba4\u5bc6\u7801\uff1a 123456 \u767b\u5f55\u540e\uff0c\u7ba1\u7406\u5458\u53ef\u4fee\u6539\u8d26\u6237\u90ae\u7bb1\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u7528\u6237\u3001\u96c6\u7fa4\u548c\u5e94\u7528\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6ce8\u518c\u94fe\u63a5\uff1f\u600e\u4e48\u767b\u5f55 Nocalhost Web\uff1f"},{"location":"zh/FAQ/dep-label-selector/","text":"Nocalhost \u5177\u4f53\u662f\u5982\u4f55\u786e\u5b9a Pods/Jobs \u7684\u542f\u52a8\u987a\u5e8f? Nocalhost \u914d\u7f6e\u6587\u4ef6 config.yaml \u4e2d\u7684\u4f9d\u8d56\u58f0\u660e\u51b3\u5b9a\u4e86\u5e94\u7528\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u3002 Nocalhost \u4f1a\u5b89\u6392\u542b\u6709 dependPodsLabelSelector \u548c dependJobsLabelSelector \u9009\u9879\u4e2d\u5b9a\u4e49\u4e86\u6807\u7b7e\u7684 Pod \u6216 Job \u5728\u670d\u52a1\u542f\u52a8\u524d\u5148\u542f\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u670d\u52a1\u5728\u6240\u6709\u4f9d\u8d56\u7684 Pod \u542f\u52a8\u5c31\u7eea\u548c\u6240\u6709\u4f9d\u8d56\u7684 Job \u6267\u884c\u5b8c\u4e4b\u524d\u90fd\u4e0d\u4f1a\u542f\u52a8\u3002 \u4f8b\u5982\uff0c foo \u670d\u52a1\u7684\u914d\u7f6e\u5982\u4e0b\uff1a ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... \u5f53 Nocalhost \u8981\u542f\u52a8 foo \u670d\u52a1\u7684 Pod \u65f6\uff0c\u4f1a\u5148\u9009\u4e2d\u542b\u6709 app=mysql and region=shenzhen \u6216 app=redis \u6807\u7b7e\u7684 Pod\u3002\u8fd9\u4e9b\u9009\u4e2d\u7684 Pod \u4f1a\u5148\u88ab\u542f\u52a8\u3002\u4e00\u65e6\u6240\u6709\u9009\u4e2d\u7684 Pod \u542f\u52a8\u5c31\u7eea\u540e\uff0cNocalhost \u624d\u542f\u52a8 foo \u670d\u52a1\u3002","title":"\u4f9d\u8d56\u6807\u7b7e\u9009\u62e9\u5668"},{"location":"zh/FAQ/dep-label-selector/#nocalhost-podsjobs","text":"Nocalhost \u914d\u7f6e\u6587\u4ef6 config.yaml \u4e2d\u7684\u4f9d\u8d56\u58f0\u660e\u51b3\u5b9a\u4e86\u5e94\u7528\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u3002 Nocalhost \u4f1a\u5b89\u6392\u542b\u6709 dependPodsLabelSelector \u548c dependJobsLabelSelector \u9009\u9879\u4e2d\u5b9a\u4e49\u4e86\u6807\u7b7e\u7684 Pod \u6216 Job \u5728\u670d\u52a1\u542f\u52a8\u524d\u5148\u542f\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u670d\u52a1\u5728\u6240\u6709\u4f9d\u8d56\u7684 Pod \u542f\u52a8\u5c31\u7eea\u548c\u6240\u6709\u4f9d\u8d56\u7684 Job \u6267\u884c\u5b8c\u4e4b\u524d\u90fd\u4e0d\u4f1a\u542f\u52a8\u3002 \u4f8b\u5982\uff0c foo \u670d\u52a1\u7684\u914d\u7f6e\u5982\u4e0b\uff1a ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... \u5f53 Nocalhost \u8981\u542f\u52a8 foo \u670d\u52a1\u7684 Pod \u65f6\uff0c\u4f1a\u5148\u9009\u4e2d\u542b\u6709 app=mysql and region=shenzhen \u6216 app=redis \u6807\u7b7e\u7684 Pod\u3002\u8fd9\u4e9b\u9009\u4e2d\u7684 Pod \u4f1a\u5148\u88ab\u542f\u52a8\u3002\u4e00\u65e6\u6240\u6709\u9009\u4e2d\u7684 Pod \u542f\u52a8\u5c31\u7eea\u540e\uff0cNocalhost \u624d\u542f\u52a8 foo \u670d\u52a1\u3002","title":"Nocalhost \u5177\u4f53\u662f\u5982\u4f55\u786e\u5b9a Pods/Jobs \u7684\u542f\u52a8\u987a\u5e8f?"},{"location":"zh/FAQ/deployment-with-hpa/","text":"Nocalhost \u652f\u6301\u5f00\u53d1\u5177\u5907 HPA (Horizontal Pod Autoscaler) \u63a7\u5236\u7684 Deployment \u5417\uff1f \u4e0d\u652f\u6301\u3002\u5efa\u8bae\u5728\u90e8\u7f72\u5e94\u7528\u5b8c\u6bd5\u540e\uff0c\u5148\u53bb\u5220\u9664 HPA \u63a7\u5236\u5668\uff0c\u518d\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5bf9\u6307\u5b9a\u670d\u52a1\u8fdb\u884c\u5f00\u53d1\u3002","title":"HPA \u63a7\u5236\u7684 Deployment"},{"location":"zh/FAQ/deployment-with-hpa/#nocalhost-hpa-horizontal-pod-autoscaler-deployment","text":"\u4e0d\u652f\u6301\u3002\u5efa\u8bae\u5728\u90e8\u7f72\u5e94\u7528\u5b8c\u6bd5\u540e\uff0c\u5148\u53bb\u5220\u9664 HPA \u63a7\u5236\u5668\uff0c\u518d\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5bf9\u6307\u5b9a\u670d\u52a1\u8fdb\u884c\u5f00\u53d1\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u5177\u5907 HPA (Horizontal Pod Autoscaler) \u63a7\u5236\u7684 Deployment \u5417\uff1f"},{"location":"zh/FAQ/line-endings/","text":"\u4e3a\u4ec0\u4e48\u5728 Windows \u4e0b\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u65e0\u6cd5\u7f16\u8bd1\u4ee3\u7801\uff1f \u8fd9\u79cd\u60c5\u51b5\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6362\u884c\u7b26\u4e0d\u540c\u5bfc\u81f4\u7684\u3002\u4f8b\u5982\uff0c\u7f16\u8bd1\u76ee\u6807\u73af\u5883\u4e3a Linux \u7684\u4ee3\u7801\uff0c\u6362\u884c\u7b26\u4e3a \\n \uff0c\u800c\u5728 Windows \u4e0b\u68c0\u51fa\u3001\u7f16\u8bd1\u6216\u683c\u5f0f\u5316\u7b49\u64cd\u4f5c\u90fd\u6709\u53ef\u80fd\u5bfc\u81f4\u4ee3\u7801\u7684\u6362\u884c\u7b26\u88ab\u8f6c\u6362\u6210 \\r\\n \u3002\u6362\u884c\u7b26\u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u90e8\u5206\u6784\u5efa\u5de5\u5177\uff08\u5982 Gradle\uff09\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u6240\u4ee5\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u524d\uff0c\u8bf7\u5148\u6839\u636e\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u597d\u672c\u5730\u5f00\u53d1\u73af\u5883\u3002 git: Windows \u4e0b\u9ed8\u8ba4\u4f1a\u5f00\u542f\u6362\u884c\u7b26\u81ea\u52a8\u8f6c\u6362\uff0c\u5373 git checkout \u65f6\u5c06 \\n \u8f6c\u6362\u6210 \\r\\n \uff0c git commit \u65f6\u5c06 \\r\\n \u8f6c\u6362\u6210 \\n \u3002\u5982\u9700\u914d\u7f6e\uff0c\u8bf7\u53c2\u8003 Git \u5b98\u65b9\u6587\u6863 \uff1b Visual Studio Code: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u5168\u5c40\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Preferences -> Settings -> Text Editor -> Files -> Eol\uff1b\u5982\u9700\u4fee\u6539\u5355\u4e2a\u6587\u4ef6\u914d\u7f6e\uff0c\u76f4\u63a5\u5355\u51fb\u53f3\u4e0b\u89d2\u72b6\u6001\u680f\u4e0a\u7684 CRLF \u6216 LF \u8fdb\u884c\u5207\u6362\uff1b IntelliJ IDEA: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Settings -> Editor -> Code Style -> Line seperator\u3002","title":"\u6362\u884c\u7b26"},{"location":"zh/FAQ/line-endings/#windows","text":"\u8fd9\u79cd\u60c5\u51b5\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6362\u884c\u7b26\u4e0d\u540c\u5bfc\u81f4\u7684\u3002\u4f8b\u5982\uff0c\u7f16\u8bd1\u76ee\u6807\u73af\u5883\u4e3a Linux \u7684\u4ee3\u7801\uff0c\u6362\u884c\u7b26\u4e3a \\n \uff0c\u800c\u5728 Windows \u4e0b\u68c0\u51fa\u3001\u7f16\u8bd1\u6216\u683c\u5f0f\u5316\u7b49\u64cd\u4f5c\u90fd\u6709\u53ef\u80fd\u5bfc\u81f4\u4ee3\u7801\u7684\u6362\u884c\u7b26\u88ab\u8f6c\u6362\u6210 \\r\\n \u3002\u6362\u884c\u7b26\u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u90e8\u5206\u6784\u5efa\u5de5\u5177\uff08\u5982 Gradle\uff09\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u6240\u4ee5\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u524d\uff0c\u8bf7\u5148\u6839\u636e\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u597d\u672c\u5730\u5f00\u53d1\u73af\u5883\u3002 git: Windows \u4e0b\u9ed8\u8ba4\u4f1a\u5f00\u542f\u6362\u884c\u7b26\u81ea\u52a8\u8f6c\u6362\uff0c\u5373 git checkout \u65f6\u5c06 \\n \u8f6c\u6362\u6210 \\r\\n \uff0c git commit \u65f6\u5c06 \\r\\n \u8f6c\u6362\u6210 \\n \u3002\u5982\u9700\u914d\u7f6e\uff0c\u8bf7\u53c2\u8003 Git \u5b98\u65b9\u6587\u6863 \uff1b Visual Studio Code: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u5168\u5c40\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Preferences -> Settings -> Text Editor -> Files -> Eol\uff1b\u5982\u9700\u4fee\u6539\u5355\u4e2a\u6587\u4ef6\u914d\u7f6e\uff0c\u76f4\u63a5\u5355\u51fb\u53f3\u4e0b\u89d2\u72b6\u6001\u680f\u4e0a\u7684 CRLF \u6216 LF \u8fdb\u884c\u5207\u6362\uff1b IntelliJ IDEA: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Settings -> Editor -> Code Style -> Line seperator\u3002","title":"\u4e3a\u4ec0\u4e48\u5728 Windows \u4e0b\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u65e0\u6cd5\u7f16\u8bd1\u4ee3\u7801\uff1f"},{"location":"zh/FAQ/multi-container-pods/","text":"Nocalhost \u652f\u6301\u5f00\u53d1\u8fd0\u884c\u591a\u5bb9\u5668 Pod \u7684\u7ec4\u4ef6\uff08\u670d\u52a1\uff09\u5417\uff1f \u76ee\u524d\u4e0d\u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"\u591a\u5bb9\u5668 Pod"},{"location":"zh/FAQ/multi-container-pods/#nocalhost-pod","text":"\u76ee\u524d\u4e0d\u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u8fd0\u884c\u591a\u5bb9\u5668 Pod \u7684\u7ec4\u4ef6\uff08\u670d\u52a1\uff09\u5417\uff1f"},{"location":"zh/FAQ/pvc-unbound/","text":"\u6211\u4eec\u4e0d\u4f1a\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa pv \uff0c\u5982\u679c\u4f60\u7684 pvc \u5904\u4e8e pending \u72b6\u6001\uff0c\u663e\u793a no persistent volumes available for this claim and no storage class is set \uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u6839\u636e\u4e0b\u9762\u914d\u7f6e\u6765\u521b\u5efa\u4e00\u4e2a pv\uff1a apiVersion: v1 kind: PersistentVolume metadata: name: nocalhost-mariadb-pv-volume labels: type: local spec: storageClassName: \"\" persistentVolumeReclaimPolicy: Recycle volumeMode: Filesystem capacity: storage: 20Gi accessModes: - ReadWriteOnce hostPath: path: \"/foo/bar\" \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c storageClassName \u5fc5\u987b\u662f\u7a7a\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u7ed1\u5b9a\u3002\u53e6\u5916\uff0c\u6ce8\u610f storage \u9700\u8981\u5927\u4e8e 10G\uff08\u5927\u4e8e pvc \u6240\u58f0\u660e\u7684\u5927\u5c0f\uff09 nocalhost \u9700\u8981\u7528\u5230 mariadb \uff0c\u800c\u4e14\u5b83\u9ed8\u8ba4\u4f7f\u7528\u7684\u7528\u6237\u662f mysql . \u6240\u4ee5\u4f60\u9700\u8981\u4fee\u6539 pv \u6302\u8f7d\u76ee\u5f55\u7684\u6743\u9650\uff1a chown -R 1001:1001 /foo/bar","title":"\u65e0\u53ef\u7528\u7684 pv"},{"location":"zh/FAQ/ssh-private-keys-passphrase/","text":"Nocalhost \u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u514b\u9686\u4ee3\u7801\uff1f \u76ee\u524d\u4e0d\u652f\u6301\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"\u52a0\u5bc6\u7684 SSH \u79c1\u94a5"},{"location":"zh/FAQ/ssh-private-keys-passphrase/#nocalhost-ssh","text":"\u76ee\u524d\u4e0d\u652f\u6301\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u514b\u9686\u4ee3\u7801\uff1f"},{"location":"zh/FAQ/support-version/","text":"Nocalhost \u652f\u6301 Major:\"1\", Minor:\"12+\" \u4ee5\u4e0a\u7684 k8s \u7248\u672c\uff0c\u4e0d\u8fc7\u6211\u4eec\u63a8\u8350\u4f7f\u7528 v1.16+\u3002 \u56e0\u4e3a 1.16+ \u53ef\u4ee5\u652f\u6301 \u670d\u52a1\u4f9d\u8d56\u529f\u80fd \uff1a Ensure that the Kubernetes cluster is at least as new as v1.16 (to use admissionregistration.k8s.io/v1 ), or v1.9 (to use admissionregistration.k8s.io/v1beta1 ). Ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. Here is a recommended set of admission controllers to enable in general. Ensure that the admissionregistration.k8s.io/v1 or admissionregistration.k8s.io/v1beta1 API is enabled. \u53ef\u4ee5\u770b\u770b k8s \u7684\u6587\u6863 adminssion web hooks .","title":"\u652f\u6301\u7684\u7248\u672c"},{"location":"zh/FAQ/work-with-helm/","text":"Nocalhost \u5982\u4f55\u786e\u5b9a\u7531 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u5e94\u4e8e\u914d\u7f6e\u4e2d\u7684\u54ea\u4e2a\u670d\u52a1\uff1f \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u901a\u8fc7\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u540d\u79f0\u6765\u8bc6\u522b\u670d\u52a1\u7684\u3002\u4f46\u901a\u8fc7 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u6709\u53ef\u80fd\u662f\u901a\u8fc7 Chart \u6a21\u677f\u751f\u6210\u7684\u3002 \u5982\u679c Chart \u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0cNocalhost \u4f1a\u901a\u8fc7\u67e5\u627e\u4ee5 <release-name>-<service-name> \u5f62\u5f0f\u547d\u540d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6765\u4f5c\u4e3a\u5bf9\u5e94\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff0cconfig.yaml \u5b9a\u4e49\u4e86\u5982\u4e0b\u7684\u670d\u52a1\uff1a ... services: - name: productpage serviceType: deployment \u5f53\u6211\u4eec\u901a\u8fc7 nhctl (Helm) \u5b89\u88c5\u4e0b\u9762\u7684\u5e94\u7528\uff1a $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s \u5982\u679c\u96c6\u7fa4\u4e2d\u6ca1\u6709\u540d\u4e3a productpage \u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219 Nocalhost \u4f1a\u628a dev-productpage \u8ba4\u4e3a\u662f\u7528\u6237\u5728 config.yaml \u4e2d\u914d\u7f6e\u7684 productpage \u670d\u52a1\u3002 \u5982\u679c Chart \u4e0d\u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0c\u6216\u5de5\u4f5c\u8d1f\u8f7d\u4e0d\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u5b89\u88c5\u7684\uff0cNocalhost \u5219\u65e0\u6cd5\u786e\u5b9a config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u6240\u5bf9\u5e94\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u914d\u7f6e\u51c6\u786e\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002 \u5efa\u8bae\u5728 Helm Chart \u4e2d\u4f7f\u7528\u9759\u6001\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002","title":"Helm \u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0"},{"location":"zh/FAQ/work-with-helm/#nocalhost-helm","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u901a\u8fc7\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u540d\u79f0\u6765\u8bc6\u522b\u670d\u52a1\u7684\u3002\u4f46\u901a\u8fc7 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u6709\u53ef\u80fd\u662f\u901a\u8fc7 Chart \u6a21\u677f\u751f\u6210\u7684\u3002 \u5982\u679c Chart \u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0cNocalhost \u4f1a\u901a\u8fc7\u67e5\u627e\u4ee5 <release-name>-<service-name> \u5f62\u5f0f\u547d\u540d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6765\u4f5c\u4e3a\u5bf9\u5e94\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff0cconfig.yaml \u5b9a\u4e49\u4e86\u5982\u4e0b\u7684\u670d\u52a1\uff1a ... services: - name: productpage serviceType: deployment \u5f53\u6211\u4eec\u901a\u8fc7 nhctl (Helm) \u5b89\u88c5\u4e0b\u9762\u7684\u5e94\u7528\uff1a $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s \u5982\u679c\u96c6\u7fa4\u4e2d\u6ca1\u6709\u540d\u4e3a productpage \u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219 Nocalhost \u4f1a\u628a dev-productpage \u8ba4\u4e3a\u662f\u7528\u6237\u5728 config.yaml \u4e2d\u914d\u7f6e\u7684 productpage \u670d\u52a1\u3002 \u5982\u679c Chart \u4e0d\u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0c\u6216\u5de5\u4f5c\u8d1f\u8f7d\u4e0d\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u5b89\u88c5\u7684\uff0cNocalhost \u5219\u65e0\u6cd5\u786e\u5b9a config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u6240\u5bf9\u5e94\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u914d\u7f6e\u51c6\u786e\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002 \u5efa\u8bae\u5728 Helm Chart \u4e2d\u4f7f\u7528\u9759\u6001\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002","title":"Nocalhost \u5982\u4f55\u786e\u5b9a\u7531 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u5e94\u4e8e\u914d\u7f6e\u4e2d\u7684\u54ea\u4e2a\u670d\u52a1\uff1f"},{"location":"zh/FAQ/vscode/vscode-plugin-limits/","text":"Nocalhost \u652f\u6301\u5f00\u53d1\u4f9d\u8d56 Namespace\u3001ClusterRole \u7b49\u96c6\u7fa4\u8d44\u6e90\u7684\u5e94\u7528\u5417\uff1f Visual Studio Code \u63d2\u4ef6\u548c Nocalhost \u670d\u52a1\u5668\u4e0d\u652f\u6301\uff0c\u4f46 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002 \u8bef\u5220 ~/.nh \u76ee\u5f55\uff0c\u63d2\u4ef6\u65e0\u6cd5\u4f7f\u7528\u600e\u4e48\u529e\uff1f \u91cd\u542f Visual Studio Code \u5373\u53ef\u3002 \u63d2\u4ef6\u7aef\u5df2\u7ecf\u505a \u5e94\u7528\u5378\u8f7d \u64cd\u4f5c\uff0ckubernetes \u96c6\u7fa4\u5de5\u4f5c\u8d1f\u8f7d\u6ca1\u6709\u91ca\u653e \u56e0\u4e3a\u4f60\u7684\u767b\u5f55\u7684\u8d26\u53f7\u53d1\u751f\u6539\u53d8\uff0ckubeconfig \u4e5f\u5c31\u53d1\u751f\u4e86\u6539\u53d8\u3002\u76ee\u524d\u6682\u65f6\u4e0d\u652f\u6301\u8d26\u53f7\u5207\u6362\u3002\u5982\u679c\u53d1\u751f\u4e86\u8be5\u60c5\u51b5\uff0c\u9700\u8981\u624b\u52a8\u5220\u9664\u4e4b\u524d\u8d44\u6e90\u3002","title":"VSCode \u63d2\u4ef6\u529f\u80fd\u9650\u5236"},{"location":"zh/FAQ/vscode/vscode-plugin-limits/#nocalhost-namespaceclusterrole","text":"Visual Studio Code \u63d2\u4ef6\u548c Nocalhost \u670d\u52a1\u5668\u4e0d\u652f\u6301\uff0c\u4f46 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u4f9d\u8d56 Namespace\u3001ClusterRole \u7b49\u96c6\u7fa4\u8d44\u6e90\u7684\u5e94\u7528\u5417\uff1f"},{"location":"zh/FAQ/vscode/vscode-plugin-limits/#nh","text":"\u91cd\u542f Visual Studio Code \u5373\u53ef\u3002","title":"\u8bef\u5220 ~/.nh \u76ee\u5f55\uff0c\u63d2\u4ef6\u65e0\u6cd5\u4f7f\u7528\u600e\u4e48\u529e\uff1f"},{"location":"zh/FAQ/vscode/vscode-plugin-limits/#kubernetes","text":"\u56e0\u4e3a\u4f60\u7684\u767b\u5f55\u7684\u8d26\u53f7\u53d1\u751f\u6539\u53d8\uff0ckubeconfig \u4e5f\u5c31\u53d1\u751f\u4e86\u6539\u53d8\u3002\u76ee\u524d\u6682\u65f6\u4e0d\u652f\u6301\u8d26\u53f7\u5207\u6362\u3002\u5982\u679c\u53d1\u751f\u4e86\u8be5\u60c5\u51b5\uff0c\u9700\u8981\u624b\u52a8\u5220\u9664\u4e4b\u524d\u8d44\u6e90\u3002","title":"\u63d2\u4ef6\u7aef\u5df2\u7ecf\u505a \u5e94\u7528\u5378\u8f7d \u64cd\u4f5c\uff0ckubernetes \u96c6\u7fa4\u5de5\u4f5c\u8d1f\u8f7d\u6ca1\u6709\u91ca\u653e"},{"location":"zh/References/architecture/","text":"\u4ec0\u4e48\u662fNocalhost\uff1f Nocalhost \u662f\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u652f\u6301\u5f00\u53d1\u57fa\u4e8e Kubernetes \u7684\u5e94\u7528\uff1a \u4e00\u952e\u5316\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4f7f\u5177\u6709\u590d\u6742\u7684\u670d\u52a1\u4f9d\u8d56\u6027 \u652f\u6301\u5728 Kubernetes \u5bb9\u5668\u5185\u90e8\u6784\u5efa\uff0c\u6d4b\u8bd5\u548c\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f \u652f\u6301\u70ed\u52a0\u8f7d\u8fdb\u884c\u5f00\u53d1 \uff1a\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u800c\u65e0\u9700\u91cd\u5efa\u91cd\u5efa\u6216\u91cd\u65b0\u542f\u52a8 Pod\u3002 Nocalhost \u5982\u4f55\u5de5\u4f5c\u7684\uff1f Nocalhost \u670d\u52a1\u7aef\u5b89\u88c5 \u5c06 Nocalhost \u670d\u52a1\u7aef\uff08nocalhost-api\uff0cnocalhost-web\uff09\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 \u5bf9\u4e8e\u7ba1\u7406\u5458\uff1a \u4f7f\u7528 Nocalhost \u670d\u52a1\u7aef\u63d0\u4f9b\u7684\u7ba1\u7406\u754c\u9762\u521b\u5efa\u7528\u6237\uff0c\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684 Kubernetes \u96c6\u7fa4\uff0c\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684DevSpace\uff08\u5f53\u524d\uff0cDevSpace = ServiceAccount + namespaces\uff09\u3002 \u5728\u914d\u7f6e Kubernetes \u96c6\u7fa4\u65f6\uff0c\u4f1a\u5728\u8be5 Kubernetest \u96c6\u7fa4\u7684 nocalhost \u540d\u79f0\u7a7a\u95f4\uff0c\u81ea\u52a8\u90e8\u7f72 nocalhost-dep \uff0cnocalhost-dep \u4e3b\u8981\u662f\u63a7\u5236\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u7684\u4f9d\u8d56\u987a\u5e8f\u3002 \u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\uff1a 1.\u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef nhctl \u548c IDE \u63d2\u4ef6 \u3002 2.\u63d2\u4ef6\u4e2d\u914d\u7f6e nocalhost-api \u670d\u52a1\u5730\u5740(\u5982\uff1ahttp://localhost:8080), \u5e76\u7528\u8d26\u53f7\u5bc6\u7801\u767b\u5f55. 3.\u5e94\u7528\u7a0b\u5e8f\u4e00\u952e\u5316\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 4.\u9009\u5b9a\u670d\u52a1\u5f00\u542f DevMode \uff0c\u5f53\u8be5\u670d\u52a1\u5207\u6362\u5230 DevMode, Nocalhost \u5c06\u8be5\u5fae\u670d\u52a1\u7684\u5bb9\u5668\u66ff\u6362\u4e3a\u914d\u7f6e\u6307\u5b9a\u7684 DevContainer \uff0c\u5c06\u6e90\u4ee3\u7801\u540c\u6b65\u5230 DevContainer\uff0c\u5e76\u5c06 DevContainer \u7684\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u3002 Nocalhost \u7684\u5de5\u4f5c\u793a\u610f\u56fe\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7ec4\u4ef6\u7b80\u4ecb IDE plugins IDE pugins \u901a\u8fc7 nhctl \u548c nocalhost-api \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002\u4e3b\u8981\u63d0\u4f9b\u4e00\u952e\u5316\u529f\u80fd\uff0c\u5982\uff1a\u5e94\u7528\u90e8\u7f72/\u5378\u8f7d\uff0cDevMode \u5f00\u542f/\u5173\u95ed\uff0c\u6587\u4ef6\u540c\u6b65\uff0c\u7aef\u53e3\u8f6c\u53d1\u7b49 nhctl nhctl \u662f Nocalhost \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u5e94\u7528\u90e8\u7f72 Nocalhost \u5c06\u6839\u636e ~/.nh/nhctl/application/{\u5177\u4f53\u5e94\u7528}/.nocalhost/config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u4f9d\u8d56\u987a\u5e8f\u4f9d\u6b21\u90e8\u7f72\u5230kubernetes\u96c6\u7fa4\u3002 DevContainer \u70ed\u52a0\u8f7d\u672c\u5730\u6587\u4ef6 \u5bf9\u672c\u5730\u6e90\u4ee3\u7801\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u5c06\u81ea\u52a8\u540c\u6b65\u5230\u8fdc\u7a0bDevContainer\u3002 \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u91cd\u65b0\u7f16\u8bd1\u5e76\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u5176\u8fc7\u7a0b\u4ee5\u9a8c\u8bc1\u4ee3\u7801\u66f4\u6539\u3002 \u5c06\u6765\uff0c\u6211\u4eec\u5c06\u652f\u6301\u914d\u7f6ehotreload\u547d\u4ee4\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u8fc7\u7a0b\u3002 \u5e94\u7528\u5378\u8f7d \u5e94\u7528\u5378\u8f7d\u4f1a\u6e05\u7a7a DevSpace \u7533\u8bf7\u7684\u8d44\u6e90\u3002 nocalhost-web nocalhost-web \u63d0\u4f9b\u4e86\u4e00\u4e2a Web \u754c\u9762\u6765\u7ba1\u7406\u7528\u6237\uff0ckubernetes \u96c6\u7fa4\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpaces\u3002 nocalhost-api Nocalhost-api \u901a\u8fc7 Kubernetest api-server \u7ba1\u7406 kubernetes \u96c6\u7fa4\u4e2d\u7684 serviceAccount\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpace\uff0c\u5e76\u6301\u4e45\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e3a IDE plugin \u7684\u4f7f\u7528\u63d0\u4f9b\u6570\u636e\u652f\u6301\u3002 nocalhost-dep 1.\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u90e8\u7f72\u5fae\u670d\u52a1\u65f6\uff0c\u65e0\u6cd5\u63a7\u5236\u5fae\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u548c\u4f9d\u8d56\u6027\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u662f\uff1a\u670d\u52a1A \u548c\u670d\u52a1B \u90fd\u4f9d\u8d56\u4e8e Mysql\uff0cRedis\uff0cRabbitMQ\u3002 \u9664\u975e Mysql, Redeis, RabbitMQ \u90fd\u53ef\u7528\uff0c\u5426\u5219\u65e0\u6cd5\u542f\u52a8\u670d\u52a1A\u548c\u670d\u52a1B\u3002 2.\u901a\u5e38\uff0c\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u7b49\u5f85 Pod \u91cd\u65b0\u542f\u52a8\uff0c\u8fd9\u53d6\u51b3\u4e8e Kubernetes \u7684 HealthCheck Probe\u3002 \u4e00\u6b21\u53c8\u4e00\u6b21\u91cd\u542f\u540e\uff0c\u65f6\u95f4\u95f4\u9694\u5c06\u975e\u5e38\u957f\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8bb8\u591a\u5728 Kubernetes \u4e2d\u8fd0\u884c\u7684\u5927\u578b\u7cfb\u7edf\u542f\u52a8\u901f\u5ea6\u975e\u5e38\u6162\u7684\u539f\u56e0\u3002 3.nocalhost-dep \u4f7f\u7528 Kubernetes Admission Webhook\uff08\u7c7b\u4f3c\u4e8e Istio \u6ce8\u5165 Sidecar\uff09 \u53ef\u4ee5\u63a7\u5236\u542f\u52a8\u987a\u5e8f\u3002 4.\u90e8\u7f72\u5e94\u7528\u65f6\uff0cnocalhost-dep \u5c06\u81ea\u52a8\u5c06 InitContainers \u6ce8\u5165 workloads\u3002 \u6839\u636e\u58f0\u660e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0cnocalhost-dep \u4f1a\u7ee7\u7eed\u7b49\u5f85\u4f9d\u8d56\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002 5.\u4e00\u65e6\u6240\u6709\u4f9d\u8d56\u670d\u52a1\u53ef\u7528\uff0cInitContainer \u9000\u51fa\uff0c\u7136\u540e\u542f\u52a8\u5bb9\u5668\u4e1a\u52a1\u903b\u8f91\u7684\u5bb9\u5668\u3002 \u6ca1\u6709\u91cd\u542f\uff0c\u8fd9\u610f\u5473\u7740\u7b49\u5f85\u542f\u52a8\u7684\u65f6\u95f4\u6700\u5c11\u3002","title":"Nocalhost \u67b6\u6784"},{"location":"zh/References/architecture/#nocalhost","text":"Nocalhost \u662f\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u652f\u6301\u5f00\u53d1\u57fa\u4e8e Kubernetes \u7684\u5e94\u7528\uff1a \u4e00\u952e\u5316\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4f7f\u5177\u6709\u590d\u6742\u7684\u670d\u52a1\u4f9d\u8d56\u6027 \u652f\u6301\u5728 Kubernetes \u5bb9\u5668\u5185\u90e8\u6784\u5efa\uff0c\u6d4b\u8bd5\u548c\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f \u652f\u6301\u70ed\u52a0\u8f7d\u8fdb\u884c\u5f00\u53d1 \uff1a\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u800c\u65e0\u9700\u91cd\u5efa\u91cd\u5efa\u6216\u91cd\u65b0\u542f\u52a8 Pod\u3002","title":"\u4ec0\u4e48\u662fNocalhost\uff1f"},{"location":"zh/References/architecture/#nocalhost_1","text":"Nocalhost \u670d\u52a1\u7aef\u5b89\u88c5 \u5c06 Nocalhost \u670d\u52a1\u7aef\uff08nocalhost-api\uff0cnocalhost-web\uff09\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 \u5bf9\u4e8e\u7ba1\u7406\u5458\uff1a \u4f7f\u7528 Nocalhost \u670d\u52a1\u7aef\u63d0\u4f9b\u7684\u7ba1\u7406\u754c\u9762\u521b\u5efa\u7528\u6237\uff0c\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684 Kubernetes \u96c6\u7fa4\uff0c\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684DevSpace\uff08\u5f53\u524d\uff0cDevSpace = ServiceAccount + namespaces\uff09\u3002 \u5728\u914d\u7f6e Kubernetes \u96c6\u7fa4\u65f6\uff0c\u4f1a\u5728\u8be5 Kubernetest \u96c6\u7fa4\u7684 nocalhost \u540d\u79f0\u7a7a\u95f4\uff0c\u81ea\u52a8\u90e8\u7f72 nocalhost-dep \uff0cnocalhost-dep \u4e3b\u8981\u662f\u63a7\u5236\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u7684\u4f9d\u8d56\u987a\u5e8f\u3002 \u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\uff1a 1.\u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef nhctl \u548c IDE \u63d2\u4ef6 \u3002 2.\u63d2\u4ef6\u4e2d\u914d\u7f6e nocalhost-api \u670d\u52a1\u5730\u5740(\u5982\uff1ahttp://localhost:8080), \u5e76\u7528\u8d26\u53f7\u5bc6\u7801\u767b\u5f55. 3.\u5e94\u7528\u7a0b\u5e8f\u4e00\u952e\u5316\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 4.\u9009\u5b9a\u670d\u52a1\u5f00\u542f DevMode \uff0c\u5f53\u8be5\u670d\u52a1\u5207\u6362\u5230 DevMode, Nocalhost \u5c06\u8be5\u5fae\u670d\u52a1\u7684\u5bb9\u5668\u66ff\u6362\u4e3a\u914d\u7f6e\u6307\u5b9a\u7684 DevContainer \uff0c\u5c06\u6e90\u4ee3\u7801\u540c\u6b65\u5230 DevContainer\uff0c\u5e76\u5c06 DevContainer \u7684\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u3002 Nocalhost \u7684\u5de5\u4f5c\u793a\u610f\u56fe\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"Nocalhost \u5982\u4f55\u5de5\u4f5c\u7684\uff1f"},{"location":"zh/References/architecture/#_1","text":"","title":"\u7ec4\u4ef6\u7b80\u4ecb"},{"location":"zh/References/architecture/#ide-plugins","text":"IDE pugins \u901a\u8fc7 nhctl \u548c nocalhost-api \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002\u4e3b\u8981\u63d0\u4f9b\u4e00\u952e\u5316\u529f\u80fd\uff0c\u5982\uff1a\u5e94\u7528\u90e8\u7f72/\u5378\u8f7d\uff0cDevMode \u5f00\u542f/\u5173\u95ed\uff0c\u6587\u4ef6\u540c\u6b65\uff0c\u7aef\u53e3\u8f6c\u53d1\u7b49","title":"IDE plugins"},{"location":"zh/References/architecture/#nhctl","text":"nhctl \u662f Nocalhost \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u5e94\u7528\u90e8\u7f72 Nocalhost \u5c06\u6839\u636e ~/.nh/nhctl/application/{\u5177\u4f53\u5e94\u7528}/.nocalhost/config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u4f9d\u8d56\u987a\u5e8f\u4f9d\u6b21\u90e8\u7f72\u5230kubernetes\u96c6\u7fa4\u3002 DevContainer \u70ed\u52a0\u8f7d\u672c\u5730\u6587\u4ef6 \u5bf9\u672c\u5730\u6e90\u4ee3\u7801\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u5c06\u81ea\u52a8\u540c\u6b65\u5230\u8fdc\u7a0bDevContainer\u3002 \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u91cd\u65b0\u7f16\u8bd1\u5e76\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u5176\u8fc7\u7a0b\u4ee5\u9a8c\u8bc1\u4ee3\u7801\u66f4\u6539\u3002 \u5c06\u6765\uff0c\u6211\u4eec\u5c06\u652f\u6301\u914d\u7f6ehotreload\u547d\u4ee4\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u8fc7\u7a0b\u3002 \u5e94\u7528\u5378\u8f7d \u5e94\u7528\u5378\u8f7d\u4f1a\u6e05\u7a7a DevSpace \u7533\u8bf7\u7684\u8d44\u6e90\u3002","title":"nhctl"},{"location":"zh/References/architecture/#nocalhost-web","text":"nocalhost-web \u63d0\u4f9b\u4e86\u4e00\u4e2a Web \u754c\u9762\u6765\u7ba1\u7406\u7528\u6237\uff0ckubernetes \u96c6\u7fa4\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpaces\u3002","title":"nocalhost-web"},{"location":"zh/References/architecture/#nocalhost-api","text":"Nocalhost-api \u901a\u8fc7 Kubernetest api-server \u7ba1\u7406 kubernetes \u96c6\u7fa4\u4e2d\u7684 serviceAccount\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpace\uff0c\u5e76\u6301\u4e45\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e3a IDE plugin \u7684\u4f7f\u7528\u63d0\u4f9b\u6570\u636e\u652f\u6301\u3002","title":"nocalhost-api"},{"location":"zh/References/architecture/#nocalhost-dep","text":"1.\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u90e8\u7f72\u5fae\u670d\u52a1\u65f6\uff0c\u65e0\u6cd5\u63a7\u5236\u5fae\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u548c\u4f9d\u8d56\u6027\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u662f\uff1a\u670d\u52a1A \u548c\u670d\u52a1B \u90fd\u4f9d\u8d56\u4e8e Mysql\uff0cRedis\uff0cRabbitMQ\u3002 \u9664\u975e Mysql, Redeis, RabbitMQ \u90fd\u53ef\u7528\uff0c\u5426\u5219\u65e0\u6cd5\u542f\u52a8\u670d\u52a1A\u548c\u670d\u52a1B\u3002 2.\u901a\u5e38\uff0c\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u7b49\u5f85 Pod \u91cd\u65b0\u542f\u52a8\uff0c\u8fd9\u53d6\u51b3\u4e8e Kubernetes \u7684 HealthCheck Probe\u3002 \u4e00\u6b21\u53c8\u4e00\u6b21\u91cd\u542f\u540e\uff0c\u65f6\u95f4\u95f4\u9694\u5c06\u975e\u5e38\u957f\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8bb8\u591a\u5728 Kubernetes \u4e2d\u8fd0\u884c\u7684\u5927\u578b\u7cfb\u7edf\u542f\u52a8\u901f\u5ea6\u975e\u5e38\u6162\u7684\u539f\u56e0\u3002 3.nocalhost-dep \u4f7f\u7528 Kubernetes Admission Webhook\uff08\u7c7b\u4f3c\u4e8e Istio \u6ce8\u5165 Sidecar\uff09 \u53ef\u4ee5\u63a7\u5236\u542f\u52a8\u987a\u5e8f\u3002 4.\u90e8\u7f72\u5e94\u7528\u65f6\uff0cnocalhost-dep \u5c06\u81ea\u52a8\u5c06 InitContainers \u6ce8\u5165 workloads\u3002 \u6839\u636e\u58f0\u660e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0cnocalhost-dep \u4f1a\u7ee7\u7eed\u7b49\u5f85\u4f9d\u8d56\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002 5.\u4e00\u65e6\u6240\u6709\u4f9d\u8d56\u670d\u52a1\u53ef\u7528\uff0cInitContainer \u9000\u51fa\uff0c\u7136\u540e\u542f\u52a8\u5bb9\u5668\u4e1a\u52a1\u903b\u8f91\u7684\u5bb9\u5668\u3002 \u6ca1\u6709\u91cd\u542f\uff0c\u8fd9\u610f\u5473\u7740\u7b49\u5f85\u542f\u52a8\u7684\u65f6\u95f4\u6700\u5c11\u3002","title":"nocalhost-dep"},{"location":"zh/References/cli-commands/","text":"Nhctl CLI nhctl \u53ef\u4ee5\u7528\u6765\u90e8\u7f72\u5e94\u7528\u548c\u5f00\u53d1\u57fa\u4e8e Kubernetes \u7684\u5e94\u7528\uff0cnhctl \u8ddf Kubernetes \u4ea4\u4e92\u9700\u8981\u4f9d\u8d56 kubectl \u3002\u53ef\u4ee5\u901a\u8fc7 --kubeconfig \u6307\u5b9a\u4f7f\u7528\u7684 kubeconfig \u6587\u4ef6\u3002 \u8bed\u6cd5\uff1anhctl [commond] [Name] [flags] commond \u8868\u793a\u5bf9\u8d44\u6e90\u5177\u6709\u7684\u64cd\u4f5c\uff0c\u5982\uff1aconfig, install, dev, exec, port-foward \u7b49 Name \u8868\u793a\u8d44\u6e90\u7684\u540d\u79f0\uff0c\u5982\uff1aApplication Name flags \u8868\u793a\u53ef\u9009\u53c2\u6570\uff0c\u5982\uff1a--kubeconfig \u6307\u5b9a\u4f7f\u7528\u7684 kubeconfig \u6587\u4ef6 nhctl init \u529f\u80fd\u63cf\u8ff0\uff1aNocalhost \u670d\u52a1\u7aef\uff08nocalhost-api, nocalhost-web, nocalhost-dep\uff09\u521d\u59cb\u5316 synx: nhctl init [flags] [flags] --force \u5f3a\u5236\u521d\u59cb\u5316\u670d\u52a1\u7aef\uff0c\u6ce8\u610f\uff1a\u4f1a\u6e05\u7a7a\u670d\u52a1\u7aef\u6240\u6709\u7684\u6570\u636e -n, --namespace string \u8bbe\u7f6e DevSpace \u540d\u5b57\uff0c\u9ed8\u8ba4\uff1anocalhost -t, --type string \u670d\u52a1\u7aef\u66b4\u9732\u5916\u7f51\u7684\u65b9\u5f0f\uff1a[NodePort|LoadBalancer] -p, --port int type = NodePort \u65b9\u5f0f\uff0c\u9700\u8981\u8bbe\u7f6e\u66b4\u9732\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f 80 [usage] nhctl init -n [DevSpace Name] -t nodeport -p [port] nhctl init -n [DevSpace Name] nhctl config \u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528/\u670d\u52a1\u7684\u5f00\u53d1\u53c2\u6570\u914d\u7f6e\u67e5\u770b synx: nhctl config get [Name] [flags] [flags] -d, --deployment string \u670d\u52a1\u540d\u79f0 [usage] nhctl config get [Application Name] nhctl config get [Application Name] -d [service Name] \u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528/\u670d\u52a1\u7684\u5f00\u53d1\u53c2\u6570\u914d\u7f6e\u4fee\u6539 synx: nhctl config edit [Name] [flags] [flags] -c, --content string \u5f00\u53d1\u914d\u7f6e\u53c2\u6570\u5185\u5bb9\uff0c\u683c\u5f0f\u9700\u8981\u662f base64 -d, --deployment string \u670d\u52a1\u540d\u79f0 [usage] nhctl config edit [Application Name] -d [service Name] -c [content] nhctl describe \u529f\u80fd\u63cf\u8ff0\uff1a\u67e5\u770b\u5e94\u7528\u8fd0\u884c\u65f6\u7684\u72b6\u6001\u4fe1\u606f synx: nhctl describe [Name] [usage] nhctl describe [Application Name] nhctl list \u529f\u80fd\u63cf\u8ff0\uff1a\u67e5\u770b\u5e94\u7528\u5904\u4e8e\u5f00\u53d1\u4e2d\u7684\u670d\u52a1\uff08\u5f00\u53d1\u72b6\u6001\uff0c\u540c\u6b65\u72b6\u6001\uff0c\u540c\u6b65\u7684\u76ee\u5f55\uff0c\u7aef\u53e3\u6620\u5c04\uff09 synx: nhctl list [Name] [usage] nhctl list [Application Name] \u793a\u4f8b\uff1a nhctl list bookinfo +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | NAME | DEVELOPING | SYNCING | DEV-PORT-FORWARDED | SYNC-PATH | LOCAL-SYNCTHING-GUI | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | productpage | true | true | [39080:9080] | [d:\\workspace\\go-project\\productpage] | 52031 | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ nhctl dev \u529f\u80fd\u63cf\u8ff0\uff1a\u5f00\u542f DevMode synx\uff1anhctl dev start [Name][flags] [flags] -d, --deployment string \u5e94\u7528\u4e2d\u670d\u52a1\u540d\u79f0 -h, --help \u547d\u4ee4\u5e2e\u52a9 -i, --image string DevContainer \u955c\u50cf\u5730\u5740 -l, --lang string \u670d\u52a1\u7684\u5f00\u53d1\u8bed\u8a00, \u5982\uff1ajava/go/python -s, --local-sync strings \u9700\u8981\u540c\u6b65\u7684\u672c\u5730\u54ea\u4e2a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230 Devcontainer --work-dir string Devcontainer \u6307\u5b9a\u54ea\u4e2a\u76ee\u5f55\u6765\u63a5\u6536 \u672c\u5730\u540c\u6b65\u4e0a\u53bb\u7684\u6587\u4ef6 [usage] nhctl dev start [Applicaton Name] -d [Service Name] -l [java|go|python] -s [local dir] --work-dir [work dir] --kubeconfig [absolute path of kubeconfig] \u529f\u80fd\u63cf\u8ff0\uff1a\u8fdb\u5165 DevContainer \u5bb9\u5668 synx\uff1anhctl dev terminal [Name][flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 [usage] nhctl dev terminal [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] \u529f\u80fd\u63cf\u8ff0\uff1aDevMode \u7ed3\u675f synx\uff1anhctl dev end [Name][flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 [usage] nhctl dev end [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] nhctl sync \u529f\u80fd\u63cf\u8ff0\uff1a\u6587\u4ef6\u540c\u6b65 synx\uff1anhctl sync [Name][flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 -m, --daemon \u662f\u5426\u4ee5\u540e\u53f0\u8fdb\u7a0b\u8fd0\u884c\uff0c\u9ed8\u8ba4\u662f true\uff0c\u53d6\u503c\uff1a[true|false] -b, --double \u662f\u5426\u4f7f\u7528\u53cc\u5411\u540c\u6b65\uff0c\u9ed8\u8ba4\u662f false, \u53d6\u503c\uff1a[true|false] [usage] nhctl sync [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] nhctl port-forward \u529f\u80fd\u63cf\u8ff0\uff1a\u7aef\u53e3\u8f6c\u53d1 synx\uff1anhctl port-forward [NAME] [flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 -m, --daemon \u662f\u5426\u4ee5\u540e\u53f0\u8fdb\u7a0b\u8fd0\u884c\uff0c\u9ed8\u8ba4\u662f true\uff0c\u53d6\u503c\uff1a[true|false] -p, --dev-port strings \u7aef\u53e3\u6307\u5b9a\uff0c\u683c\u5f0f\uff1a[local port:remote port], :8080(\u968f\u673a\u672c\u5730\u7aef\u53e3) [usage] nhctl port-forward [Application Name] -d [Service Name] -p [local port : remote port] --kubeconfig [absolute path of kubeconfig] nhctl exec \u529f\u80fd\u63cf\u8ff0\uff1a\u5728\u6307\u5b9a\u670d\u52a1\u7684\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4 synx\uff1anhctl exec [NAME] [flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 -c, --command stringArray \u9700\u8981\u5728\u5bb9\u5668\u4e2d\u6267\u884c\u7684\u547d\u4ee4 [usage] nhctl exec [Application Name] -d [Service Name] -c [command] --kubeconfig [absolute path of kubeconfig] nhctl install \u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528\u5b89\u88c5 synx\uff1anhctl install [NAME] [flags] [Flags] -c, --config string config.yaml \u8def\u5f84 -r, --git-ref string git \u7684 commitId -u, --git-url string git \u4ed3\u5e93\u5730\u5740 --helm-chart-name string helm chart \u7684\u540d\u5b57 --helm-repo-name string helm chart \u7684\u4ed3\u5e93\u540d\u5b57 --helm-repo-url string helm chart \u7684\u4ed3\u5e93\u5730\u5740 --helm-repo-version string heml chart \u7684\u7248\u672c -f, --helm-values string hlem \u7684 Value.yaml \u8def\u5f84 --ignore-pre-install \u5ffd\u7565 pre-install \u7684\u4f9d\u8d56\u90e8\u7f72 -n, --namespace string kubernetes namespace --resource-path strings \u76f8\u5bf9\u4ed3\u5e93\u7684\u8def\u5f84 --set strings helm \u90e8\u7f72\u65b9\u5f0f\uff0c\u6307\u5b9a\u591a\u4e2a\u53c2\u6570\uff0c\u8ddf\u4f7f\u7528 Value.yaml \u6548\u679c\u4e00\u6837 -t, --type string \u652f\u6301\u5b89\u88c5\u7684\u5e94\u7528\u7c7b\u578b: helm or helm-repo or manifest [usage] nhctl install [Application Name] -u [a git repo url which contains helm chart or manifests] --kubeconfig [absolute path of kubeconfig] nhctl uninstall \u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528\u5378\u8f7d synx\uff1anhctl uninstall [NAME] [flags] [Flags] --force \u5f3a\u5236\u5378\u8f7d [usage] nhctl uninstall [Application Name] [--force \u53ef\u9009] --kubeconfig [absolute path of kubeconfig] nhctl version \u529f\u80fd\u63cf\u8ff0\uff1anhctl \u7248\u672c\u4fe1\u606f synx: nhctl version [usage] nhctl version","title":"Nhctl CLI"},{"location":"zh/References/cli-commands/#nhctl-cli","text":"nhctl \u53ef\u4ee5\u7528\u6765\u90e8\u7f72\u5e94\u7528\u548c\u5f00\u53d1\u57fa\u4e8e Kubernetes \u7684\u5e94\u7528\uff0cnhctl \u8ddf Kubernetes \u4ea4\u4e92\u9700\u8981\u4f9d\u8d56 kubectl \u3002\u53ef\u4ee5\u901a\u8fc7 --kubeconfig \u6307\u5b9a\u4f7f\u7528\u7684 kubeconfig \u6587\u4ef6\u3002 \u8bed\u6cd5\uff1anhctl [commond] [Name] [flags] commond \u8868\u793a\u5bf9\u8d44\u6e90\u5177\u6709\u7684\u64cd\u4f5c\uff0c\u5982\uff1aconfig, install, dev, exec, port-foward \u7b49 Name \u8868\u793a\u8d44\u6e90\u7684\u540d\u79f0\uff0c\u5982\uff1aApplication Name flags \u8868\u793a\u53ef\u9009\u53c2\u6570\uff0c\u5982\uff1a--kubeconfig \u6307\u5b9a\u4f7f\u7528\u7684 kubeconfig \u6587\u4ef6","title":"Nhctl CLI"},{"location":"zh/References/cli-commands/#nhctl-init","text":"\u529f\u80fd\u63cf\u8ff0\uff1aNocalhost \u670d\u52a1\u7aef\uff08nocalhost-api, nocalhost-web, nocalhost-dep\uff09\u521d\u59cb\u5316 synx: nhctl init [flags] [flags] --force \u5f3a\u5236\u521d\u59cb\u5316\u670d\u52a1\u7aef\uff0c\u6ce8\u610f\uff1a\u4f1a\u6e05\u7a7a\u670d\u52a1\u7aef\u6240\u6709\u7684\u6570\u636e -n, --namespace string \u8bbe\u7f6e DevSpace \u540d\u5b57\uff0c\u9ed8\u8ba4\uff1anocalhost -t, --type string \u670d\u52a1\u7aef\u66b4\u9732\u5916\u7f51\u7684\u65b9\u5f0f\uff1a[NodePort|LoadBalancer] -p, --port int type = NodePort \u65b9\u5f0f\uff0c\u9700\u8981\u8bbe\u7f6e\u66b4\u9732\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f 80 [usage] nhctl init -n [DevSpace Name] -t nodeport -p [port] nhctl init -n [DevSpace Name]","title":"nhctl init"},{"location":"zh/References/cli-commands/#nhctl-config","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528/\u670d\u52a1\u7684\u5f00\u53d1\u53c2\u6570\u914d\u7f6e\u67e5\u770b synx: nhctl config get [Name] [flags] [flags] -d, --deployment string \u670d\u52a1\u540d\u79f0 [usage] nhctl config get [Application Name] nhctl config get [Application Name] -d [service Name] \u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528/\u670d\u52a1\u7684\u5f00\u53d1\u53c2\u6570\u914d\u7f6e\u4fee\u6539 synx: nhctl config edit [Name] [flags] [flags] -c, --content string \u5f00\u53d1\u914d\u7f6e\u53c2\u6570\u5185\u5bb9\uff0c\u683c\u5f0f\u9700\u8981\u662f base64 -d, --deployment string \u670d\u52a1\u540d\u79f0 [usage] nhctl config edit [Application Name] -d [service Name] -c [content]","title":"nhctl config"},{"location":"zh/References/cli-commands/#nhctl-describe","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u67e5\u770b\u5e94\u7528\u8fd0\u884c\u65f6\u7684\u72b6\u6001\u4fe1\u606f synx: nhctl describe [Name] [usage] nhctl describe [Application Name]","title":"nhctl describe"},{"location":"zh/References/cli-commands/#nhctl-list","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u67e5\u770b\u5e94\u7528\u5904\u4e8e\u5f00\u53d1\u4e2d\u7684\u670d\u52a1\uff08\u5f00\u53d1\u72b6\u6001\uff0c\u540c\u6b65\u72b6\u6001\uff0c\u540c\u6b65\u7684\u76ee\u5f55\uff0c\u7aef\u53e3\u6620\u5c04\uff09 synx: nhctl list [Name] [usage] nhctl list [Application Name] \u793a\u4f8b\uff1a nhctl list bookinfo +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | NAME | DEVELOPING | SYNCING | DEV-PORT-FORWARDED | SYNC-PATH | LOCAL-SYNCTHING-GUI | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+ | productpage | true | true | [39080:9080] | [d:\\workspace\\go-project\\productpage] | 52031 | +-------------+------------+---------+--------------------+---------------------------------------+---------------------+","title":"nhctl list"},{"location":"zh/References/cli-commands/#nhctl-dev","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u5f00\u542f DevMode synx\uff1anhctl dev start [Name][flags] [flags] -d, --deployment string \u5e94\u7528\u4e2d\u670d\u52a1\u540d\u79f0 -h, --help \u547d\u4ee4\u5e2e\u52a9 -i, --image string DevContainer \u955c\u50cf\u5730\u5740 -l, --lang string \u670d\u52a1\u7684\u5f00\u53d1\u8bed\u8a00, \u5982\uff1ajava/go/python -s, --local-sync strings \u9700\u8981\u540c\u6b65\u7684\u672c\u5730\u54ea\u4e2a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230 Devcontainer --work-dir string Devcontainer \u6307\u5b9a\u54ea\u4e2a\u76ee\u5f55\u6765\u63a5\u6536 \u672c\u5730\u540c\u6b65\u4e0a\u53bb\u7684\u6587\u4ef6 [usage] nhctl dev start [Applicaton Name] -d [Service Name] -l [java|go|python] -s [local dir] --work-dir [work dir] --kubeconfig [absolute path of kubeconfig] \u529f\u80fd\u63cf\u8ff0\uff1a\u8fdb\u5165 DevContainer \u5bb9\u5668 synx\uff1anhctl dev terminal [Name][flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 [usage] nhctl dev terminal [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig] \u529f\u80fd\u63cf\u8ff0\uff1aDevMode \u7ed3\u675f synx\uff1anhctl dev end [Name][flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 [usage] nhctl dev end [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig]","title":"nhctl dev"},{"location":"zh/References/cli-commands/#nhctl-sync","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u6587\u4ef6\u540c\u6b65 synx\uff1anhctl sync [Name][flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 -m, --daemon \u662f\u5426\u4ee5\u540e\u53f0\u8fdb\u7a0b\u8fd0\u884c\uff0c\u9ed8\u8ba4\u662f true\uff0c\u53d6\u503c\uff1a[true|false] -b, --double \u662f\u5426\u4f7f\u7528\u53cc\u5411\u540c\u6b65\uff0c\u9ed8\u8ba4\u662f false, \u53d6\u503c\uff1a[true|false] [usage] nhctl sync [Application Name] -d [Service Name] --kubeconfig [absolute path of kubeconfig]","title":"nhctl sync"},{"location":"zh/References/cli-commands/#nhctl-port-forward","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u7aef\u53e3\u8f6c\u53d1 synx\uff1anhctl port-forward [NAME] [flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 -m, --daemon \u662f\u5426\u4ee5\u540e\u53f0\u8fdb\u7a0b\u8fd0\u884c\uff0c\u9ed8\u8ba4\u662f true\uff0c\u53d6\u503c\uff1a[true|false] -p, --dev-port strings \u7aef\u53e3\u6307\u5b9a\uff0c\u683c\u5f0f\uff1a[local port:remote port], :8080(\u968f\u673a\u672c\u5730\u7aef\u53e3) [usage] nhctl port-forward [Application Name] -d [Service Name] -p [local port : remote port] --kubeconfig [absolute path of kubeconfig]","title":"nhctl port-forward"},{"location":"zh/References/cli-commands/#nhctl-exec","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u5728\u6307\u5b9a\u670d\u52a1\u7684\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4 synx\uff1anhctl exec [NAME] [flags] [Flags] -d, --deployment string \u5e94\u7528\u4e2d\u7684\u670d\u52a1\u540d\u79f0 -c, --command stringArray \u9700\u8981\u5728\u5bb9\u5668\u4e2d\u6267\u884c\u7684\u547d\u4ee4 [usage] nhctl exec [Application Name] -d [Service Name] -c [command] --kubeconfig [absolute path of kubeconfig]","title":"nhctl exec"},{"location":"zh/References/cli-commands/#nhctl-install","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528\u5b89\u88c5 synx\uff1anhctl install [NAME] [flags] [Flags] -c, --config string config.yaml \u8def\u5f84 -r, --git-ref string git \u7684 commitId -u, --git-url string git \u4ed3\u5e93\u5730\u5740 --helm-chart-name string helm chart \u7684\u540d\u5b57 --helm-repo-name string helm chart \u7684\u4ed3\u5e93\u540d\u5b57 --helm-repo-url string helm chart \u7684\u4ed3\u5e93\u5730\u5740 --helm-repo-version string heml chart \u7684\u7248\u672c -f, --helm-values string hlem \u7684 Value.yaml \u8def\u5f84 --ignore-pre-install \u5ffd\u7565 pre-install \u7684\u4f9d\u8d56\u90e8\u7f72 -n, --namespace string kubernetes namespace --resource-path strings \u76f8\u5bf9\u4ed3\u5e93\u7684\u8def\u5f84 --set strings helm \u90e8\u7f72\u65b9\u5f0f\uff0c\u6307\u5b9a\u591a\u4e2a\u53c2\u6570\uff0c\u8ddf\u4f7f\u7528 Value.yaml \u6548\u679c\u4e00\u6837 -t, --type string \u652f\u6301\u5b89\u88c5\u7684\u5e94\u7528\u7c7b\u578b: helm or helm-repo or manifest [usage] nhctl install [Application Name] -u [a git repo url which contains helm chart or manifests] --kubeconfig [absolute path of kubeconfig]","title":"nhctl install"},{"location":"zh/References/cli-commands/#nhctl-uninstall","text":"\u529f\u80fd\u63cf\u8ff0\uff1a\u5e94\u7528\u5378\u8f7d synx\uff1anhctl uninstall [NAME] [flags] [Flags] --force \u5f3a\u5236\u5378\u8f7d [usage] nhctl uninstall [Application Name] [--force \u53ef\u9009] --kubeconfig [absolute path of kubeconfig]","title":"nhctl uninstall"},{"location":"zh/References/cli-commands/#nhctl-version","text":"\u529f\u80fd\u63cf\u8ff0\uff1anhctl \u7248\u672c\u4fe1\u606f synx: nhctl version [usage] nhctl version","title":"nhctl version"},{"location":"zh/References/file-sync/","text":"\u6587\u4ef6\u540c\u6b65\u662f Nocalhost \u8fdb\u5165 \u5f00\u53d1\u6a21\u5f0f \u7684\u4e00\u9879\u91cd\u8981\u529f\u80fd\uff0c\u53ea\u6709\u5728\u542f\u7528 \u5f00\u53d1\u6a21\u5f0f \u65f6\u624d\u4f1a\u542f\u7528\uff0c\u4ed6\u662f\u5b9e\u73b0\u672c\u5730\u548c\u8fdc\u7a0b\u6587\u4ef6\u81ea\u52a8\u540c\u6b65\u7684\u5173\u952e\u3002\u5b83\u5c06\u6839\u636e\u914d\u7f6e\u6216\u547d\u4ee4\u5efa\u7acb\u4ece\u672c\u5730\u5230\u5f00\u53d1\u5bb9\u5668\u7684\u96a7\u9053\uff0c\u5e76\u4f20\u8f93\u6587\u4ef6\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7 ntctl \u4f7f\u7528\u5b83\uff1a nhctl sync [application_name]] [\u53c2\u6570] \u53c2\u6570\uff1a -m\uff0c-daemon \u5e03\u5c14\u503c\uff0c\u9ed8\u8ba4\u4e3a true\uff0c\u6587\u4ef6\u540c\u6b65\u4f5c\u4e3a\u5b88\u62a4\u7a0b\u5e8f\u8fd0\u884c -d\uff0c--deployment \u5b57\u7b26\u4e32\uff0c\u8fdb\u5165\u5f00\u53d1\u73af\u5883\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0 -b\uff0c--double \u5e03\u5c14\u503c\uff0c\u9ed8\u8ba4\u4e3a false\uff0c\u5355\u5411\u540c\u6b65 \u5168\u5c40\u53c2\u6570\uff1a --debug \u542f\u7528\u8c03\u8bd5\u7ea7\u522b\u65e5\u5fd7 --kubeconfig \u5b57\u7b26\u4e32\uff0c\u6307\u5b9a kubeconfig \u6587\u4ef6\u7684\u8def\u5f84 \u5728\u4f7f\u7528IDE \u63d2\u4ef6\u8fdb\u5165 \u5f00\u53d1\u6a21\u5f0f \u65f6\u4f1a\u81ea\u52a8\u542f\u7528\u6587\u4ef6\u540c\u6b65\uff0c\u540c\u6b65\u76ee\u5f55\u7531\u914d\u7f6e\u9879 syncDirs \u51b3\u5b9a\uff0c\u5176\u8def\u5f84\u4ee3\u8868\u76f8\u5bf9\u4e8e\u6e90\u7801\u7684\u76ee\u5f55\uff0c\u5e76\u540c\u6b65\u5230\u914d\u7f6e\u9879 workDir \u6307\u5b9a\u6539\u7684\u76ee\u5f55\u3002 \u6ce8\u610f\uff1a\u7531\u4e8e\u5e73\u53f0\u5dee\u5f02\uff0c\u5f53\u4ece Windows \u540c\u6b65\u6587\u4ef6\u5230 devContainer \u65f6\u5c06\u4e22\u5931\u6267\u884c\u4f4d\uff0c\u4f8b\u5982 Shell \u811a\u672c\u548c\u5176\u4ed6\u65e0\u6cd5\u5728 Windows \u4e0b\u4f5c\u4e3a\u53ef\u6267\u884c\u7684\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u5728 devContainer \u4e2d\u624b\u52a8\u6267\u884c `chmod + x filename' \u6765\u89e3\u51b3\u8be5\u95ee\u9898\u3002 \u6587\u4ef6\u540c\u6b65\u4f7f\u7528 Syncthing \u5de5\u5177\uff0cSyncthing \u63a7\u5236\u53f0\u9ed8\u8ba4\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u4e3a \u201cnocalhost\u201d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 nhctl list [application_name] \u547d\u4ee4\u83b7\u53d6\u767b\u9646\u63a7\u5236\u53f0\u7684\u7aef\u53e3\u3002","title":"File sync"},{"location":"zh/References/nocalhost-config-yaml-spec/","text":"Nocalhost \u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 # \u5e94\u7528\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : nocalhost # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManifest # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifestType : helmGit # helmGit\u7c7b\u578b\u6b64\u5b57\u6bb5\u4ee3\u8868 Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002helmRepo \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u65e0\u610f\u4e49\u3002rawManifest \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e\u3002 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b\u63d0\u4f9b resourcePath : [ \"deployments/chart\" ] # \u6307\u660e\u5e94\u7528\u662f\u5426\u4ee5\u6700\u5c0f\u526f\u672c\u6570\u91cf\u5b89\u88c5 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: boolean # \u9ed8\u8ba4\u503c: false # \u53ef\u9009 # \u5bf9\u5e94 nhctl \u53c2\u6570: TODO minimalInstall : false # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5b89\u88c5\u5b8c\u6bd5\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57,\u5bf9\u5e94 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b - name : service1 # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b\u63d0\u4f9b serviceType : deployment # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 devContainerShell : \"bash\" # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 syncType : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 syncFilePattern : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreFilePattern : - \".git\" - \"./build\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 devPorts : - 8080:8080 - :8000 # \u968f\u673a\u672c\u5730\u7aef\u53e3, \u8fdc\u7aef 8000 # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/root/nocalhost-dev\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDir : # \u5f00\u53d1\u5bb9\u5668\u4e2d\u8981\u6301\u4e45\u5316\u7684\u76ee\u5f55\u8def\u5f84 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u586b - path : \"/root\" # \u76ee\u5f55\u7684\u5bb9\u91cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: 10Gi # \u53ef\u9009 capacity : 100Gi # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 buildCommand : [ \"./gradlew\" , \"package\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 runCommand : [ \"./gradlew\" , \"bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # \u8be5\u670d\u52a1\u7684\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false # \u6307\u5b9a DevContainer \u7684\u8d44\u6e90\u7533\u8bf7\u548c\u9650\u5236,\u914d\u7f6e\u4fe1\u606f\u7b26\u5408 Kubernetes \u5bf9\u8d44\u6e90\u9650\u5b9a\u7684\u7ea6\u5b9a (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5bf9\u8c61 # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 devContainerResources : limits : cpu : \"1\" memory : 1g requests : cpu : \"0.5\" memory : 200m - name : service2 ...","title":"Nocalhost \u914d\u7f6e\u8bf4\u660e"},{"location":"zh/References/nocalhost-config-yaml-spec/#nocalhost","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 # \u5e94\u7528\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : nocalhost # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManifest # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifestType : helmGit # helmGit\u7c7b\u578b\u6b64\u5b57\u6bb5\u4ee3\u8868 Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002helmRepo \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u65e0\u610f\u4e49\u3002rawManifest \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e\u3002 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b\u63d0\u4f9b resourcePath : [ \"deployments/chart\" ] # \u6307\u660e\u5e94\u7528\u662f\u5426\u4ee5\u6700\u5c0f\u526f\u672c\u6570\u91cf\u5b89\u88c5 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: boolean # \u9ed8\u8ba4\u503c: false # \u53ef\u9009 # \u5bf9\u5e94 nhctl \u53c2\u6570: TODO minimalInstall : false # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5b89\u88c5\u5b8c\u6bd5\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57,\u5bf9\u5e94 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b - name : service1 # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b\u63d0\u4f9b serviceType : deployment # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 devContainerShell : \"bash\" # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 syncType : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 syncFilePattern : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreFilePattern : - \".git\" - \"./build\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 devPorts : - 8080:8080 - :8000 # \u968f\u673a\u672c\u5730\u7aef\u53e3, \u8fdc\u7aef 8000 # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/root/nocalhost-dev\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDir : # \u5f00\u53d1\u5bb9\u5668\u4e2d\u8981\u6301\u4e45\u5316\u7684\u76ee\u5f55\u8def\u5f84 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u586b - path : \"/root\" # \u76ee\u5f55\u7684\u5bb9\u91cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: 10Gi # \u53ef\u9009 capacity : 100Gi # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 buildCommand : [ \"./gradlew\" , \"package\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 runCommand : [ \"./gradlew\" , \"bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # \u8be5\u670d\u52a1\u7684\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false # \u6307\u5b9a DevContainer \u7684\u8d44\u6e90\u7533\u8bf7\u548c\u9650\u5236,\u914d\u7f6e\u4fe1\u606f\u7b26\u5408 Kubernetes \u5bf9\u8d44\u6e90\u9650\u5b9a\u7684\u7ea6\u5b9a (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5bf9\u8c61 # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 devContainerResources : limits : cpu : \"1\" memory : 1g requests : cpu : \"0.5\" memory : 200m - name : service2 ...","title":"Nocalhost \u914d\u7f6e"},{"location":"zh/References/resource-management/","text":"\u5728 Nocalhost \u63d2\u4ef6\uff0c\u652f\u6301\u76f4\u63a5\u5bf9 Kubernetes \u8d44\u6e90\u76f4\u63a5\u8fdb\u884c\u4fee\u6539\uff0c\u652f\u6301\u8bf8\u5982 apply\u3001edit\u3001delete \u7b49\u64cd\u4f5c\u3002 \u8fdb\u884c\u8d44\u6e90\u7684\u4fee\u6539 \u8d44\u6e90\u7684\u4fee\u6539\u652f\u6301\u4efb\u610f\u7684 Kubernetes \u8d44\u6e90\uff0c \u76ee\u524d\u5904\u4e8e\u5f00\u53d1\u6a21\u5f0f\u4e2d\u7684 Deployment \u6682\u65e0\u6cd5\u4fee\u6539\uff0c\u540e\u7eed\u7684\u7248\u672c\u5c06\u5f00\u653e\u4fee\u6539\u3002 \u76f4\u63a5\u5728\u5de6\u4fa7\u5217\u8868\u70b9\u51fb\u67d0\u4e2a\u8d44\u6e90\u5373\u53ef\u6d4f\u89c8\uff0c\u4f8b\u5982\u70b9\u51fb Networks \u4fee\u6539 details \u7684 Services \u5b9a\u4e49\uff1a \u5c06\u5176\u7c7b\u578b\u7531 ClusterIp \u4fee\u6539\u4e3a NodePort\uff0c\u5e76\u4fdd\u5b58\uff0c\u5373\u53ef\u5b8c\u6210\u5bf9\u8d44\u6e90\u7684\u4fee\u6539\uff1a \u8fdb\u884c\u8d44\u6e90\u7684\u5220\u9664 \u4e0e\u4fee\u6539\u76f8\u540c\uff0c\u4efb\u610f\u7684\u8d44\u6e90\u90fd\u53ef\u88ab\u5220\u9664\uff0c\u4f8b\u5982\u5bf9\u4e00\u4e2a Pod \u8d44\u6e90\u8fdb\u884c\u5220\u9664\uff0c\u5728\u5217\u8868\u627e\u5230\u8fd9\u4e2a\u8d44\u6e90\uff0c\u70b9\u51fb\u53f3\u952e\uff0c\u9009\u62e9\u5220\u9664\uff1a \u8fdb\u884c\u8d44\u6e90\u7684\u5e94\u7528 \u5982\u679c\u4f60\u60f3\u8fdb\u884c Kubernetes \u8d44\u6e90\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u5728\u672c\u5730\u8fdb\u884c\u4e86\u67d0\u4e9b Kubernetes \u5e94\u7528\u8d44\u6e90\u5b9a\u4e49\u7684\u4fee\u6539\uff0c\u6216\u8005\u60f3\u8981\u65b0\u589e\u67d0\u4e9b\u8d44\u6e90\uff0c\u5bf9\u5e94 kubectl apply -f \uff0c\u53ef\u70b9\u51fb\u5e94\u7528\u53f3\u952e\uff0c\u9009\u62e9\u5177\u4f53\u7684\u6587\u4ef6\uff08\u6587\u4ef6\u5939\u7684\u652f\u6301\u6682\u672a\u4e0a\u7ebf\uff09\uff0c\u786e\u5b9a\u5373\u53ef\uff1a","title":"k8s \u8d44\u6e90\u7ba1\u7406"},{"location":"zh/References/resource-management/#_1","text":"\u8d44\u6e90\u7684\u4fee\u6539\u652f\u6301\u4efb\u610f\u7684 Kubernetes \u8d44\u6e90\uff0c \u76ee\u524d\u5904\u4e8e\u5f00\u53d1\u6a21\u5f0f\u4e2d\u7684 Deployment \u6682\u65e0\u6cd5\u4fee\u6539\uff0c\u540e\u7eed\u7684\u7248\u672c\u5c06\u5f00\u653e\u4fee\u6539\u3002 \u76f4\u63a5\u5728\u5de6\u4fa7\u5217\u8868\u70b9\u51fb\u67d0\u4e2a\u8d44\u6e90\u5373\u53ef\u6d4f\u89c8\uff0c\u4f8b\u5982\u70b9\u51fb Networks \u4fee\u6539 details \u7684 Services \u5b9a\u4e49\uff1a \u5c06\u5176\u7c7b\u578b\u7531 ClusterIp \u4fee\u6539\u4e3a NodePort\uff0c\u5e76\u4fdd\u5b58\uff0c\u5373\u53ef\u5b8c\u6210\u5bf9\u8d44\u6e90\u7684\u4fee\u6539\uff1a","title":"\u8fdb\u884c\u8d44\u6e90\u7684\u4fee\u6539"},{"location":"zh/References/resource-management/#_2","text":"\u4e0e\u4fee\u6539\u76f8\u540c\uff0c\u4efb\u610f\u7684\u8d44\u6e90\u90fd\u53ef\u88ab\u5220\u9664\uff0c\u4f8b\u5982\u5bf9\u4e00\u4e2a Pod \u8d44\u6e90\u8fdb\u884c\u5220\u9664\uff0c\u5728\u5217\u8868\u627e\u5230\u8fd9\u4e2a\u8d44\u6e90\uff0c\u70b9\u51fb\u53f3\u952e\uff0c\u9009\u62e9\u5220\u9664\uff1a","title":"\u8fdb\u884c\u8d44\u6e90\u7684\u5220\u9664"},{"location":"zh/References/resource-management/#_3","text":"\u5982\u679c\u4f60\u60f3\u8fdb\u884c Kubernetes \u8d44\u6e90\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u5728\u672c\u5730\u8fdb\u884c\u4e86\u67d0\u4e9b Kubernetes \u5e94\u7528\u8d44\u6e90\u5b9a\u4e49\u7684\u4fee\u6539\uff0c\u6216\u8005\u60f3\u8981\u65b0\u589e\u67d0\u4e9b\u8d44\u6e90\uff0c\u5bf9\u5e94 kubectl apply -f \uff0c\u53ef\u70b9\u51fb\u5e94\u7528\u53f3\u952e\uff0c\u9009\u62e9\u5177\u4f53\u7684\u6587\u4ef6\uff08\u6587\u4ef6\u5939\u7684\u652f\u6301\u6682\u672a\u4e0a\u7ebf\uff09\uff0c\u786e\u5b9a\u5373\u53ef\uff1a","title":"\u8fdb\u884c\u8d44\u6e90\u7684\u5e94\u7528"},{"location":"zh/References/syncfilepattern-ignorefilepattern/","text":"SyncFilePattern / IgnoreFilePattern \u8bf4\u660e \u5982\u679c\u67d0\u4e9b\u6587\u4ef6\u5e94\u8be5\u4e0e\u5176\u4ed6\u8bbe\u5907\u540c\u6b65\u6216\u4e0d\u540c\u6b65\uff0c\u8bf7\u914d\u7f6e\u76f8\u5e94\u7684 SyncFilePattern \u6216\u8005 IgnoreFilePattern \u3002\u6240\u6709 Pattern \u90fd\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5939\u6839\u76ee\u5f55\uff08\u8fdb\u5165 DevMode \u65f6\u9009\u62e9\u7684\u6587\u4ef6\u5939\uff09\u3002 \u8b66\u544a\uff1a IgnoreFilePattern \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e SyncFilePattern \uff0c\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u7684\u6a21\u5f0f\u90fd\u8986\u76d6\u4e86\u540c\u4e00\u6587\u4ef6\uff0c\u5219\u8be5\u6587\u4ef6\u5c06\u88ab\u5ffd\u7565\u3002 Pattern \u8bed\u6cd5 \u5e38\u89c4\u6587\u4ef6\u540d\u76f8\u4e92\u5339\u914d\uff0c\u5373 foo \u4e0e foo \uff0c subdir/foo \u4ee5\u53ca\u4efb\u4f55\u540d\u4e3a foo \u7684\u76ee\u5f55\u6216\u6587\u4ef6\u5339\u914d\u3002\u7a7a\u683c\u88ab\u89c6\u4e3a\u5e38\u89c4\u5b57\u7b26\uff0c\u4f46 prefix \u548c suffix \u7684\u7a7a\u683c\u4f1a\u81ea\u52a8\u5ffd\u7565\u6389\u3002 \u661f\u53f7 \uff08*\uff09\u4e0e\u6587\u4ef6\u540d\u4e2d\u7684\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u5339\u914d\uff0c\u4f46\u4e0e\u76ee\u5f55\u5206\u9694\u7b26\u4e0d\u5339\u914d\u3002 te*ne \u5339\u914d telephone \uff0c subdir/telephone \uff0c\u4f46\u4e0d\u5339\u914d tele/phone \u3002 \u53cc\u661f\u53f7 \uff08 ** \uff09\u4e0e\u4e0a\u8ff0\u5339\u914d\uff0c\u4f46\u540c\u65f6\u4e5f\u4e0e\u76ee\u5f55\u5206\u9694\u7b26\u5339\u914d\u3002 te**ne \u5339\u914d telephone \uff0c subdir/telephone \u548c \u201c tele/sub/dir/phone \u3002 \u95ee\u53f7 \uff08 \uff1f \uff09\u5339\u914d\u4e0d\u662f\u76ee\u5f55\u5206\u9694\u7b26\u7684\u5355\u4e2a\u5b57\u7b26\u3002 te??st \u5339\u914d tebest \uff0c\u4f46\u4e0d\u5339\u914d teb/st \u6216 test \u3002 \u65b9\u62ec\u53f7 \uff08 [] \uff09\u8868\u793a\u5b57\u7b26\u8303\u56f4\uff1a [a-z] \u5339\u914d\u4efb\u4f55\u5c0f\u5199\u5b57\u7b26\u3002 \u62ec\u53f7 \uff08 {} \uff09\u8868\u793a\u4e00\u7ec4\u7528\u9017\u53f7\u5206\u9694\u7684\u66ff\u4ee3\u9879\uff1a {banana\uff0cpineapple} \u5339\u914d banana \u6216 pineapple \u3002 \u53cd\u659c\u6760 \uff08 \\ \uff09\u201c\u8f6c\u4e49\u201d\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26\uff0c\u4f7f\u5176\u5931\u53bb\u5176\u7279\u6b8a\u542b\u4e49\u3002\u4f8b\u5982\uff0c \\{banana\\} \u4e0e {banana} \u5b8c\u5168\u5339\u914d\uff0c\u5e76\u4e0d\u8868\u793a\u4e0a\u8ff0\u7684\u4e00\u7ec4\u66ff\u4ee3\u9879\u3002 Windows\u4e0d\u652f\u6301\u8f6c\u4e49\u5b57\u7b26\u3002 \u4ee5 / \u6216 ./ \u5f00\u5934\u7684\u6a21\u5f0f\u4ec5\u5728\u6587\u4ef6\u5939\u7684\u6839\u76ee\u5f55\u4e2d\u5339\u914d\u3002 /foo \u6216 ./foo \u5339\u914d /foo \uff0c\u4f46\u4e0d\u5339\u914d subdir/foo \u3002 \u4ee5'\uff08 ?i \uff09'\u524d\u7f00\u5f00\u5934\u7684\u6a21\u5f0f\u542f\u7528\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u6a21\u5f0f\u5339\u914d\u3002 (?i)test \u5339\u914d test \uff0c TEST \u548c tEsT \u3002\u524d\u7f00\uff08 ?i \uff09\u53ef\u4ee5\u4e0e\u5176\u4ed6\u6a21\u5f0f\u7ec4\u5408\u4f7f\u7528\uff0c\u4f8b\u5982\u6a21\u5f0f\uff08 (?i)picture*.png \uff09\u5339\u914d Picture1.PNG \u3002 \u5728 Mac OS \u548c Windows \u4e0a\uff0c\u6a21\u5f0f\u59cb\u7ec8\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u793a\u4f8b \u7ed9\u5b9a\u76ee\u5f55\u5e03\u5c40\uff1a .DS_Store foo foofoo bar/ baz quux quuz bar2/ baz frobble My Pictures/ Img15.PNG nocalhost/ hello test/ team/ \u5e76\u4f7f\u7528\u4ee5\u4e0b\u914d\u7f6e\uff1a SyncFilePattern: - frobble - quuz - ./nocalhost IgnoreFilePattern: - foo - *2 - qu* - (?i)my pictures - nocalhost/t** IgnoreFilePattern \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e SyncFilePattern \u7684\u4f18\u5148\u7ea7\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a\uff1a foo # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"foo\" foofoo # \u540c\u6b65, \u4e0d\u7b26\u5408 IgnoreFilePattern \"foo\", \u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4f7f\u7528 \"foo*\" or \"*foo\" \u6765\u5ffd\u7565\u8fd9\u4e2a\u6587\u4ef6 bar/ # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e baz # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e quux # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"qu*\" quuz # \u5ffd\u7565, \u867d\u7136\u914d\u7f6e\u4e86 SyncFilePattern \"quuz\", \u4f46 IgnoreFilePattern \"qu*\" \u5ffd\u7565\u914d\u7f6e\u4f18\u5148\u7ea7\u66f4\u9ad8 bar2/ # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"*2\" baz # \u5ffd\u7565, \u7236\u76ee\u5f55\u88ab\u5ffd\u7565\u4e86 frobble # \u5ffd\u7565, \u7236\u76ee\u5f55\u88ab\u5ffd\u7565\u4e86 My Pictures/ # \u5ffd\u7565, \u7b26\u5408\u4e0d\u8ba1\u5927\u5c0f\u5199\u7684 IgnoreFilePattern \"(?i)my pictures\" pattern Img15.PNG # \u5ffd\u7565, \u7236\u76ee\u5f55\u88ab\u5ffd\u7565\u4e86 nocalhost/ # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e hello # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e test/ # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"nocalhost/t**\" team/ # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"nocalhost/t**\"","title":"\u6587\u4ef6\u540c\u6b65\u4e0e\u5ffd\u7565"},{"location":"zh/References/syncfilepattern-ignorefilepattern/#syncfilepattern-ignorefilepattern","text":"","title":"SyncFilePattern / IgnoreFilePattern"},{"location":"zh/References/syncfilepattern-ignorefilepattern/#_1","text":"\u5982\u679c\u67d0\u4e9b\u6587\u4ef6\u5e94\u8be5\u4e0e\u5176\u4ed6\u8bbe\u5907\u540c\u6b65\u6216\u4e0d\u540c\u6b65\uff0c\u8bf7\u914d\u7f6e\u76f8\u5e94\u7684 SyncFilePattern \u6216\u8005 IgnoreFilePattern \u3002\u6240\u6709 Pattern \u90fd\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5939\u6839\u76ee\u5f55\uff08\u8fdb\u5165 DevMode \u65f6\u9009\u62e9\u7684\u6587\u4ef6\u5939\uff09\u3002 \u8b66\u544a\uff1a IgnoreFilePattern \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e SyncFilePattern \uff0c\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u7684\u6a21\u5f0f\u90fd\u8986\u76d6\u4e86\u540c\u4e00\u6587\u4ef6\uff0c\u5219\u8be5\u6587\u4ef6\u5c06\u88ab\u5ffd\u7565\u3002","title":"\u8bf4\u660e"},{"location":"zh/References/syncfilepattern-ignorefilepattern/#pattern","text":"\u5e38\u89c4\u6587\u4ef6\u540d\u76f8\u4e92\u5339\u914d\uff0c\u5373 foo \u4e0e foo \uff0c subdir/foo \u4ee5\u53ca\u4efb\u4f55\u540d\u4e3a foo \u7684\u76ee\u5f55\u6216\u6587\u4ef6\u5339\u914d\u3002\u7a7a\u683c\u88ab\u89c6\u4e3a\u5e38\u89c4\u5b57\u7b26\uff0c\u4f46 prefix \u548c suffix \u7684\u7a7a\u683c\u4f1a\u81ea\u52a8\u5ffd\u7565\u6389\u3002 \u661f\u53f7 \uff08*\uff09\u4e0e\u6587\u4ef6\u540d\u4e2d\u7684\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u5339\u914d\uff0c\u4f46\u4e0e\u76ee\u5f55\u5206\u9694\u7b26\u4e0d\u5339\u914d\u3002 te*ne \u5339\u914d telephone \uff0c subdir/telephone \uff0c\u4f46\u4e0d\u5339\u914d tele/phone \u3002 \u53cc\u661f\u53f7 \uff08 ** \uff09\u4e0e\u4e0a\u8ff0\u5339\u914d\uff0c\u4f46\u540c\u65f6\u4e5f\u4e0e\u76ee\u5f55\u5206\u9694\u7b26\u5339\u914d\u3002 te**ne \u5339\u914d telephone \uff0c subdir/telephone \u548c \u201c tele/sub/dir/phone \u3002 \u95ee\u53f7 \uff08 \uff1f \uff09\u5339\u914d\u4e0d\u662f\u76ee\u5f55\u5206\u9694\u7b26\u7684\u5355\u4e2a\u5b57\u7b26\u3002 te??st \u5339\u914d tebest \uff0c\u4f46\u4e0d\u5339\u914d teb/st \u6216 test \u3002 \u65b9\u62ec\u53f7 \uff08 [] \uff09\u8868\u793a\u5b57\u7b26\u8303\u56f4\uff1a [a-z] \u5339\u914d\u4efb\u4f55\u5c0f\u5199\u5b57\u7b26\u3002 \u62ec\u53f7 \uff08 {} \uff09\u8868\u793a\u4e00\u7ec4\u7528\u9017\u53f7\u5206\u9694\u7684\u66ff\u4ee3\u9879\uff1a {banana\uff0cpineapple} \u5339\u914d banana \u6216 pineapple \u3002 \u53cd\u659c\u6760 \uff08 \\ \uff09\u201c\u8f6c\u4e49\u201d\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26\uff0c\u4f7f\u5176\u5931\u53bb\u5176\u7279\u6b8a\u542b\u4e49\u3002\u4f8b\u5982\uff0c \\{banana\\} \u4e0e {banana} \u5b8c\u5168\u5339\u914d\uff0c\u5e76\u4e0d\u8868\u793a\u4e0a\u8ff0\u7684\u4e00\u7ec4\u66ff\u4ee3\u9879\u3002 Windows\u4e0d\u652f\u6301\u8f6c\u4e49\u5b57\u7b26\u3002 \u4ee5 / \u6216 ./ \u5f00\u5934\u7684\u6a21\u5f0f\u4ec5\u5728\u6587\u4ef6\u5939\u7684\u6839\u76ee\u5f55\u4e2d\u5339\u914d\u3002 /foo \u6216 ./foo \u5339\u914d /foo \uff0c\u4f46\u4e0d\u5339\u914d subdir/foo \u3002 \u4ee5'\uff08 ?i \uff09'\u524d\u7f00\u5f00\u5934\u7684\u6a21\u5f0f\u542f\u7528\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u6a21\u5f0f\u5339\u914d\u3002 (?i)test \u5339\u914d test \uff0c TEST \u548c tEsT \u3002\u524d\u7f00\uff08 ?i \uff09\u53ef\u4ee5\u4e0e\u5176\u4ed6\u6a21\u5f0f\u7ec4\u5408\u4f7f\u7528\uff0c\u4f8b\u5982\u6a21\u5f0f\uff08 (?i)picture*.png \uff09\u5339\u914d Picture1.PNG \u3002 \u5728 Mac OS \u548c Windows \u4e0a\uff0c\u6a21\u5f0f\u59cb\u7ec8\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002","title":"Pattern \u8bed\u6cd5"},{"location":"zh/References/syncfilepattern-ignorefilepattern/#_2","text":"\u7ed9\u5b9a\u76ee\u5f55\u5e03\u5c40\uff1a .DS_Store foo foofoo bar/ baz quux quuz bar2/ baz frobble My Pictures/ Img15.PNG nocalhost/ hello test/ team/ \u5e76\u4f7f\u7528\u4ee5\u4e0b\u914d\u7f6e\uff1a SyncFilePattern: - frobble - quuz - ./nocalhost IgnoreFilePattern: - foo - *2 - qu* - (?i)my pictures - nocalhost/t** IgnoreFilePattern \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e SyncFilePattern \u7684\u4f18\u5148\u7ea7\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a\uff1a foo # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"foo\" foofoo # \u540c\u6b65, \u4e0d\u7b26\u5408 IgnoreFilePattern \"foo\", \u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4f7f\u7528 \"foo*\" or \"*foo\" \u6765\u5ffd\u7565\u8fd9\u4e2a\u6587\u4ef6 bar/ # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e baz # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e quux # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"qu*\" quuz # \u5ffd\u7565, \u867d\u7136\u914d\u7f6e\u4e86 SyncFilePattern \"quuz\", \u4f46 IgnoreFilePattern \"qu*\" \u5ffd\u7565\u914d\u7f6e\u4f18\u5148\u7ea7\u66f4\u9ad8 bar2/ # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"*2\" baz # \u5ffd\u7565, \u7236\u76ee\u5f55\u88ab\u5ffd\u7565\u4e86 frobble # \u5ffd\u7565, \u7236\u76ee\u5f55\u88ab\u5ffd\u7565\u4e86 My Pictures/ # \u5ffd\u7565, \u7b26\u5408\u4e0d\u8ba1\u5927\u5c0f\u5199\u7684 IgnoreFilePattern \"(?i)my pictures\" pattern Img15.PNG # \u5ffd\u7565, \u7236\u76ee\u5f55\u88ab\u5ffd\u7565\u4e86 nocalhost/ # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e hello # \u540c\u6b65, \u6ca1\u8fd9\u4e2a\u914d\u7f6e test/ # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"nocalhost/t**\" team/ # \u5ffd\u7565, \u7b26\u5408 IgnoreFilePattern \"nocalhost/t**\"","title":"\u793a\u4f8b"},{"location":"zh/References/compare/overview/","text":"Nocalhsot vs. Other Software \u8981\u5bf9\u6bd4\u4e0d\u540c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u5dee\u522b\u662f\u56f0\u96be\u7684\uff0c\u5c24\u5176\u662f\u5f53\u95ee\u5230\u662f\u5426\u53ef\u4ee5\u7528\u5176\u4ed6\u8f6f\u4ef6\u6765\u66ff\u4ee3\uff1f\u4ee5\u53ca\u4e0d\u540c\u7684\u8f6f\u4ef6\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u534f\u540c\u5417\uff1f \u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06 Nocalhost \u4e0e\u5176\u4ed6\u7684\u8f6f\u4ef6\u8fdb\u884c\u6bd4\u8f83. \u5efa\u8bae\u5148\u9605\u8bfb \u201cNocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\u201d \uff0c\u4ed6\u4eec\u6709\u52a9\u4e8e\u7406\u89e3 Nocalhost \u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8981\u52a0\u901f\u5728 Kubernetes \u73af\u5883\u4e0b\u7684\u5f00\u53d1\u76ee\u524d\u6709\u4e09\u79cd\u601d\u8def\uff1a \u76d1\u542c\u672c\u5730\u4ee3\u7801\u53d8\u66f4\uff0c\u53d1\u751f\u4fee\u6539\u540e\u7acb\u5373\u5728\u672c\u5730\u6267\u884c CI/CD \u6d41\u6c34\u7ebf\uff0c\u91cd\u65b0\u6784\u5efa\u5fae\u670d\u52a1\u955c\u50cf\u5e76\u4e14\u81ea\u52a8\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa4\u3002\u8fd9\u662f Google Cloud Code \u3001 Skaffold \u3001 Tilt \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a Proxy \u7f51\u7edc\u4ee3\u7406\u5bb9\u5668\uff0c\u8f6c\u53d1\u96c6\u7fa4\u5185\u7684\u6d41\u91cf\u5230\u672c\u5730\uff0c\u4ee5\u53ca\u8f6c\u53d1\u672c\u5730\u7684\u6d41\u91cf\u5230\u96c6\u7fa4\u3002\u672c\u5730\u4f7f\u7528 docker run \u8fd0\u884c\u5fae\u670d\u52a1\u5bb9\u5668\u3002\u8fd9\u662f Telepresence \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a\u5f00\u53d1\u5bb9\u5668\uff0c\u5e76\u5c06\u672c\u5730\u4ee3\u7801\u548c\u8fdc\u7aef\u76ee\u5f55\u6620\u5c04\uff0c\u6784\u5efa\u548c\u8fd0\u884c\u5fae\u670d\u52a1\u90fd\u5728\u8fdc\u7aef\u5bb9\u5668\u5185\u3002\u8fd9\u662f Nocalhost \u7684\u505a\u6cd5\u3002 \u6b64\u5916\uff0c Nocalhost \u8fd8\u63d0\u4f9b\u4e86\u5e94\u7528\u7ba1\u7406\u3001\u5f00\u53d1\u73af\u5883\u7ba1\u7406\u3001VS Code \u63d2\u4ef6\u3001IDEA \u63d2\u4ef6\u7b49\u6709\u5229\u4e8e\u6807\u51c6\u5316\u4ee5\u53ca\u52a0\u901f\u5f00\u53d1\u7684\u80fd\u529b\u3002 \u60a8\u53ef\u4ee5\u70b9\u51fb\u5de6\u4fa7\u7684\u83dc\u5355\u6d4f\u89c8 Nocalhost \u4e0e\u7279\u5b9a\u8f6f\u4ef6\u7684\u5bf9\u6bd4\u3002 \u8fd9\u4e9b\u6bd4\u8f83\u5e76\u4e0d\u662f\u8bf4\u670d\u60a8\u4f7f\u7528 Nocalhost\uff0c\u4e5f\u4e0d\u662f\u6709\u610f\u8d2c\u4f4e\u5176\u4ed6\u7684\u8f6f\u4ef6\u3002\u6211\u4eec\u7684\u76ee\u6807\u53ea\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3 Nocalhost \u4e0e\u5176\u4ed6\u8f6f\u4ef6\u5728\u529f\u80fd\u4e0a\u7684\u5dee\u5f02\uff0c\u5982\u679c\u60a8\u8ba4\u4e3a\u4efb\u4f55\u9648\u8ff0\u7684\u4e8b\u5b9e\u4e0d\u6b63\u786e\uff0c\u6b22\u8fce\u63d0\u4ea4 PR \u6539\u8fdb\u3002","title":"\u6982\u8ff0"},{"location":"zh/References/compare/overview/#nocalhsot-vs-other-software","text":"\u8981\u5bf9\u6bd4\u4e0d\u540c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u5dee\u522b\u662f\u56f0\u96be\u7684\uff0c\u5c24\u5176\u662f\u5f53\u95ee\u5230\u662f\u5426\u53ef\u4ee5\u7528\u5176\u4ed6\u8f6f\u4ef6\u6765\u66ff\u4ee3\uff1f\u4ee5\u53ca\u4e0d\u540c\u7684\u8f6f\u4ef6\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u534f\u540c\u5417\uff1f \u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06 Nocalhost \u4e0e\u5176\u4ed6\u7684\u8f6f\u4ef6\u8fdb\u884c\u6bd4\u8f83. \u5efa\u8bae\u5148\u9605\u8bfb \u201cNocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\u201d \uff0c\u4ed6\u4eec\u6709\u52a9\u4e8e\u7406\u89e3 Nocalhost \u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8981\u52a0\u901f\u5728 Kubernetes \u73af\u5883\u4e0b\u7684\u5f00\u53d1\u76ee\u524d\u6709\u4e09\u79cd\u601d\u8def\uff1a \u76d1\u542c\u672c\u5730\u4ee3\u7801\u53d8\u66f4\uff0c\u53d1\u751f\u4fee\u6539\u540e\u7acb\u5373\u5728\u672c\u5730\u6267\u884c CI/CD \u6d41\u6c34\u7ebf\uff0c\u91cd\u65b0\u6784\u5efa\u5fae\u670d\u52a1\u955c\u50cf\u5e76\u4e14\u81ea\u52a8\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa4\u3002\u8fd9\u662f Google Cloud Code \u3001 Skaffold \u3001 Tilt \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a Proxy \u7f51\u7edc\u4ee3\u7406\u5bb9\u5668\uff0c\u8f6c\u53d1\u96c6\u7fa4\u5185\u7684\u6d41\u91cf\u5230\u672c\u5730\uff0c\u4ee5\u53ca\u8f6c\u53d1\u672c\u5730\u7684\u6d41\u91cf\u5230\u96c6\u7fa4\u3002\u672c\u5730\u4f7f\u7528 docker run \u8fd0\u884c\u5fae\u670d\u52a1\u5bb9\u5668\u3002\u8fd9\u662f Telepresence \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a\u5f00\u53d1\u5bb9\u5668\uff0c\u5e76\u5c06\u672c\u5730\u4ee3\u7801\u548c\u8fdc\u7aef\u76ee\u5f55\u6620\u5c04\uff0c\u6784\u5efa\u548c\u8fd0\u884c\u5fae\u670d\u52a1\u90fd\u5728\u8fdc\u7aef\u5bb9\u5668\u5185\u3002\u8fd9\u662f Nocalhost \u7684\u505a\u6cd5\u3002 \u6b64\u5916\uff0c Nocalhost \u8fd8\u63d0\u4f9b\u4e86\u5e94\u7528\u7ba1\u7406\u3001\u5f00\u53d1\u73af\u5883\u7ba1\u7406\u3001VS Code \u63d2\u4ef6\u3001IDEA \u63d2\u4ef6\u7b49\u6709\u5229\u4e8e\u6807\u51c6\u5316\u4ee5\u53ca\u52a0\u901f\u5f00\u53d1\u7684\u80fd\u529b\u3002 \u60a8\u53ef\u4ee5\u70b9\u51fb\u5de6\u4fa7\u7684\u83dc\u5355\u6d4f\u89c8 Nocalhost \u4e0e\u7279\u5b9a\u8f6f\u4ef6\u7684\u5bf9\u6bd4\u3002 \u8fd9\u4e9b\u6bd4\u8f83\u5e76\u4e0d\u662f\u8bf4\u670d\u60a8\u4f7f\u7528 Nocalhost\uff0c\u4e5f\u4e0d\u662f\u6709\u610f\u8d2c\u4f4e\u5176\u4ed6\u7684\u8f6f\u4ef6\u3002\u6211\u4eec\u7684\u76ee\u6807\u53ea\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3 Nocalhost \u4e0e\u5176\u4ed6\u8f6f\u4ef6\u5728\u529f\u80fd\u4e0a\u7684\u5dee\u5f02\uff0c\u5982\u679c\u60a8\u8ba4\u4e3a\u4efb\u4f55\u9648\u8ff0\u7684\u4e8b\u5b9e\u4e0d\u6b63\u786e\uff0c\u6b22\u8fce\u63d0\u4ea4 PR \u6539\u8fdb\u3002","title":"Nocalhsot vs. Other Software"},{"location":"zh/References/compare/telepresence/","text":"Telepresence Telepresence \u901a\u8fc7\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u7f51\u7edc\u4ee3\u7406\u7684 Pod\uff0c\u8be5 Pod \u4f1a\u5c06 Kubernetes \u73af\u5883\u7684\u6570\u636e\uff08\u4f8b\u5982\uff1aTCP \u8fde\u63a5\u3001\u73af\u5883\u53d8\u91cf\u3001\u5377\uff09\u4ee3\u7406\u5230\u672c\u5730\u8fdb\u7a0b\u3002\u672c\u5730\u8fdb\u7a0b\u901a\u8fc7\u4ee3\u7406\u7684\u65b9\u5f0f\u8fde\u63a5\u5230\u8fdc\u7aef Kubernetes \u96c6\u7fa4\uff0c\u4ee5\u4fbf\u76f4\u63a5\u901a\u8fc7 DNS \u65b9\u5f0f\u8bbf\u95ee\u8fdc\u7aef\u5fae\u670d\u52a1\u3002 Telepresence \u7684\u7406\u5ff5\u975e\u5e38\u597d\uff0c\u4f46\u5177\u6709\u4ee5\u4e0b\u7f3a\u70b9\uff1a \u5728\u67d0\u4e9b\u53d7\u63a7\u7684\u7f51\u7edc\u73af\u5883\u4e0b\u53ef\u80fd\u65e0\u6cd5\u4e0e\u8fdc\u7aef\u96c6\u7fa4\u5efa\u7acb VPN \u8fde\u63a5\u3002 \u672c\u5730\u4f7f\u7528 Docker Run \u7684\u65b9\u5f0f\u8fd0\u884c\u670d\u52a1\uff0c\u53ef\u80fd\u548c Pod \u7684\u8fd0\u884c\u65b9\u5f0f\u5b58\u5728\u4e00\u5b9a\u5dee\u5f02\uff0c\u4f8b\u5982\u65e0\u6cd5\u6a21\u62df InitContainer \u4f7f\u7528 sshfs \u6765\u6302\u8f7d\u8fdc\u7aef\u7684\u5377\uff0c\u65e0\u6cd5\u652f\u6301\u6ca1\u6709 WSL \u7684 Windows\u3002 \u5f00\u53d1\u3001\u8c03\u8bd5\u6d41\u7a0b\u4e0d\u8fde\u7eed\uff0c\u9700\u8981\u5728\u4e0d\u540c\u9636\u6bb5\u4eba\u5de5\u6267\u884c\u6570\u6761\u547d\u4ee4\u3002","title":"Telepresence"},{"location":"zh/References/compare/telepresence/#telepresence","text":"Telepresence \u901a\u8fc7\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u7f51\u7edc\u4ee3\u7406\u7684 Pod\uff0c\u8be5 Pod \u4f1a\u5c06 Kubernetes \u73af\u5883\u7684\u6570\u636e\uff08\u4f8b\u5982\uff1aTCP \u8fde\u63a5\u3001\u73af\u5883\u53d8\u91cf\u3001\u5377\uff09\u4ee3\u7406\u5230\u672c\u5730\u8fdb\u7a0b\u3002\u672c\u5730\u8fdb\u7a0b\u901a\u8fc7\u4ee3\u7406\u7684\u65b9\u5f0f\u8fde\u63a5\u5230\u8fdc\u7aef Kubernetes \u96c6\u7fa4\uff0c\u4ee5\u4fbf\u76f4\u63a5\u901a\u8fc7 DNS \u65b9\u5f0f\u8bbf\u95ee\u8fdc\u7aef\u5fae\u670d\u52a1\u3002 Telepresence \u7684\u7406\u5ff5\u975e\u5e38\u597d\uff0c\u4f46\u5177\u6709\u4ee5\u4e0b\u7f3a\u70b9\uff1a \u5728\u67d0\u4e9b\u53d7\u63a7\u7684\u7f51\u7edc\u73af\u5883\u4e0b\u53ef\u80fd\u65e0\u6cd5\u4e0e\u8fdc\u7aef\u96c6\u7fa4\u5efa\u7acb VPN \u8fde\u63a5\u3002 \u672c\u5730\u4f7f\u7528 Docker Run \u7684\u65b9\u5f0f\u8fd0\u884c\u670d\u52a1\uff0c\u53ef\u80fd\u548c Pod \u7684\u8fd0\u884c\u65b9\u5f0f\u5b58\u5728\u4e00\u5b9a\u5dee\u5f02\uff0c\u4f8b\u5982\u65e0\u6cd5\u6a21\u62df InitContainer \u4f7f\u7528 sshfs \u6765\u6302\u8f7d\u8fdc\u7aef\u7684\u5377\uff0c\u65e0\u6cd5\u652f\u6301\u6ca1\u6709 WSL \u7684 Windows\u3002 \u5f00\u53d1\u3001\u8c03\u8bd5\u6d41\u7a0b\u4e0d\u8fde\u7eed\uff0c\u9700\u8981\u5728\u4e0d\u540c\u9636\u6bb5\u4eba\u5de5\u6267\u884c\u6570\u6761\u547d\u4ee4\u3002","title":"Telepresence"},{"location":"zh/References/compare/tilt-and-other/","text":"Tilt, Skaffold, Google Cloud Code Tilt, Skaffold, Google Cloud Code \u90fd\u53ef\u4ee5\u81ea\u52a8\u6267\u884c\u4ece\u672c\u5730\u4ee3\u7801\u66f4\u6539\u5230\u66f4\u65b0\u8fc7\u7a0b\u7684\u6240\u6709\u6b65\u9aa4\uff1a\u76d1\u89c6\u672c\u5730\u6587\u4ef6\uff0c\u91cd\u65b0\u6784\u5efa\u5bb9\u5668\u6620\u50cf\u5e76\u66f4\u65b0\u73af\u5883\uff0c\u5c31\u50cf\u662f\u81ea\u52a8\u5316\u7684 docker build && docker push && kubectl apply \u6216 docker-compose up \uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u672c\u5730\u7684 CI/CD \u5de5\u5177\u3002 \u4ed6\u4eec\u90fd\u65e0\u6cd5\u907f\u514d\u6bcf\u6b21\u66f4\u65b0\u4ee3\u7801\u90fd\u9700\u8981\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u5e76\u66f4\u65b0\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8fc7\u7a0b\u3002Tilt\u63a8\u51fa\u4e86\u4e00\u79cd\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u7684\u65b9\u6cd5 \u201clive_update\u201d \uff0c\u914d\u7f6e\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u5e76\u4e14\u4e5f\u53ea\u662f\u7f29\u77ed\u4e86 docker build \u7684\u65f6\u95f4\u3002 Skaffold \u5177\u6709 beta \u7248\u7684\u6587\u4ef6\u540c\u6b65\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u672c\u5730\u7684\u6539\u52a8\u6253\u5305\u6210 tar \u5e76\u540c\u6b65\u5230\u5bb9\u5668\u4e2d\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u3001\u91cd\u65b0\u90e8\u7f72\u548c\u91cd\u542f POD\uff0c\u4f46\u76ee\u524d\u4ecd\u7136\u6709\u4e00\u4e9b\u4f7f\u7528\u9650\u5236\u3002 Google Cloud Code \u9664\u4e86\u80fd\u591f\u81ea\u52a8\u8fdb\u884c CI/CD \u6d41\u7a0b\u4ee5\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4fbf\u4e8e\u5f00\u53d1\u7684 VS Code \u548c IDEA \u63d2\u4ef6\uff0c\u4f46\u5176\u4e0e Google \u7684\u4e91\u670d\u52a1\u6709\u8f83\u5f3a\u7684\u7ed1\u5b9a\u3002","title":"Tilt, Skaffold, Google Cloud Code"},{"location":"zh/References/compare/tilt-and-other/#tilt-skaffold-google-cloud-code","text":"Tilt, Skaffold, Google Cloud Code \u90fd\u53ef\u4ee5\u81ea\u52a8\u6267\u884c\u4ece\u672c\u5730\u4ee3\u7801\u66f4\u6539\u5230\u66f4\u65b0\u8fc7\u7a0b\u7684\u6240\u6709\u6b65\u9aa4\uff1a\u76d1\u89c6\u672c\u5730\u6587\u4ef6\uff0c\u91cd\u65b0\u6784\u5efa\u5bb9\u5668\u6620\u50cf\u5e76\u66f4\u65b0\u73af\u5883\uff0c\u5c31\u50cf\u662f\u81ea\u52a8\u5316\u7684 docker build && docker push && kubectl apply \u6216 docker-compose up \uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u672c\u5730\u7684 CI/CD \u5de5\u5177\u3002 \u4ed6\u4eec\u90fd\u65e0\u6cd5\u907f\u514d\u6bcf\u6b21\u66f4\u65b0\u4ee3\u7801\u90fd\u9700\u8981\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u5e76\u66f4\u65b0\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8fc7\u7a0b\u3002Tilt\u63a8\u51fa\u4e86\u4e00\u79cd\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u7684\u65b9\u6cd5 \u201clive_update\u201d \uff0c\u914d\u7f6e\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u5e76\u4e14\u4e5f\u53ea\u662f\u7f29\u77ed\u4e86 docker build \u7684\u65f6\u95f4\u3002 Skaffold \u5177\u6709 beta \u7248\u7684\u6587\u4ef6\u540c\u6b65\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u672c\u5730\u7684\u6539\u52a8\u6253\u5305\u6210 tar \u5e76\u540c\u6b65\u5230\u5bb9\u5668\u4e2d\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u3001\u91cd\u65b0\u90e8\u7f72\u548c\u91cd\u542f POD\uff0c\u4f46\u76ee\u524d\u4ecd\u7136\u6709\u4e00\u4e9b\u4f7f\u7528\u9650\u5236\u3002 Google Cloud Code \u9664\u4e86\u80fd\u591f\u81ea\u52a8\u8fdb\u884c CI/CD \u6d41\u7a0b\u4ee5\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4fbf\u4e8e\u5f00\u53d1\u7684 VS Code \u548c IDEA \u63d2\u4ef6\uff0c\u4f46\u5176\u4e0e Google \u7684\u4e91\u670d\u52a1\u6709\u8f83\u5f3a\u7684\u7ed1\u5b9a\u3002","title":"Tilt, Skaffold, Google Cloud Code"},{"location":"zh/Tutorials/nocalhost-with-helm/","text":"\u524d\u7f6e\u6761\u4ef6 \uff1a \u4e00\u4e2a Kubernetes(1.16+) \u96c6\u7fa4(\u5efa\u8bae\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\uff0cMinikube \u4e5f\u53ef\u4ee5) \u914d\u7f6e\u597d kubectl \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u96c6\u7fa4\u5fc5\u987b\u542f\u7528 RBAC \u5b89\u88c5\u597d Helm3 \u5b89\u88c5\u597d Visual Studio Code(1.52+) \u5b89\u88c5\u597d Git \u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef (nhctl, IDE plugin) , \u5b89\u88c5\u6559\u7a0b \u5b89\u88c5 Nocalhost \u670d\u52a1\u7aef (nocalhost-api, nocalhost-web) \u53c2\u8003\u5feb\u901f\u4e0a\u624b\u7684\u7b2c\u4e8c\u6b65 1.\u5e94\u7528\u914d\u7f6e 1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 Helm Chart \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: helmGit # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"charts/bookinfo/\"] # \u670d\u52a1\u7684 chart \u5305\u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4ed3\u5e93\u6839\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002 2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528, \u3010Manifest Type\u3011: \u5e94\u7528\u90e8\u7f72\u7c7b\u578b Helm Chart; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 Helm Chart Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: Helm Chart \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace, \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002 3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e \u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801 4. \u5e94\u7528\u90e8\u7f72 \u90e8\u7f72\u5e94\u7528, \u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7684 values.yaml \u6216\u8005\u81ea\u5b9a\u4e49\u7684 values.yaml\u3002 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c 5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1) 5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684 services.syncDirs \u8bbe\u7f6e\u4e3a\u7f16\u8bd1\u7684\u76ee\u5f55 \u5373\u53ef\u3002 6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f) \u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode 7. \u5e94\u7528\u5378\u8f7d \u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"Helm Chart \u5e94\u7528"},{"location":"zh/Tutorials/nocalhost-with-helm/#1","text":"1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 Helm Chart \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: helmGit # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"charts/bookinfo/\"] # \u670d\u52a1\u7684 chart \u5305\u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4ed3\u5e93\u6839\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002","title":"1.\u5e94\u7528\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-helm/#2-nocalhost","text":"Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528, \u3010Manifest Type\u3011: \u5e94\u7528\u90e8\u7f72\u7c7b\u578b Helm Chart; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 Helm Chart Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: Helm Chart \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace, \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002","title":"2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-helm/#3-nocalhost","text":"\u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801","title":"3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-helm/#4","text":"\u90e8\u7f72\u5e94\u7528, \u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7684 values.yaml \u6216\u8005\u81ea\u5b9a\u4e49\u7684 values.yaml\u3002 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c","title":"4. \u5e94\u7528\u90e8\u7f72"},{"location":"zh/Tutorials/nocalhost-with-helm/#5-devmode","text":"5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684 services.syncDirs \u8bbe\u7f6e\u4e3a\u7f16\u8bd1\u7684\u76ee\u5f55 \u5373\u53ef\u3002","title":"5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1)"},{"location":"zh/Tutorials/nocalhost-with-helm/#6-devmode","text":"\u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode","title":"6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f)"},{"location":"zh/Tutorials/nocalhost-with-helm/#7","text":"\u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"7. \u5e94\u7528\u5378\u8f7d"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/","text":"\u524d\u7f6e\u6761\u4ef6 \uff1a \u4e00\u4e2a Kubernetes(1.16+) \u96c6\u7fa4(\u5efa\u8bae\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\uff0cMinikube \u4e5f\u53ef\u4ee5) \u914d\u7f6e\u597d kubectl \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u96c6\u7fa4\u5fc5\u987b\u542f\u7528 RBAC \u5b89\u88c5\u597d Helm3 \u5b89\u88c5\u597d Visual Studio Code(1.52+) \u5b89\u88c5\u597d Git \u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef (nhctl, IDE plugin) , \u5b89\u88c5\u6559\u7a0b \u5b89\u88c5 Nocalhost \u670d\u52a1\u7aef (nocalhost-api, nocalhost-web) \u53c2\u8003\u5feb\u901f\u4e0a\u624b\u7684\u7b2c\u4e8c\u6b65 1.\u5e94\u7528\u914d\u7f6e 1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 manifest \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: rawManifest # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"manifest/templates\"] # \u670d\u52a1\u7684 deployment YAML \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002 2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528, \u3010Manifest Type\u3011: \u6307\u5b9a\u5e94\u7528\u90e8\u7f72\u7c7b\u578b manifest; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 manifest Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: manifest \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\u5e76\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace, \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002 3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e \u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801 4. \u5e94\u7528\u90e8\u7f72 \u90e8\u7f72\u5e94\u7528 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c 5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1) 5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684 services.syncDirs \u8bbe\u7f6e\u4e3a\u7f16\u8bd1\u7684\u76ee\u5f55 \u5373\u53ef\u3002 6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f) \u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode 7. \u5e94\u7528\u5378\u8f7d \u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"Manifest \u5e94\u7528"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#1","text":"1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 manifest \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: rawManifest # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"manifest/templates\"] # \u670d\u52a1\u7684 deployment YAML \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002","title":"1.\u5e94\u7528\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#2-nocalhost","text":"Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528, \u3010Manifest Type\u3011: \u6307\u5b9a\u5e94\u7528\u90e8\u7f72\u7c7b\u578b manifest; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 manifest Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: manifest \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\u5e76\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace, \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002","title":"2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#3-nocalhost","text":"\u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801","title":"3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#4","text":"\u90e8\u7f72\u5e94\u7528 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c","title":"4. \u5e94\u7528\u90e8\u7f72"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#5-devmode","text":"5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684 services.syncDirs \u8bbe\u7f6e\u4e3a\u7f16\u8bd1\u7684\u76ee\u5f55 \u5373\u53ef\u3002","title":"5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1)"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#6-devmode","text":"\u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode","title":"6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f)"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#7","text":"\u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"7. \u5e94\u7528\u5378\u8f7d"}]}